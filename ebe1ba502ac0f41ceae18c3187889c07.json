{"posts": [{"title": "\u5b66\u4e60Session", "date": "2020-03-26T09:22:23-00.00", "path": "/archives/414/", "text": "\u4f1a\u8bdd\n\u4e5f\u53eb\u4f1a\u8bdd\uff0c\u7531\u4e8e\u670d\u52a1\u5668\u2f46\u6cd5\u8bc6\u522b\u6bcf\u2f00\u6b21 HTTP \u8bf7\u6c42\u7684\u51fa\u5904\uff08\u4e5f\u5c31\u662f\u4e0d\u77e5\u9053\u6765\u81ea\u4e8e\u54ea\u4e2a\u7ec8\u7aef\uff09\uff0c\u5b83\u53ea\u4f1a\u63a5\u53d7\u5230\u2f00\u4e2a\u8bf7\u6c42\u4fe1\u53f7\uff0c\u6240\u4ee5\u5c31\u5b58\u5728\u2f00\u4e2a\u95ee\u9898\uff1a\u4e07\u4e00\u6d4f\u89c8\u5668\u5c06\u7528\u6237\u7684\u54cd\u5e94\u53d1\u9001\u7ed9\u4e86\u5176\u4ed6\u7684\u2f08\uff0c\u51fa\u73b0\u6570\u636e\u9519\u8bef\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u5fc5\u987b\u6709\u2f00\u79cd\u6280\u672f\u6765\u8ba9\u670d\u52a1\u5668\u77e5\u9053\u8bf7\u6c42\u6765\u81ea\u54ea\u91cc\uff0c\u8fd9\u5c31\u662f\u4f1a\u8bdd\u6280\u672f\u3002\n\u4f1a\u8bdd\uff1a\u5c31\u662f\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u53d1\u2f63\u7684\u2f00\u7cfb\u5217\u8fde\u7eed\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8fc7\u7a0b\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u64cd\u4f5c\u5230\u5173\u95ed\u6d4f\u89c8\u5668\u7684\u8fc7\u7a0b\u3002\n\u4f1a\u8bdd\u72b6\u6001\uff1a\u6307\u670d\u52a1\u5668\u548c\u6d4f\u89c8\u5668\u5728\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u501f\u52a9\u4e8e\u4f1a\u8bdd\u72b6\u6001\uff0c\u670d\u52a1\u5668\u80fd\u591f\u628a\u5c5e\u4e8e\u540c\u2f00\u6b21\u4f1a\u8bdd\u7684\u2f00\u7cfb\u5217\u8bf7\u6c42\u548c\u54cd\u5e94\u5173\u8054\u8d77\u6765\u3002\n\u5b9e\u73b0\u4f1a\u8bdd\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n\nsession\ncookie\n\n\nSession\n\u5c5e\u4e8e\u540c\u2f00\u6b21\u4f1a\u8bdd\u7684\u8bf7\u6c42\u90fd\u6709\u2f00\u4e2a\u76f8\u540c\u7684\u6807\u8bc6\u7b26\uff1asessionID\n\u6211\u4eec\u5230JSP\u4e2d\u53bb\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2ajsp\u9875\u9762\uff0c\u5c31\u53ebsessiontest.jsp\u5427\n&lt;body&gt;\n        &lt;%\n            String id = session.getId();\n        %&gt;\n        &lt;%=id%&gt;\n    &lt;/body&gt;\n\n\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u83b7\u53d6\u5230\u4e86ID\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u9875\u9762\uff0c\u518d\u6b21\u8bbf\u95ee\uff0c\u4f1a\u53d1\u73b0ID\u662f\u4e00\u6837\u7684\u3002\n\n\u5f53\u6211\u4eec\u5173\u95ed\u6d4f\u89c8\u5668\u540e\u91cd\u65b0\u6253\u5f00\u5e76\u8bbf\u95ee\uff0c\u4f1a\u53d1\u73b0\u6b64\u65f6ID\u5c31\u5df2\u7ecf\u4e0d\u540c\u5566\u3002\u8fd9\u5c31\u5f88\u597d\u7684\u89e3\u91ca\u4e86\u4e0a\u9762\u8bf4\u5230\u7684\u4f1a\u8bdd\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u53d1\u2f63\u7684\u2f00\u7cfb\u5217\u8fde\u7eed\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8fc7\u7a0b\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u64cd\u4f5c\u5230\u5173\u95ed\u6d4f\u89c8\u5668\u7684\u8fc7\u7a0b\u3002\nsession \u5e38\u7528\u7684\u65b9\u6cd5\uff1a\n\nString  getId()\uff1a \u83b7\u53d6sessionID\nvoid  setMaxInactiveInterval(int interval)\uff1a \u8bbe\u7f6e session \u7684\u5931\u6548\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2\nint  getMaxInactiveInterval()\uff1a \u83b7\u53d6\u5f53\u524d session \u7684\u5931\u6548\u65f6\u95f4\nvoid  invalidate()\uff1a \u8bbe\u7f6e session \u2f74\u5373\u5931\u6548\nvoid  setAttribute(String key,Object value)\uff1a \u901a\u8fc7\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\u6570\u636e\nObject  getAttribute(String key)\uff1a \u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e\nvoid  removeAttribute(String key)\uff1a \u901a\u8fc7\u952e\u5220\u9664\u5bf9\u5e94\u7684\u6570\u636e\n\n\u767b\u5f55\u9000\u51fa\n\u6211\u4eec\u4f7f\u7528session\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u767b\u5f55\u548c\u9000\u51fa\u529f\u80fd\u3002\n\u9996\u5148\u9700\u8981\u4e00\u63d0\u7684\u662f\uff0c\u6211\u4eec\u5728\u5199\u4e1a\u52a1\u4ee3\u7801\u65f6\u51e0\u4e4e\u6ca1\u4eba\u4f1a\u5199\u5728jsp\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e00\u4e2a\u535a\u5ba2\u7684\u6848\u4f8b\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\u6548\u679c\uff0c\u5b9e\u9645\u4e0a\u5f00\u53d1\u6211\u4eec\u9700\u8981Servlet\u548cJSP\u642d\u914d\u4f7f\u7528\uff0c\u4e0b\u9762\u6211\u4eec\u53bb\u770b\u770b\u5982\u4f55\u64cd\u4f5c\u3002\n\u9996\u5148\u6211\u5efa\u4e00\u4e2alogin2.jsp\u548cweclome.jsp\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u767b\u5f55\u9875\u9762\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u767b\u5f55\u6210\u529f\u540e\u7684\u9875\u9762\u3002\n\u6211\u4eec\u5148\u5199login2.jsp\uff0c\u5c06\u7528\u6237\u540d\u5bc6\u7801\u4f20\u9012\u5230login\u8def\u5f84\u4e0b\u8fdb\u884c\u9a8c\u8bc1\n&lt;form action=&quot;login&quot; method=&quot;post&quot;&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        \u7528\u6237\u540d\uff1a\n                    &lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        \u5bc6\u7801\uff1a\n                    &lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        &lt;input type=&quot;submit&quot; value=&quot;\u767b\u5f55&quot;&gt;\n                    &lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;input type=&quot;reset&quot; value=&quot;\u91cd\u7f6e&quot;&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/form&gt;\n\n\u6211\u4eec\u53bb\u5199\u4e00\u4e2aServlet\u7c7b\uff0c\u8d77\u540d\u4e3aLogin\uff0c\u6620\u5c04\u8def\u5f84\u5c31\u4e3alogin\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5e94\u8be5\u5199\u5728doPost\u4e0b\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u7684\u8868\u5355\u63d0\u4ea4\u7684\u65b9\u5f0f\u4e3apost\uff0c\u6211\u4eec\u83b7\u53d6\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u8ddf\u6211\u4eec\u9884\u671f\u7684\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c06\u7528\u6237\u540d\u4fdd\u5b58\u8fdbsession\uff0c\u8df3\u8f6c\u5230weclome.jsp\uff0c\u5982\u679c\u9a8c\u8bc1\u4e0d\u6210\u529f\u5219\u91cd\u65b0\u56de\u5230login2.jsp\n\u8fd9\u91cc\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u5199\u4ec0\u4e48getRequestDispatcher\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4f7f\u7528session\u7684\u65b9\u5f0f\u4fdd\u5b58\uff0c\u4e0d\u9700\u8981\u5c06request\u8f6c\u53d1\u7ed9\u4e0b\u4e00\u4e2a\u9875\u9762\u3002\n@WebServlet(&quot;/login&quot;)\npublic class Login extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String username = req.getParameter(&quot;username&quot;);\n        String password = req.getParameter(&quot;password&quot;);\n        if (username.equals(&quot;admin&quot;)&amp;&amp;password.equals(&quot;123456&quot;)) {\n            HttpSession session = req.getSession();\n            session.setAttribute(&quot;username&quot;,username);\n            resp.sendRedirect(&quot;weclome2.jsp&quot;);\n        }else{\n            resp.sendRedirect(&quot;login2.jsp&quot;);\n        }\n    }\n}\n\nweclome2.jsp\uff0c\n&lt;body&gt;\n        \u6b22\u8fce\u56de\u6765\uff0c\u4eb2\u7231\u7684&lt;%=session.getAttribute(&quot;username&quot;)%&gt;&lt;br&gt;\n        &lt;a href=&quot;loginout&quot;&gt;\u9000\u51fa\u767b\u5f55&lt;/a&gt;\n    &lt;/body&gt;\n\n\u6211\u4eec\u518d\u53bb\u5199\u4e00\u4e2aloginout\u8def\u5f84\u7684Servlet\u7c7b\uff0c\u8ba9session\u5931\u6548\u5373\u53ef\u5b9e\u73b0\u9000\u51fa\u767b\u5f55\u529f\u80fd\u3002\n@WebServlet(&quot;/loginout&quot;)\npublic class LoginOut extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.getSession().removeAttribute(&quot;username&quot;);\n        req.getSession().removeAttribute(&quot;password&quot;);\n        resp.sendRedirect(&quot;login2.jsp&quot;);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n    }\n}\n\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "Session", "slug": "Session", "permalink": "/tag/Session/"}]}, {"title": "JSP\u4e8c\uff1a\u638c\u63e1JSP", "date": "2020-03-25T17:59:00-00.00", "path": "/archives/413/", "text": "\u5728JSP\u4e2d\uff0crequest\u548cresponse\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e24\u4e2a\u4e1c\u897f\uff0c\u8bf7\u52a1\u5fc5\u77e5\u9053\u4ed6\u4eec\u7684\u5e38\u7528\u65b9\u6cd5\u3002\n\nrequest \u5e38\u7528\u65b9\u6cd5\uff1a\n1\u3001String getParameter(String key) \u83b7\u53d6\u5ba2\u6237\u7aef\u4f20\u6765\u7684\u53c2\u6570\u3002\n\u793a\u4f8b\uff1a \u6211\u4eec\u83b7\u53d6id\uff0cname\uff0cage \u591a\u4e2a\u53c2\u6570\u662f\u901a\u8fc7&amp;\u7b26\u53f7\u5206\u5f00\n&lt;%\n            String id = request.getParameter(&quot;id&quot;);\n            String name = request.getParameter(&quot;name&quot;);\n            String age = request.getParameter(&quot;age&quot;);\n        %&gt;\n        id\uff1a&lt;%=id%&gt;\uff0cname\uff1a&lt;%=name%&gt;\uff0cage=&lt;%=age%&gt;\n\n\u8bbf\u95ee\u5730\u5740http://localhost:8080/new_javaweb_test_war_exploded/test2.jsp?id=985&amp;name=xn2001&amp;age=16\n\n\n2\u3001void setAttribute(String key,Object value) \u901a\u8fc7\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e\u3002\n3\u3001Object getAttribute(String key) \u901a\u8fc7 key \u53d6\u51fa value\u3002\n4\u3001RequestDispatcher getRequestDispatcher(String path) \u8fd4\u56de\u2f00\u4e2a RequestDispatcher \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7684 forward \u2f45\u6cd5\u2f64\u4e8e\u8bf7\u6c42\u8f6c\u53d1\u3002\n\u6211\u4eec\u5bf9\u524d\u56db\u4e2a\u65b9\u6cd5\u505a\u4e00\u4e2a\u5c0f\u6848\u4f8b\uff0c\u9996\u5148\u6211\u4eec\u5efa\u7acb\u51e0\u4e2ajsp\u9875\u9762\uff0c\u5206\u522b\u53ebhello1\uff0chello2\uff0chello3\n\u6211\u4eec\u8ba9hello1\u83b7\u53d6\u4e00\u4e2aname\u53c2\u6570\uff0c\u4fdd\u5b58\u5230key\u4e3aname\u4e2d\uff0c\u7136\u540e\u8f6c\u53d1\u7ed9hello2.jsp\uff0chello2\u4e0d\u505a\u5904\u7406\u76f4\u63a5\u8f6c\u53d1\u7ed9hello3.jsp\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\nhello1.jsp\n&lt;body&gt;\n        &lt;h1&gt;\u6211\u662fHello1&lt;/h1&gt;\n        &lt;%\n            //\u83b7\u53d6name\u503c\n            String name = request.getParameter(&quot;name&quot;);\n            request.setAttribute(&quot;name&quot;,name);\n        %&gt;\n        &lt;%\n            // \u8bf7\u6c42\u5206\u53d1\u8df3\u8f6c\n            request.getRequestDispatcher(&quot;hello2.jsp&quot;).forward(request,response);\n        %&gt;\n    &lt;/body&gt;\n\nhello2.jsp\n&lt;body&gt;\n        &lt;h1&gt;\u6211\u662fHello2&lt;/h1&gt;\n        &lt;%\n            request.getRequestDispatcher(&quot;hello3.jsp&quot;).forward(request,response);\n        %&gt;\n    &lt;/body&gt;\n\nhello3.jsp\n&lt;body&gt;\n        &lt;h1&gt;\u6211\u662fHello3&lt;/h1&gt;\n        &lt;%=request.getAttribute(&quot;name&quot;)%&gt;\n    &lt;/body&gt;\n\n\u6211\u4eec\u542f\u52a8\u9879\u76ee\uff0c\u5230\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95eehello1.jsp\uff0c\u4f1a\u53d1\u73b0\u5176\u5b9e\u8bbf\u95ee\u7684\u662fhello3.jsp\u4e2d\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u5730\u5740\u680f\u4e0d\u6539\u53d8\uff0cname\u503c\u4e5f\u6210\u529f\u53d6\u51fa\u6765\u3002\n\n\n5\u3001String[] getParameterValues() \u83b7\u53d6\u5ba2\u6237\u7aef\u4f20\u6765\u7684\u591a\u4e2a\u540c\u540d\u53c2\u6570\u3002\n\u5b9e\u4f8b\uff1a\n\u6211\u5728test2.jsp\u4e2d\u52a0\u5165\u8be5\u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u83b7\u53d6\u591a\u4e2aname\uff0c\u4fdd\u5b58\u4e3a\u6570\u7ec4\u3002\n&lt;body&gt;\n        &lt;%\n            String id = request.getParameter(&quot;id&quot;);\n            String[] name = request.getParameterValues(&quot;name&quot;);\n            String age = request.getParameter(&quot;age&quot;);\n        %&gt;\n\n        id\uff1a&lt;%=id%&gt;\uff0cname\uff1a&lt;%=Arrays.toString(name)%&gt;\uff0cage=&lt;%=age%&gt;\n\n    &lt;/body&gt;\n\n\u8bbf\u95ee\u5730\u5740/test2.jsp?name=\u4e50\u5fc3\u6e56&amp;name=\u5fc3\u6e56\u535a\u5ba2&amp;id=211&amp;age=16\n\n6\u3001void setCharacterEncoding(String charset) \u6307\u5b9a\u6bcf\u4e2a\u8bf7\u6c42\u7684\u7f16\u7801\u3002\u4e2d\u6587\u4e71\u7801\u65f6\u9700\u8981\u8bbe\u7f6e\uff0c\u4e0d\u4e71\u7801\u4e00\u822c\u7528\u4e0d\u5230\u3002\nHTTP \u8bf7\u6c42\u72b6\u6001\u7801\n200\uff1a\u6b63\u5e38\n404\uff1a\u8d44\u6e90\u627e\u4e0d\u5230\n400\uff1a\u8bf7\u6c42\u7c7b\u578b\u4e0d\u5339\u914d\n500\uff1aJava \u7a0b\u5e8f\u629b\u51fa\u5f02\u5e38\nresponse \u5e38\u7528\u65b9\u6cd5\uff1a\nsendRedirect(String path)\uff1a\u91cd\u5b9a\u5411\uff0c\u9875\u9762\u4e4b\u95f4\u7684\u8df3\u8f6c\u3002\n\u8f6c\u53d1 getRequestDispatcher \u548c \u91cd\u5b9a\u5411 sendRedirect \u7684\u533a\u522b\uff1a\n\n\u8f6c\u53d1\u662f\u5c06\u540c\u2f00\u4e2a\u8bf7\u6c42\u4f20\u7ed9\u4e0b\u2f00\u4e2a\u9875\u9762\n\n\u91cd\u5b9a\u5411\u662f\u521b\u5efa\u2f00\u4e2a\u65b0\u7684\u8bf7\u6c42\u4f20\u7ed9\u4e0b\u2f00\u4e2a\u9875\u9762\uff0c\u4e4b\u524d\u7684\u8bf7\u6c42\u5c06\u7ed3\u675f\u2f63\u547d\u5468\u671f\u3002\n\n\n\u6269\u5c55\n\u9762\u8bd5\u5e38\u95ee\uff1a\n\u8f6c\u53d1\u548c\u91cd\u5b9a\u5411\u6709\u4ec0\u4e48\u533a\u522b\n\u8f6c\u53d1\uff1a\u540c\u2f00\u4e2a\u8bf7\u6c42\u5728\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9012\uff0c\u5730\u5740\u680f\u4e0d\u53d8\uff0c\u4e5f\u53eb\u670d\u52a1\u5668\u8df3\u8f6c\u3002\n\u91cd\u5b9a\u5411\uff1a\u7531\u5ba2\u6237\u7aef\u53d1\u9001\u2f00\u6b21\u65b0\u7684\u8bf7\u6c42\u6765\u8bbf\u95ee\u8df3\u8f6c\u540e\u7684\u2f6c\u6807\u8d44\u6e90\uff0c\u5730\u5740\u680f\u6539\u53d8\uff0c\u4e5f\u53eb\u5ba2\u6237\u7aef\u8df3\u8f6c\u3002\n\u5b9e\u4f8b\uff1a\n\u5982\u679c\u4e24\u4e2a\u9875\u9762\u4e4b\u95f4\u9700\u8981\u901a\u8fc7 request \u6765\u4f20\u503c\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u8f6c\u53d1\uff0c\u4e0d\u80fd\u4f7f\u7528\u91cd\u5b9a\u5411\u3002\n\u5728\u7528\u6237\u767b\u5f55\u529f\u80fd\u91cc\uff0c\u5982\u679c\u2f64\u6237\u540d\u548c\u5bc6\u7801\u6b63\u786e\uff0c\u5219\u8df3\u8f6c\u5230\u9996\u9875\uff08\u8f6c\u53d1\uff09\uff0c\u5e76\u4e14\u5c55\u793a\u7528\u6237\u540d\uff0c\u5426\u5219\u91cd\u65b0\u56de\u5230\u767b\u9646\u9875\u9762\uff08\u91cd\u5b9a\u5411\uff09\u3002\n\u6211\u4eec\u53bb\u5199\u4e00\u5957\u5b8c\u6574\u7684\u767b\u5f55\u7cfb\u7edf\uff0c\n\u9996\u5148\u65b0\u5efa\u4e00\u4e2alogin.jsp\uff0c\u91cc\u9762\u662f\u4e00\u4e2a\u8868\u5355\uff0c\u6709\u7528\u6237\u540d\uff0c\u5bc6\u7801\uff0c\u767b\u5f55\n&lt;body&gt;\n        &lt;form action=&quot;check.jsp&quot; method=&quot;post&quot;&gt;\n            \u7528\u6237\u540d\uff1a&lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt;&lt;br&gt;\n            \u5bc6\u7801\uff1a&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;\n            &lt;input type=&quot;submit&quot; value=&quot;\u767b\u5f55&quot;&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n\n\u6211\u4eec\u70b9\u51fb\u767b\u5f55\u4f1a\u63d0\u4ea4\u5230check.jsp\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53bb\u5199\u8fd9\u4e2ajsp\uff0c\u6211\u4eec\u5728\u91cc\u9762\u52a0\u5165\u9a8c\u8bc1\u7528\u6237\u540d\u5bc6\u7801\u7684\u529f\u80fd\uff0c\u5982\u679c\u6b63\u786e\u5c31\u8f6c\u53d1\u7ed9welcome.jsp\uff0c\u56e0\u4e3a\u8f6c\u53d1\u624d\u53ef\u4ee5\u4f20\u9012request\u3002\u5931\u8d25\u5c31\u91cd\u5b9a\u5411\u5230login.jsp\n&lt;body&gt;\n        &lt;%\n            String username = request.getParameter(&quot;username&quot;);\n            String password = request.getParameter(&quot;password&quot;);\n            if (username.equals(&quot;admin&quot;)&amp;&amp;password.equals(&quot;123456&quot;)){\n                request.setAttribute(&quot;name&quot;,username);\n                request.getRequestDispatcher(&quot;welcome.jsp&quot;).forward(request,response);\n            }else{\n                response.sendRedirect(&quot;login.jsp&quot;);\n            }\n        %&gt;\n    &lt;/body&gt;\n\n\u6211\u4eec\u53bb\u5199\u4e00\u4e2a\u7b80\u5355welcome.jsp\n&lt;body&gt;\n        &lt;%\n            String name = (String) request.getAttribute(&quot;name&quot;);\n        %&gt;\n\n        \u4f60\u597d&lt;%=name%&gt;,\u6b22\u8fce\u6765\u5230\u5fc3\u6e56\u6f14\u793a\u3002\n    &lt;/body&gt;\n\n\u542f\u52a8\u9879\u76ee\uff0c\u8bbf\u95eelogin.jsp\uff0c\u8fdb\u884c\u6d4b\u8bd5\u3002\u6548\u679c\u5982\u4e0b\u56fe\u3002\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "jsp", "slug": "jsp", "permalink": "/tag/jsp/"}]}, {"title": "JSP\u4e00\uff1a\u7406\u89e3JSP", "date": "2020-03-25T17:59:00-00.00", "path": "/archives/412/", "text": "\u4e86\u89e3JSP\nJSP \u672c\u8d28\u4e0a\u5c31\u662f\u2f00\u4e2a Servlet\uff0cJSP \u4e3b\u8981\u8d1f\u8d23\u4e0e\u2f64\u6237\u4ea4\u4e92\uff0c\u5c06\u6700\u7ec8\u7684\u754c\u2faf\u5448\u73b0\u7ed9\u2f64\u6237\u3002\n\u5728Java\u4e2d\uff0c\u53ea\u6709Servlet\u63a5\u53e3\u624d\u53ef\u4ee5\u4e8e\u6d4f\u89c8\u5668\u4ea4\u4e92\u3002\n\u4e00\u4e2aHTML+JS+CSS+Java \u7684\u6df7\u5408\u2f42\u4ef6\u3002\nJSP\u5f15\u64ce\u4f1a\u5c06\u4f60\u5199\u597d\u4e86\u7684jsp\u8f6c\u5316\u4e3aJava\u7c7b\uff0c\u4e5f\u5c31\u662fServlet\u7c7b\uff0c\u5982\u679c\u4f60\u53bb\u770b\u4ed6\u8f6c\u5316\u4e4b\u540e\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u539f\u59cbServlet\u7684servletResponse.getWriter().write()\u65b9\u6cd5\u6765\u5199html\u7684\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u670d\u52a1\u5668\u63a5\u6536\u5230\u2f00\u4e2a\u540e\u7f00\u662f jsp \u7684\u8bf7\u6c42\u65f6\uff0c\u5c06\u8be5\u8bf7\u6c42\u4ea4\u7ed9 JSP \u5f15\u64ce\u53bb\u5904\u7406\uff0c\u6bcf\u2f00\u4e2a JSP \u9875\u9762\u7b2c\u2f00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\uff0cJSP \u5f15\u64ce\u4f1a\u5c06\u5b83\u7ffb\u8bd1\u6210\u2f00\u4e2a Servlet \u2f42\u4ef6\uff0c\u518d\u7531 Web \u5bb9\u5668\u8c03\u2f64 Servlet \u5b8c\u6210\u54cd\u5e94\u3002\n\u5982\u679c\u4f60\u5355\u7eaf\u4ece\u5f00\u53d1\u7684\u89d2\u5ea6\u53bb\u770b\uff0cJSP \u5c31\u662f\u5728 HTML \u4e2d\u5d4c\u2f0a Java \u7a0b\u5e8f\u3002\n\u5d4c\u5165\u65b9\u5f0f\n1\uff0eJSP \u811a\u672c\uff0c\u6267\u2f8f Java \u903b\u8f91\u4ee3\u7801\n&lt;% Java\u4ee3\u7801 %&gt;\n\n\u6211\u4eec\u53bb\u65b0\u5efa\u4e00\u4e2aJSP\u9875\u9762\uff0c\u5c31\u53ebtest.jsp\uff0c\u8fd0\u884c\u9879\u76ee\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u8be5\u9875\u9762\u3002\n\u5728body\u4e2d\u52a0\u5165\n&lt;%\n            String s = &quot;Hello JSP&quot;;\n            System.out.println(s);\n        %&gt;\n\n\n\n2\uff0eJSP \u58f0\u660e\uff1a\u5b9a\u4e49 Java \u2f45\u6cd5\n&lt;%!\n \u58f0\u660e Java \u2f45\u6cd5\n%&gt;\n\n\u793a\u4f8b\uff1a\n&lt;%!\n           public String hello(){\n               return &quot;hhaa&quot;;\n           }\n        %&gt;\n\n        &lt;%\n            System.out.println(hello());\n        %&gt;\n\n\n\n3\uff0eJSP \u8868\u8fbe\u5f0f\uff1a\u628a Java \u5bf9\u8c61\u76f4\u63a5\u8f93\u51fa\u5230 HTML \u2eda\u2faf\u4e2d\n&lt;%= Java\u53d8\u91cf %&gt;\n\n\u793a\u4f8b\uff1a\n&lt;%=hello()%&gt;\n\n\u5185\u7f6e\u5bf9\u8c61\n\u4e00\u5171\u67099\u4e2a\u5185\u7f6e\u5bf9\u8c61\uff0c\u5e38\u7528\u7684\u662f request\u3001response\u3001session\u3001application\u3001pageContext\n\nrequest\uff1a\u8868\u793a\u2f00\u6b21\u8bf7\u6c42\uff0cHttpServletRequest\u3002\n\nresponse\uff1a\u8868\u793a\u2f00\u6b21\u54cd\u5e94\uff0cHttpServletResponse\u3002\n\npageContext\uff1a\u9875\u9762\u4e0a\u4e0b\u2f42\uff0c\u83b7\u53d6\u9875\u9762\u4fe1\u606f\uff0cPageContext\u3002\n\nsession\uff1a\u8868\u793a\u2f00\u6b21\u4f1a\u8bdd\uff0c\u4fdd\u5b58\u7528\u6237\u4fe1\u606f\uff0cHttpSession\u3002\n\napplication\uff1a\u8868\u793a\u5f53\u524d Web \u5e94\u7528\uff0c\u5168\u5c40\u5bf9\u8c61\uff0c\u4fdd\u5b58\u6240\u6709\u2f64\u6237\u5171\u4eab\u4fe1\u606f\uff0cServletContext\u3002\n\nconfifig\uff1a\u5f53\u524d JSP \u5bf9\u5e94\u7684 Servlet \u7684 ServletConfifig \u5bf9\u8c61\uff0c\u83b7\u53d6\u5f53\u524d Servlet \u7684\u4fe1\u606f\u3002\n\nout\uff1a\u5411\u6d4f\u89c8\u5668\u8f93\u51fa\u6570\u636e\uff0cJspWriter\u3002\n\npage\uff1a\u5f53\u524d JSP \u5bf9\u5e94\u7684 Servlet \u5bf9\u8c61\uff0cServlet\u3002\n\nexception\uff1a\u8868\u793a JSP \u9875\u9762\u53d1\u2f63\u7684\u5f02\u5e38\uff0cException\u3002\u5f88\u5c11\u7528\u5230\u3002\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "jsp", "slug": "jsp", "permalink": "/tag/jsp/"}]}, {"title": "JavaWeb\u7b14\u8bb0\u6307\u5357", "date": "2020-03-24T23:43:00-00.00", "path": "/archives/411/", "text": "1.\u5f00\u7ae0\nJavaWeb \u9879\u76ee\u642d\u5efa\n2.Servlet\nServlet \u4e00\uff1a\u4f7f\u7528 Servlet\nServlet \u4e8c\uff1a\u638c\u63e1 Servlet\nServlet \u4e09\uff1a\u771f\u6b63\u5f00\u53d1\u4e2d\u7684 Servlet\n\u4e00\u7bc7\u4e0d\u63a8\u8350\u6ca1\u6709\u57fa\u7840\u7684\u540c\u5b66\u770b\u7684\u65e9\u671f\u7b14\u8bb0\uff0cJavaWeb \u4e4b Servlet \u7b14\u8bb0\n3.JSP\nJSP \u4e00\uff1a\u7406\u89e3 JSP\nJSP \u4e8c\uff1a\u638c\u63e1 JSP\n\u5e38\u89c1\u9519\u8bef\nTomcat \u5728 idea \u4e2d\u4e71\u7801\nJavaWeb \u5e38\u89c1\u7684\u4e71\u7801\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u603b\u7ed3\nJavaWeb\u9879\u76ee\u4f7f\u7528Tomcat\uff08idea\uff09\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}, {"name": "\u6c47\u603b", "slug": "\u6c47\u603b", "permalink": "/tag/\u6c47\u603b/"}]}, {"title": "Servlet\u4e09\uff1a\u771f\u6b63\u5f00\u53d1\u4e2d\u7684Servlet", "date": "2020-03-24T23:17:00-00.00", "path": "/archives/410/", "text": "\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u51e0\u4e4e\u4e0d\u9700\u8981\u4f7f\u7528\u5230init\u548cdestory\uff0c\u6211\u4eec\u53ea\u7528\u5230service\uff0c\u6240\u4ee5\u5b98\u65b9\u5e2e\u6211\u4eec\u6700\u540e\u4f18\u5316\u51fa\u4e86HttpServlet\uff0c\u6211\u4eec\u5f00\u53d1\u9879\u76ee\u65f6\u76f4\u63a5\u53bb\u7ee7\u627f\u5373\u53ef\u3002\nServlet\u7684\u5c42\u6b21\u7ed3\u6784\nServlet ---&gt; GenericServlet ---&gt; HttpServlet\nGenericServlet \u5b9e\u73b0 Servlet \u63a5\u2f1d\uff0c\u540c\u65f6\u4e3a\u5b83\u7684\u2f26\u7c7b\u5c4f\u853d\u4e86\u4e0d\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u2f26\u7c7b\u53ea\u9700\u8981\u91cd\u5199 service \u2f45\u6cd5\u5373\u53ef\u3002\nHttpServlet \u7ee7\u627f GenericServlet\uff0c\u6839\u636e\u8bf7\u6c42\u7c7b\u578b\u8fdb\u2f8f\u5206\u53d1\u5904\u7406\uff0cGET \u8fdb\u2f0a doGET \u2f45\u6cd5\uff0cPOST \u8fdb\u2f0adoPOST \u65b9\u6cd5\u3002\n\u5f00\u53d1\u8005\u2f83\u5b9a\u4e49\u7684 Servlet \u7c7b\u53ea\u9700\u8981\u7ee7\u627f HttpServlet \u5373\u53ef\uff0c\u91cd\u65b0 doGET \u548c doPOST\u3002\nHTTP \u8bf7\u6c42\nHTTP \u8bf7\u6c42\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u5e38\u2f64\u7684\u6709\u56db\u79cd\uff1a\n\nGET \u8bfb\u53d6\n\nPOST \u4fdd\u5b58\n\nPUT \u4fee\u6539\n\nDELETE \u5220\u9664\n\n\n\u5f00\u53d1\u4f7f\u7528\n\u5b8c\u6574\u4ee3\u7801\uff1a\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * Created by \u4e50\u5fc3\u6e56 on 2020/3/24 17:31\n */\n@WebServlet(&quot;/http&quot;)\npublic class HttpServletTest extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.getWriter().write(&quot;Hello World&quot;);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        super.doPost(req, resp);\n    }\n}\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "Servlet", "slug": "Servlet", "permalink": "/tag/Servlet/"}]}, {"title": "Servlet\u4e8c\uff1a\u638c\u63e1Servlet", "date": "2020-03-24T23:15:00-00.00", "path": "/archives/409/", "text": "Servlet\u7684\u751f\u547d\u5468\u671f\n1\u3001\u5f53\u6d4f\u89c8\u5668\u7b2c\u4e00\u6b21\u8bbf\u95ee Servlet \u7684\u65f6\u5019\uff0cTomcat \u4f1a\u67e5\u8be2\u5f53\u524d Servlet \u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u6267\u884c\u7b2c2\u6b65\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u76f4\u63a5\u6267\u2f8f\u7b2c 3 \u6b65\u3002\n2\u3001\u8c03\u2f64 init \u2f45\u6cd5\u5b8c\u6210\u521d\u59cb\u5316\u64cd\u4f5c\u3002\n3\u3001\u8c03\u2f64 service \u2f45\u6cd5\u5b8c\u6210\u4e1a\u52a1\u903b\u8f91\u64cd\u4f5c\u3002\n4\u3001\u5173\u95ed Tomcat \u65f6\uff0c\u4f1a\u8c03\u2f64 destory \u2f45\u6cd5\uff0c\u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u6240\u5360\u2f64\u7684\u8d44\u6e90\u3002\n\u6ca1\u6709\u5b9e\u9645\u6f14\u793a\u7684\u4ecb\u7ecd\u5c31\u662f\u800d\u6d41\u6c13\uff0c\u7a7a\u6d1e\u65e0\u529b\u3002\n\u6f14\u793a\uff1a\n\u6211\u4eec\u521b\u5efa\u4e00\u4e2aServletTest\u7c7b\uff0c\u540c\u6837\u53bb\u5b9e\u73b0Servlet\u63a5\u53e3\uff0c\u91cd\u5199\u65b9\u6cd5\u3002\u5e76\u4e14\u6211\u4eec\u6620\u5c04\u5230\u5730\u5740\u4e3a/test\n\u7ed9\u4e0a\u9762\u4ecb\u7ecd\u4e09\u4e2a\u65b9\u6cd5\u5206\u522b\u52a0\u5165\u6253\u5370\u4e00\u53e5\u8bdd\u7684\u529f\u80fd\u3002\n\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n@WebServlet(&quot;/test&quot;)\npublic class ServletTest implements Servlet {\n    @Override\n    public void init(ServletConfig servletConfig) throws ServletException {\n        System.out.println(&quot;\u6211\u662finit&quot;);\n    }\n\n    @Override\n    public ServletConfig getServletConfig() {\n        return null;\n    }\n\n    @Override\n    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {\n        System.out.println(&quot;\u6211\u662fservice&quot;);\n    }\n\n    @Override\n    public String getServletInfo() {\n        return null;\n    }\n\n    @Override\n    public void destroy() {\n        System.out.println(&quot;\u6211\u662fdestory&quot;);\n    }\n}\n\n\u6211\u4eec\u8bbf\u95eehttp://localhost:8080/new_javaweb_test_war_exploded/test\uff0c\u4e3a\u4e86\u6548\u679c\u660e\u663e\uff0c\u6211\u4eec\u591a\u5237\u65b0\u51e0\u6b21\u8be5\u9875\u9762\uff0c\u56de\u5230idea\u63a7\u5236\u53f0\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u6709\u7b2c\u4e00\u6b21\u4f1a\u6253\u5370init\uff0c\u6211\u4eec\u518d\u914d\u5408\u4e0a\u9762\u7684\u603b\u7ed3\u4ecb\u7ecd\uff0c\u73b0\u5728\u662f\u4e0d\u662f\u5c31\u7406\u89e3\u4e86\u3002\u90a3\u4f60\u5c31\u5e94\u8be5\u77e5\u9053\u5982\u679c\u6211\u4eec\u73b0\u5728\u505c\u6b62\u8fd0\u884c\uff0c\u5c31\u4f1a\u6253\u5370\u6211\u662fdestory\n\n\n\u5bf9\u8c61\uff1a\nJava\u4e07\u7269\u7686\u5bf9\u8c61\uff0c\u53ef\u662f\u6211\u4eec\u6f14\u793a\u4e2d\u7684ServletTest\u5e76\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9new\u51fa\u6765\u5440\u3002\u5176\u5b9e\u8fd9\u4e2a\u64cd\u4f5c\u662fTomcat\u5e2e\u6211\u4eec\u5b8c\u6210\u7684\uff0c\u5b83\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8c03\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u4e86\u8fd9\u4e2a\u5bf9\u8c61\u3002\u8fd9\u4e5f\u5f88\u597d\u7684\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728xml\u914d\u7f6e\u6620\u5c04\u65f6\u9700\u8981\u7c7b\u7684\u5168\u8def\u5f84\uff0c\u53cd\u5c04\u5c31\u662f\u5982\u6b64\u3002\n\u6211\u4eec\u53ef\u4ee5\u53bb\u5199\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\uff0c\u770b\u770b\u60c5\u51b5\u3002\npublic ServletTest() {\n        System.out.println(&quot;\u6211\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u4f60\u7684\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u5566\u3002&quot;);\n    }\n\n\u6211\u4eec\u91cd\u65b0\u542f\u52a8\u9879\u76ee\uff0c\u91cd\u65b0\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\uff0c\u5173\u95ed\u8fd0\u884c\u3002\n\u5728\u63a7\u5236\u53f0\u67e5\u770b\u4fe1\u606f\u3002\u76f8\u4fe1\u4f60\u5c31\u4f1a\u7406\u89e3\u4e86\u3002\n\n\n\u65b9\u6cd5\uff1a\n\u2f46\u53c2\u6784\u9020\u51fd\u6570\u3001init\u3001service\u3001destory\n1\u3001\u2f46\u53c2\u6784\u9020\u51fd\u6570\u53ea\u8c03\u2f64\u2f00\u6b21\uff0c\u521b\u5efa\u5bf9\u8c61\u3002\n2\u3001init \u53ea\u8c03\u2f64\u2f00\u6b21\uff0c\u521d\u59cb\u5316\u5bf9\u8c61\u3002\n3\u3001service \u8c03\u2f64 N \u6b21\uff0c\u6267\u2f8f\u4e1a\u52a1\u2f45\u6cd5\u3002\n4\u3001destory \u53ea\u8c03\u2f64\u2f00\u6b21\uff0c\u5378\u8f7d\u5bf9\u8c61\u3002\nServletConfifig\n\u8be5\u63a5\u2f1d\u662f\u2f64\u6765\u63cf\u8ff0 Servlet \u7684\u57fa\u672c\u4fe1\u606f\u7684\u3002\n\u5728init\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u8fd9\u4e2a\u63a5\u53e3\u7684\u4e00\u4e2a\u5bf9\u8c61servletConfig\uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u7814\u7a76\u770b\u770b\u5b83\u6709\u4ec0\u4e48\u65b9\u6cd5\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u524d\u9762\u56db\u4e2a\u767d\u8272\u6bd4\u8f83\u6df1\u7684\u662f\u8fd9\u4e2a\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u540e\u9762\u51e0\u4e2a\u662fObject\u7684\u3002\n\u6839\u636e\u65b9\u6cd5\u540d\uff0c\u6211\u4eec\u5148\u53bb\u6d4b\u8bd5getServletName\uff0c\n\u6211\u4eec\u76f4\u63a5\u5c06\u5b83\u6253\u5370\u51fa\u6765\u5373\u53ef\nSystem.out.println(servletConfig.getServletName());\n\n\u53ef\u4ee5\u770b\u5230\u5b83\u8fd4\u56de\u4e86 Servlet \u7684\u540d\u79f0\uff0c\u5168\u7c7b\u540d(\u5e26\u7740\u5305\u540d\u7684\u7c7b\u540d)\n\ngetInitParameter(String key) \u83b7\u53d6 init \u53c2\u6570\u7684\u503c\uff08\u9700\u8981\u5728web.xml\u4e2d\u8bbe\u7f6e\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u6f14\u793a\u4e86\uff0c\u6ca1\u4ec0\u4e48\u7528\u3002\uff09\ngetInitParameterNames() \u8fd4\u56de\u6240\u6709\u7684 initParamter \u7684 name \u503c\uff0c\u2f00\u822c\u7528\u4f5c\u904d\u5386\u521d\u59cb\u5316\u53c2\u6570\u3002\ngetServletContext() \u8fd4\u56de ServletContext \u5bf9\u8c61\uff0c\u5b83\u662f Servlet \u7684\u4e0a\u4e0b\u2f42\uff0c\u6574\u4e2a Servlet \u7684\u7ba1\u7406\u8005\u3002\nServletConfifig \u548c ServletContext \u7684\u533a\u522b\uff1a\nServletConfifig \u4f5c\u7528\u4e8e\u67d0\u4e2a Servlet \u5b9e\u4f8b\uff0c\u6bcf\u4e2a Servlet \u90fd\u6709\u5bf9\u5e94\u7684 ServletConfifig\uff0cServletContext \u4f5c\u7528\u4e8e\u6574\u4e2a Web \u5e94\u2f64\uff0c\u2f00\u4e2a Web \u5e94\u2f64\u5bf9\u5e94\u2f00\u4e2a ServletContext\uff0c\u591a\u4e2a Servlet \u5b9e\u4f8b\u5bf9\u5e94\u2f00\u4e2aServletContext\u3002\u2f00\u4e2a\u662f\u5c40\u90e8\u5bf9\u8c61\uff0c\u2f00\u4e2a\u662f\u5168\u5c40\u5bf9\u8c61\u3002\n\u6211\u4eec\u53ef\u4ee5\u53bb\u7528\u4ee3\u7801\u8bd5\u8bd5\nSystem.out.println(servletConfig.getServletContext().getContextPath());\n\n\u83b7\u53d6\u5230\u4e86\u6574\u4e2a\u9879\u76ee\u7684\u8def\u5f84\uff0c\u4e00\u4e2a\u5c0f\u5c0f\u7684\u70b9\u4e5f\u80fd\u8bc1\u660e\u5b83\u662f\u5168\u5c40\u5bf9\u8c61\u3002\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "Servlet", "slug": "Servlet", "permalink": "/tag/Servlet/"}]}, {"title": "Servlet\u4e00\uff1a\u4f7f\u7528Servlet", "date": "2020-03-24T23:13:00-00.00", "path": "/archives/408/", "text": "\u4ec0\u4e48\u662f Servlet\uff1f\nServlet \u662f Java Web \u5f00\u53d1\u7684\u57fa\u2f6f\uff0c\u4e0e\u5e73\u53f0\u2f46\u5173\u7684\u670d\u52a1\u5668\u7ec4\u4ef6\uff0c\u5b83\u662f\u8fd0\u2f8f\u5728 Servlet \u5bb9\u5668/Web \u5e94\u2f64\u670d\u52a1\u5668/Tomcat\uff0c\u8d1f\u8d23\u4e0e\u5ba2\u6237\u7aef\u8fdb\u2f8f\u901a\u4fe1\u3002\n\u4e3b\u8981\u529f\u80fd\uff1a\n\n\u521b\u5efa\u5e76\u8fd4\u56de\u57fa\u4e8e\u5ba2\u6237\u8bf7\u6c42\u7684\u52a8\u6001 HTML \u2eda\u2faf\u3002\n\u4e0e\u6570\u636e\u5e93\u8fdb\u2f8f\u901a\u4fe1\u3002\n\n\n\u5982\u4f55\u4f7f\u7528Servlet\uff1f\nServlet \u672c\u8eab\u53ea\u662f\u2f00\u7ec4\u63a5\u2f1d\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u2f00\u4e2a\u7c7b\uff0c\u5e76\u4e14\u5b9e\u73b0 Servlet \u63a5\u2f1d\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u5177\u5907\u4e86\u63a5\u53d7\u5ba2\u6237\u7aef\u8bf7\u6c42\u4ee5\u53ca\u505a\u51fa\u54cd\u5e94\u7684\u529f\u80fd\u3002\n\u6211\u4eec\u5230\u9879\u76ee\u4e2d\u53bb\u5b66\u4e60\uff0c\u65b0\u5efa\u4e00\u4e2aMyServlet\u7c7b\uff0c\u5b9e\u73b0Servlet\u63a5\u53e3\uff0c\u91cd\u5199\u65b9\u6cd5\npublic class MyServlet implements Servlet {\n    @Override\n    public void init(ServletConfig servletConfig) throws ServletException {\n        //\u521d\u59cb\u5316\u5de5\u4f5c\n    }\n\n    @Override\n    public ServletConfig getServletConfig() {\n        return null;\n    }\n\n    @Override\n    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {\n        //\u4e3b\u8981\u7684\u6838\u5fc3\uff0c\u64cd\u4f5c\u57fa\u672c\u90fd\u5199\u5728\u8fd9\u91cc\uff0c\u4e3b\u8981\u7684\u4e1a\u52a1\u5b9e\u73b0\u3002\n    }\n\n    @Override\n    public String getServletInfo() {\n        return null;\n    }\n\n    @Override\n    public void destroy() {\n        //\u5e38\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\n    }\n}\n\n\u6211\u4eec\u5728service\u65b9\u6cd5\u4e2d\u5199\u4e00\u4e9b\u4ee3\u7801\uff0c\u770b\u770b\u6548\u679c\u3002\n@Override\n    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {\n        System.out.println(&quot;\u6211\u662fservlet\uff0c\u6211\u5df2\u7ecf\u5728\u5de5\u4f5c\u4e86 \uff01&quot;);\n    }\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u7591\u95ee\uff0c\u6211\u4eec\u5982\u4f55\u8bbf\u95ee\u8fd9\u4e2aservlet\u7c7b\u5462\uff0c\u7531\u4e8e\u6d4f\u89c8\u5668\u5e76\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee Servlet \u2f42\u4ef6\uff0c\u6211\u4eec\u53ea\u80fd\u901a\u8fc7\u6620\u5c04\u7684\u2f45\u5f0f\u6765\u95f4\u63a5\u8bbf\u95ee Servlet\uff0c\u6620\u5c04\u9700\u8981\u5f00\u53d1\u8005\u2f3f\u52a8\u914d\u7f6e\uff0c\u6709\u4e24\u79cd\u914d\u7f6e\u2f45\u5f0f\u3002\n\n\u4e24\u79cd\u65b9\u5f0f\u914d\u7f6e\u6620\u5c04\n\u57fa\u4e8eXML\u6587\u4ef6\n\u6ce8\u610f\uff1a\u662f\u5199\u5728WEB-INF\u4e0b\u7684web.xml\u4e2d\n\n\u57fa\u4e8e\u6ce8\u89e3\n\u76f4\u63a5\u5728MyServlet\u7c7b\u4e0a\u9762\u6dfb\u52a0\u4e00\u4e2a\u6ce8\u89e3WebServlet\u62ec\u53f7\u4e2d\u4e3a\u8bbf\u95ee\u5730\u5740\n@WebServlet(&quot;/hello&quot;)\npublic class MyServlet implements Servlet{}\n\n\n\u53ea\u8981\u5176\u4e2d\u4e00\u79cd\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u7528\u540c\u65f6\u4f7f\u7528\u3002\n\u6211\u4eec\u5230\u6d4f\u89c8\u5668\u4e2d\u53bb\u8bbf\u95eehttp://localhost:8080/new_javaweb_test_war_exploded/hello\n\u9875\u9762\u7a7a\u767d\uff0c\u4f46\u662f\u6ca1\u6709\u62a5\u9519\uff0c\u6240\u4ee5\u6211\u4eec\u6210\u529f\u8bbf\u95ee\u4e86\uff0c\u6211\u4eec\u5230\u63a7\u5236\u53f0\u67e5\u770b\u662f\u5426\u6709\u6253\u5370\u51fa\u4e00\u53e5\u8bdd\u3002\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u6210\u529f\u8bbf\u95ee\u5230\u4e86\u81ea\u5df1\u5199\u7684Servlet\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5f80\u9875\u9762\u4e2d\u8f93\u51fa\u70b9\u4e1c\u897f\u5462\uff0c\u540c\u6837\u7684\uff0c\u6211\u8bf4\u4e86\u529f\u80fd\u4ee3\u7801\u90fd\u5e94\u8be5\u5199\u5728service\u65b9\u6cd5\u4e2d\nservletResponse.getWriter().write(&quot;\u8fd9\u91cc\u662f\u6211\u7684Servlet\uff0c\u6b22\u8fce\u8fdb\u5165\u65b0\u4e16\u754c \uff01&quot;);\n\n\u6211\u4eec\u52a0\u5165\u4ee3\u7801\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u53d1\u73b0\u4e2d\u6587\u4e71\u7801\u4e86\uff0c\u8fd9\u65f6\u5019\u4e0d\u7528\u614c\uff0c\u6211\u4eec\u5728\u8fd9\u53e5\u4ee3\u7801\u8fd9\u524d\u518d\u52a0\u4e00\u53e5\nservletResponse.setContentType(&quot;text/html;charset=UTF-8&quot;);\n\n\u6b64\u65f6\u8be5\u65b9\u6cd5\u5b8c\u6574\u7684\u4ee3\u7801\u4e3a\n@Override\n    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {\n        System.out.println(&quot;\u6211\u662fservlet\uff0c\u6211\u5df2\u7ecf\u5728\u5de5\u4f5c\u4e86 \uff01&quot;);\n        servletResponse.setContentType(&quot;text/html;charset=UTF-8&quot;);\n        servletResponse.getWriter().write(&quot;\u8fd9\u91cc\u662f\u6211\u7684Servlet\uff0c\u6b22\u8fce\u8fdb\u5165\u65b0\u4e16\u754c \uff01&quot;);\n    }\n\n\u8fd0\u884c\u5c31\u53ef\u4ee5\u770b\u5230\u9875\u9762\u8f93\u51fa\u7ed3\u679c\u5566\u3002\n\n\u4f7f\u7528Debug\n\u6211\u63a8\u8350\u5927\u5bb6\u4f7f\u7528Debug\u6765\u8fd0\u884c\u9879\u76ee\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u6211\u4eec\u5728\u542f\u52a8\u9879\u76ee\u7684\u5927\u91cf\u65f6\u95f4\u3002\n\u5728idea\u4e2d\u53ef\u4ee5\u505a\u5230\u76f4\u63a5\u91cd\u65b0\u7f16\u8bd1\u4f60\u4fee\u6539\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u7528\u6574\u4e2a\u9879\u76ee\u91cd\u65b0\u542f\u52a8\u3002\n\u5982\u679c\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9996\u5148\u4f60\u8981\u786e\u4fdd\u4f60\u5f00\u542f\u4e86update classes and resources\uff0c\u8fd0\u884c\u9879\u76ee\u65f6\u4f7f\u7528Debug\u3002\n\n\n\nservletRequest\n\u7ec6\u5fc3\u7684\u4f60\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u7684service\u65b9\u6cd5\u4e2d\u8fd8\u6ca1\u6709\u4f7f\u7528\u5230servletRequest\u53c2\u6570\uff0c\u5176\u5b9e\u8fd9\u4e2a\u662f\u7528\u6765\u83b7\u53d6\u53c2\u6570\u4e4b\u7c7b\u7684\u3002\n\u793a\u4f8b\uff1a\nString id = servletRequest.getParameter(&quot;id&quot;);\n        servletResponse.getWriter().write(&quot;\u4f60\u597d\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u53d6\u5230\u4f60\u7684ID\u4e3a\uff1a&quot;+id);\n\nDebug\u8fd0\u884c\uff0c\u53d1\u73b0\u6d4f\u89c8\u5668\u4e2d\u663e\u793aID\u4e3aNull\uff0c\u6b64\u65f6\u4f60\u5728\u5730\u5740\u540e\u9762\u52a0\u5165?id=10086\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c\u5566\u3002\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "Servlet", "slug": "Servlet", "permalink": "/tag/Servlet/"}]}, {"title": "JavaWeb\u9879\u76ee\u642d\u5efa", "date": "2020-03-24T23:10:00-00.00", "path": "/archives/407/", "text": "\u5b89\u88c5Tomcat\n\nWeb \u5e94\u2f64\u670d\u52a1\u5668\uff1aTomcat\u3001Jboos\u3001Weblogic\u3001Jetty\n\n\u6211\u4eec\u5e38\u7528\u7684\u662fTomcat\u3002\n\n\n\u5b89\u88c5\u6b65\u9aa4\n1.\u5b98\u2f79\u4e0b\u8f7d\u538b\u7f29\u2f42\u4ef6\u3002https://tomcat.apache.org/download-90.cgi\n2.\u89e3\u538b\u7f29\u3002\u6ce8\u610f\u653e\u5728\u4e00\u4e2a\u6bd4\u8f83\u597d\u627e\u7684\u5730\u65b9\uff0c\u4f9b\u957f\u671f\u4f7f\u7528\uff0c\u5efa\u8bae\u89e3\u538b\u5b8c\u76f4\u63a5\u4e22\u5230c\u76d8\u6839\u76ee\u5f55\n3.\u4e86\u89e3\u6587\u4ef6\u7ed3\u6784\nbin\uff1a\u5b58\u653e\u5404\u4e2a\u5e73\u53f0\u4e0b\u542f\u52a8\u548c\u505c\u2f4c Tomcat \u670d\u52a1\u7684\u811a\u672c\u2f42\u4ef6\u3002\nconf\uff1a\u5b58\u653e\u5404\u79cd Tomcat \u670d\u52a1\u5668\u7684\u914d\u7f6e\u2f42\u4ef6\u3002\nlib\uff1a\u5b58\u653e Tomcat \u670d\u52a1\u5668\u6240\u9700\u8981\u7684 jar\u3002\nlogs\uff1a\u5b58\u653e Tomcar \u670d\u52a1\u8fd0\u2f8f\u7684\u2f47\u5fd7\u3002\ntemp\uff1aTomcat \u8fd0\u2f8f\u65f6\u7684\u4e34\u65f6\u2f42\u4ef6\u3002\nwebapps\uff1a\u5b58\u653e\u5141\u8bb8\u5ba2\u6237\u7aef\u8bbf\u95ee\u7684\u8d44\u6e90\uff08Java \u7a0b\u5e8f\uff09\u3002\nwork\uff1a\u5b58\u653e Tomcat \u5c06 JSP \u8f6c\u6362\u4e4b\u540e\u7684 Servlet \u2f42\u4ef6\u3002\n\u521b\u5efaJavaWeb\u9879\u76ee\n\u52a1\u5fc5\u9009\u4e0aTomcat\uff0c\u6ca1\u6709\u9009\u62e9\u7684\u8bdd\u53ef\u4ee5\u67e5\u770b\u53e6\u4e00\u7bc7\u535a\u5ba2\u3002\njavaweb \u9879\u76ee\u4f7f\u7528 Tomcat\uff08idea\uff09\n\n\n\u6ce8\u610f\uff1a\n\u9879\u76ee\u7684\u7ed3\u6784\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u8bbf\u95ee\u7684\u9875\u9762\u90fd\u5e94\u8be5\u653e\u5728web\u4e0b\u9762\uff0c\u800c\u4e0d\u662fWEB-INF\u4e0b\uff0c\u8fd9\u662f\u5f88\u591a\u521d\u5b66\u8005\u7684\u8bef\u533a\u3002src\u8fd8\u662f\u653e\u6211\u4eec\u7684Java\u7c7b\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "\u73af\u5883", "slug": "\u73af\u5883", "permalink": "/tag/\u73af\u5883/"}]}, {"title": "Tomcat\u5728idea\u4e2d\u4e71\u7801", "date": "2020-03-24T19:14:26-00.00", "path": "/archives/406/", "text": "\u6211\u4eec\u5728idea\u4e2d\u521a\u5f00\u59cb\u8fd0\u884cTomcat\u65f6\uff0c\u4f1a\u53d1\u73b0\u65e5\u5fd7\u6253\u5370\u51fa\u6765\u7684\u662f\u4e71\u7801\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u7406\u8bba\u4e0a\u4e0d\u9700\u8981\u53bb\u7406\u4f1a\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u4e0d\u53bb\u770b\uff0c\u4f46\u662f\u4e5f\u6709\u4eba\u4f1a\u53d7\u4e0d\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53bb\u4fee\u6539\u4e00\u4e0b\u8fd9\u4e2a\u65e5\u5fd7\u8f93\u51fa\u7684\u7f16\u7801\u5373\u53ef\n\u7f51\u7edc\u4e0a\u7684\u7edd\u5927\u90e8\u5206\u6559\u7a0b\u90fd\u8bf4\u6539\u4ec0\u4e48IDEA\u6539\u4ec0\u4e48\u865a\u62df\u673a\u7f16\u7801\uff0c\u8fd9\u90fd\u662f\u975e\u5e38\u4ee4\u4eba\u8ff7\u60d1\u65e0\u8bed\u7684\u884c\u4e3a\u3002\n\u6211\u4eec\u53bbTomcat\u76ee\u5f55\u4e0b\u7684conf\u4e2d\uff0c\u4fee\u6539logging.properties\u6587\u4ef6\uff0c\u5728\u6700\u5e95\u90e8\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u5373\u53ef\u3002\n# \u65e5\u5fd7\u7f16\u7801\njava.util.logging.ConsoleHandler.encoding = GBK\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "\u4e71\u7801", "slug": "\u4e71\u7801", "permalink": "/tag/\u4e71\u7801/"}]}, {"title": "Java\u7f51\u7edc\u7f16\u7a0b", "date": "2020-03-23T03:04:07-00.00", "path": "/archives/405/", "text": "\u6982\u8ff0\n\u6982\u8ff0\uff1a\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\u4e0b\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u4f20\u8f93\n\u4f8b\u5982\uff0cA\u7535\u8111\u4e2d\u7684\u98de\u79cb\uff0c\u53d1\u9001\u6d88\u606f\u7ed9B\u7535\u8111\u4e2d\u7684\u98de\u79cb\uff0c\u9700\u8981\u54ea\u4e9b\u6761\u4ef6\u624d\u80fd\u53d1\u9001\u55ef\uff1f\nIP\u5730\u5740\n\n\u8bbe\u5907\u5728\u7f51\u7edc\u4e2d\u7684\u5730\u5740\uff0c\u662f\u552f\u4e00\u7684\u6807\u8bc6\u3002\n\n\u7aef\u53e3\n\n\u5e94\u7528\u7a0b\u5e8f\u5728\u8bbe\u5907\u4e2d\u552f\u4e00\u7684\u6807\u8bc6\u3002\n\n\u534f\u8bae\n\n\u6570\u636e\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u89c4\u5219\uff0c\u5e38\u89c1\u7684\u534f\u8bae\u6709UDP\u534f\u8bae\u548cTCP\u534f\u8bae\u3002\n\nIP\nip\uff1a\u5168\u79f0\u4e3a\uff1a\u4e92\u8054\u7f51\u534f\u8bae\u5730\u5740\uff0c\u4e5f\u79f0IP\u5730\u5740\uff0c\u662f\u5206\u914d\u7ed9\u4e0a\u7f51\u8bbe\u5907\u7684\u6570\u5b57\u6807\u7b7e\uff0c\u5e38\u89c1\u7684IP\u5206\u7c7b\u4e3a\uff1aipv4\u548cipv6\n\n\nIPv4\uff1a \u662f\u7f51\u9645\u534f\u8bae\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u7b2c\u56db\u4e2a\u4fee\u8ba2\u7248\u672c\uff0c\u4e5f\u662f\u6b64\u534f\u8bae\u7b2c\u4e00\u4e2a\u88ab\u5e7f\u6cdb\u90e8\u7f72\u7684\u7248\u672c\u3002IPv4\u662f\u4e92\u8054\u7f51\u7684\u6838\u5fc3\uff0c\u4e5f\u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u7f51\u9645\u534f\u8bae\u7248\u672c\uff0c\u5176\u540e\u7ee7\u7248\u672c\u4e3aIPv6\uff0c\u76f4\u52302011\u5e74\uff0cIANA IPv4\u4f4d\u5740\u5b8c\u5168\u7528\u5c3d\u65f6\uff0cIPv6\u4ecd\u5904\u5728\u90e8\u7f72\u7684\u521d\u671f\u3002\n\nIPv6\uff1a\u7531\u4e8eIPv4\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\u7f51\u7edc\u5730\u5740\u8d44\u6e90\u6709\u9650\uff0c\u4e25\u91cd\u5236\u7ea6\u4e86\u4e92\u8054\u7f51\u7684\u5e94\u7528\u548c\u53d1\u5c55\u3002IPv6\u7684\u4f7f\u7528\uff0c\u4e0d\u4ec5\u80fd\u89e3\u51b3\u7f51\u7edc\u5730\u5740\u8d44\u6e90\u6570\u91cf\u7684\u95ee\u9898\uff0c\u800c\u4e14\u4e5f\u89e3\u51b3\u4e86\u591a\u79cd\u63a5\u5165\u8bbe\u5907\u8fde\u5165\u4e92\u8054\u7f51\u7684\u969c\u788d [1]  \u3002\n\u4e92\u8054\u7f51\u6570\u5b57\u5206\u914d\u673a\u6784\uff08IANA\uff09\u57282016\u5e74\u5df2\u5411\u56fd\u9645\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4\uff08IETF\uff09\u63d0\u51fa\u5efa\u8bae\uff0c\u8981\u6c42\u65b0\u5236\u5b9a\u7684\u56fd\u9645\u4e92\u8054\u7f51\u6807\u51c6\u53ea\u652f\u6301IPv6\uff0c\u4e0d\u518d\u517c\u5bb9IPv4\u3002\n\n\n\u5177\u4f53\u53ef\u4ee5\u901a\u8fc7\u767e\u5ea6\u767e\u79d1\u4e86\u89e3\u3002\n\n\u5e38\u7528\u547d\u4ee4\uff1a\n\nipconfig\uff1a\u67e5\u770b\u672c\u673aIP\nping IP\u5730\u5740\uff1a\u68c0\u67e5\u7f51\u7edc\u662f\u5426\u8fde\u901a\n\n\u6211\u4eecping\u4e00\u4e0b\u535a\u5ba2\u5730\u5740\uff0c\u5176\u4e2d47.106.67.159\u5c31\u662f\u6211\u670d\u52a1\u5668\u7535\u8111\u7684ip\u4e86\u3002\u53ef\u4ee5\u68c0\u6d4b\u5f53\u524d\u7535\u8111\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u662f\u5426\u7545\u901a\uff0c\u540c\u65f6\u786e\u5b9a\u670d\u52a1\u5668\u7684IP\u3002\n\n\u7279\u6b8aIP\u5730\u5740\uff1a\n\n127.0.0.1\uff1a\u56de\u9001\u5730\u5740\u4e5f\u79f0\u672c\u5730\u56de\u73af\u5730\u5740\uff0c\u53ef\u4ee5\u4ee3\u8868\u672c\u673a\u7684IP\u5730\u5740\uff0c\u4e00\u822c\u662f\u7528\u6765\u505a\u6d4b\u8bd5\u4f7f\u7528\u3002\n\nInetAddress\n\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5bf9IP\u5730\u5740\u7684\u83b7\u53d6\u548c\u64cd\u4f5c\uff0cjava\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7bInetAddress\u4f9b\u6211\u4eec\u4f7f\u7528\nInetAddress\uff1a\u6b64\u7c7b\u8868\u793aInternet\u534f\u8bae\uff08IP\uff09\u5730\u5740\n\u5177\u4f53\u67e5\u770bJDK\u7684\u5b98\u65b9API\u6587\u6863\n\u7aef\u53e3\n\u7aef\u53e3\uff1a\u8981\u7528\u7a0b\u5e8f\u5728\u8bbe\u5907\u4e2d\u7684\u552f\u4e00\u6807\u8bc6\n\u7aef\u53e3\u53f7\uff1a\u7528\u4e24\u4e2a\u5b57\u8282\u8868\u793a\u7684\u6570\u636e\uff0c\u5b83\u7684\u53d6\u503c\u8303\u56f4\u662f0~65535\uff0c\u5176\u4e2d0~1023\u4e4b\u95f4\u7684\u7aef\u53e3\u53f7\u7528\u4e8e\u4e00\u4e9b\u77e5\u540d\u7684\u7f51\u7edc\u670d\u52a1\u6216\u8005\u5e94\u7528\u3002\u6211\u4eec\u81ea\u5df1\u4f7f\u75281024\u4ee5\u4e0a\u7684\u7aef\u53e3\u53f7\n\u6ce8\u610f\uff1a\u4e00\u4e2a\u7aef\u53e3\u53f7\u53ea\u80fd\u88ab\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002\n\u534f\u8bae\n\u534f\u8bae\uff1a\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\uff0c\u8fde\u63a5\u548c\u901a\u4fe1\u7684\u89c4\u5219\u88ab\u79f0\u4e3a\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\nUDP\u534f\u8bae\n\nUDP\u662f\u9762\u5411\u65e0\u8fde\u63a5\u901a\u4fe1\u534f\u8bae\u3002\u901f\u5ea6\u5feb\uff0c\u6709\u5927\u5c0f\u9650\u5236\u4e00\u6b21\u6700\u591a\u53d1\u900164K\uff0c\u6570\u636e\u4e0d\u5b89\u5168\uff0c\u6613\u4e22\u5931\u6570\u636e\u3002\n\u4e0d\u7ba1\u4f60\u6709\u6ca1\u6709\u5efa\u7acb\u8fde\u63a5\uff0c\u4ed6\u90fd\u4f1a\u53d1\u9001\u51fa\u53bb\u3002\n\u5e38\u7528\u4e8e\uff1a\u4f20\u9012\u97f3\u9891\u3001\u6570\u636e\u3001\u666e\u901a\u6570\u636e\u7b49\n\nTCP\u534f\u8bae\n\nTCP\u534f\u8bae\u662f\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1\u534f\u8bae\n\u901f\u5ea6\u6162\uff0c\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u6570\u636e\u5b89\u5168\n\n\u603b\u7ed3\n\u7f51\u7edc\u7f16\u7a0b\uff1a\u5c31\u662f\u8ba9\u4e24\u53f0\u8ba1\u7b97\u673a\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\n\u7f51\u7edc\u7f16\u7a0b\u4e09\u8981\u7d20\n\nIP\uff1a\u8bbe\u5907\u5728\u7f51\u7edc\u4e2d\u552f\u4e00\u7684\u6807\u8bc6\n\u7aef\u53e3\u53f7\uff1a\u5e94\u7528\u7a0b\u5e8f\u5728\u8bbe\u5907\u4e2d\u552f\u4e00\u7684\u6807\u8bc6\n\u534f\u8bae\uff1a\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u9075\u5faa\u7684\u89c4\u5219\n\nUDP\u901a\u4fe1\u7a0b\u5e8f\nUDP\u53d1\u9001\u6570\u636e\uff1a\n\u6b65\u9aa4:\n\n\u521b\u5efa\u53d1\u9001\u7aef\u7684DatagramSocket\u5bf9\u8c61\n\u521b\u5efa\u6570\u636e\uff0c\u5e76\u628a\u6570\u636e\u6253\u5305\u8fdb\u7bb1\u5b50\uff08DatagramPacket\uff09\n\u8c03\u7528DatagramSocket\u5bf9\u8c61\u7684\u65b9\u6cd5\u53d1\u9001\u6570\u636e\n\u91ca\u653e\u8d44\u6e90\n\n\u4ee3\u7801\u793a\u4f8b\u3002\npublic class ClientDemo {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket();\n        //\u8bbe\u7f6e\u8981\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u5316\u4e3abyte\u7c7b\u578b\uff0c\u4e0d\u80fd\u76f4\u63a5\u7a7f\u5b57\u7b26\u4e32\n        String s = &quot;\u4f60\u5bb6\u5b69\u5b50\u88ab\u5f55\u53d6\u4e86&quot;;\n        byte[] bytes = s.getBytes();\n        //\u521b\u5efa\u4e3b\u673a\u4e14\u547d\u540d\u4e3alocalhost\n        InetAddress address = InetAddress.getByName(&quot;localhost&quot;);\n        //\u8bbe\u7f6e\u7aef\u53e3\n        int port = 1000;\n        //\u4fdd\u5b58\u8fdb\u7bb1\u5b50\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length, address, port);\n\n        socket.send(packet);\n        socket.close();\n    }\n}\n\n\n\u8fd0\u884c\u7ed3\u679c\u4e3a\u7a7a\u767d\uff0c\u6211\u4eec\u6ca1\u6709\u8bbe\u7f6e\u63a5\u6536\u7aef\uff0cUDP\u534f\u8bae\u53ea\u7ba1\u53d1\uff0c\u6536\u4e0d\u6536\u5f97\u5230\u90fd\u4e0d\u7ba1\u3002\nUDP\u63a5\u6536\u6570\u636e\n\u6b65\u9aa4\uff1a\n\n\u521b\u5efa\u63a5\u6536\u7aef\u7684DatagramSocket\u5bf9\u8c61\n\u521b\u5efa\u4e00\u4e2a\u7bb1\u5b50\uff0c\u7528\u4e8e\u63a5\u6536\u6570\u636e\n\u8c03\u7528DatagramSocket\u7684\u65b9\u6cd5\u63a5\u6536\u6570\u636e\u5e76\u5c06\u6570\u636e\u653e\u8fdb\u7bb1\u5b50\u4e2d\u4fdd\u5b58\n\u89e3\u6790\u6570\u636e\uff0c\u5728\u63a7\u5236\u53f0\u663e\u793a\n\u91ca\u653e\u8d44\u6e90\n\npublic class ServeDemo {\n    public static void main(String[] args) throws IOException {\n        //\u8868\u793a\u4ece1000\u7aef\u53e3\u63a5\u53d7\u6570\u636e\n        DatagramSocket socket = new DatagramSocket(1000);\n\n        //\u7ed9\u7bb1\u5b50\u8bbe\u7f6e\u4e00\u4e2abyte\u6570\u7ec4\u8fdb\u884c\u63a5\u6536\n        byte[] bytes = new byte[1024];\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length);\n        socket.receive(packet);\n        //\u5728\u63a7\u5236\u53f0\u6253\u5370\u6570\u636e\n        System.out.println(new String(bytes));\n\n        //\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7getData()\u65b9\u6cd5\u5c06\u7bb1\u5b50\u91cc\u7684\u6570\u636e\u91cd\u65b0\u62ff\u51fa,\u4e00\u822c\u4e0d\u9700\u8981\n        byte[] data = packet.getData();\n        System.out.println(new String(data));\n\n        //\u8bb0\u5f97\u91ca\u653e\u8d44\u6e90\n        socket.close();\n    }\n}\n\n\u6211\u4eec\u8fd0\u884c\u8d77\u6765\uff0c\u53d1\u73b0\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\uff0c\u4f46\u662f\u6ca1\u6709\u6253\u5370\u51fa\u4efb\u4f55\u4e1c\u897f\u3002\n\n\u8fd9\u5f88\u6b63\u5e38\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u6ca1\u6709\u53d1\u9001\u6570\u636e\u7ed9\u5b83\u5440\uff0c\u8fd9\u65f6\u6211\u4eec\u4fdd\u6301\u63a5\u6536\u7aef\u4e0d\u52a8\uff0c\u53bb\u8fd0\u884c\u524d\u9762\u5df2\u7ecf\u5199\u597d\u7684\u53d1\u9001\u7aef\uff0c\u4ed6\u4eec\u7aef\u53e3\u90fd\u662f1000\u3002\n\n\u6211\u4eec\u770b\u5230\u6548\u679c\u5df2\u7ecf\u51fa\u73b0\u4e86\uff01\n\n\u5982\u679c\u4f60\u5148\u8fd0\u884c\u4e86\u53d1\u9001\u7aef\uff0c\u5b83\u5c31\u5df2\u7ecf\u628a\u6570\u636e\u53d1\u9001\u51fa\u53bb\u4e86\uff0c\u4f60\u6b64\u65f6\u518d\u8fd0\u884c\u63a5\u6536\u7aef\u5c31\u6ca1\u6709\u6548\u679c\u4e86\u3002\n\n\u5982\u679c\u63a5\u6536\u7aef\u542f\u52a8\u4e4b\u540e\uff0c\u6ca1\u6709\u6536\u5230\u6570\u636e\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u6b7b\u7b49\uff08\u963b\u585e\uff09\u3002\u4e5f\u5c31\u662f\u5b83\u4f1a\u8fd0\u884c\u5230\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684\u7b2c9\u884c\u5c31\u7b49\u5728\u4e86\u90a3\u91cc\u3002\n\n\u5728\u63a5\u6536\u6570\u636e\u7684\u65f6\u5019\uff0c\u9700\u8981\u8c03\u7528\u4e00\u4e2agetLength\u65b9\u6cd5\uff0c\u8868\u793a\u63a5\u6536\u5230\u4e86\u591a\u5c11\u5b57\u8282\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e861024\u4e2a\u5b57\u8282\u53bb\u63a5\u6536\u6570\u636e\uff0c\u6240\u4ee5\u5bfc\u81f4\u6211\u4eec\u63a5\u6536\u5230\u6570\u636e\u540e\uff0c\u540e\u9762\u5e26\u4e86\u5f88\u591a\u7a7a\u683c\uff0c\u5177\u4f53\u770b\u4e0b\u56fe\u3002\u6240\u4ee5\u6211\u4eec\u5728\u6253\u5370\u8f93\u51fa\u4e2d\u4f20\u5165\u957f\u5ea6\u5373\u53ef\u3002\n\n\n\nSystem.out.println(new String(bytes,0,packet.getLength()));\n\nUDP\u901a\u4fe1\u7a0b\u5e8f\u7ec3\u4e60\n\u9700\u6c42\uff1a\n\nUDP\u53d1\u9001\u6570\u636e\uff1a\u6570\u636e\u6765\u81ea\u952e\u76d8\u5f55\u5165\uff0c\u76f4\u5230\u8f93\u5165\u7684\u6570\u636e\u662f886\uff0c\u53d1\u9001\u6570\u636e\u7ed3\u675f\u3002\nUPD\u63a5\u6536\u6570\u636e\uff1a\u56e0\u4e3a\u63a5\u6536\u7aef\u4e0d\u77e5\u9053\u53d1\u9001\u7aef\u4ec0\u4e48\u65f6\u5019\u505c\u6b62\u53d1\u9001\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u6b7b\u5faa\u73af\u63a5\u6536\u3002\n\npublic class Serve {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket(996);\n        while (true) {\n            byte[] bytes = new byte[1024];\n            DatagramPacket packet = new DatagramPacket(bytes, bytes.length);\n            socket.receive(packet);\n            System.out.println(new String(bytes, 0, packet.getLength()));\n        }\n    }\n}\n\npublic class Client {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket();\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            String s = sc.nextLine();\n            if (&quot;886&quot;.equals(s)){\n                break;\n            }\n            byte[] bytes = s.getBytes();\n            InetAddress address = InetAddress.getByName(&quot;127.0.0.1&quot;);\n            int port = 996;\n            DatagramPacket packet = new DatagramPacket(bytes,bytes.length,address,port);\n            socket.send(packet);\n        }\n        socket.close();\n    }\n}\n\nUDP\u4e09\u79cd\u901a\u4fe1\u65b9\u5f0f\n\n\u5355\u64ad\uff0c\u4e00\u5bf9\u4e00\n\u7ec4\u64ad\uff0c\u4e00\u5bf9\u591a\n\u5e7f\u64ad\uff0c\u4e00\u5bf9\u6240\u6709\n\nUDP\u901a\u4fe1\u7ec4\u64ad\u4ee3\u7801\u5b9e\u73b0\n\u7ec4\u64ad\u5730\u5740\uff1a224.0.0.0~239.255.255.255\n\u5176\u4e2d224.0.0.0~224.0.0.255\u4e3a\u9884\u7559\u7684\u7ec4\u64ad\u5730\u5740\n\u7ec4\u64ad\u7684\u53d1\u9001\u7aef\u8ddf\u5355\u64ad\u7c7b\u4f3c\uff0c\u4e5f\u5c31\u662f\u8ddf\u6211\u4eec\u5df2\u7ecf\u6f14\u793a\u8fc7\u7684\u4ee3\u7801\u7c7b\u4f3c\u3002\u4f46\u662f\u5728\u5355\u64ad\u4e2d\uff0c\u6211\u4eec\u662f\u53d1\u7ed9\u6307\u5b9aIP\u7684\u7535\u8111\uff0c\u5728\u7ec4\u64ad\u4e2d\uff0c\u662f\u53d1\u7ed9\u7ec4\u64ad\u5730\u5740\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5f00\u5934\u521b\u5efa\u4e86MulticastSocket\u5bf9\u8c61\u5e76\u4f20\u5165\u4e86\u7aef\u53e3\uff0c\u540e\u9762\u518d\u52a0\u5165\u7ec4IP\u63a5\u6536\u6570\u636e\u3002\u8fd9\u5c31\u662f\u7ec4\u64ad\u7684\u63a5\u6536\u7aef\u793a\u4f8b\u4ee3\u7801\uff1a\npublic class Serve2 {\n    public static void main(String[] args) throws IOException {\n        MulticastSocket multicastSocket = new MulticastSocket(10000);\n        byte[] bytes = new byte[1024];\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length);\n\n        //\u628a\u5f53\u524d\u8ba1\u7b97\u673a\u7ed1\u5b9a\u4e00\u4e2a\u7ec4\u64ad\u5730\u5740\uff0c\u8868\u793a\u6dfb\u52a0\u5230\u8fd9\u4e00\u7ec4\u4e2d\n        //\u6ce8\u610f\uff0c\u8fd9\u91cc\u8981\u8ddf\u53d1\u9001\u7aef\u8bbe\u7f6e\u7684IP\u4e00\u6837\n        multicastSocket.joinGroup(InetAddress.getByName(&quot;224.0.1.0&quot;));\n        multicastSocket.receive(packet);\n        System.out.println(new String(bytes,0,packet.getLength()));\n    }\n}\n\n\u53d1\u9001\u7aef\uff1a\npublic class Client2 {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket();\n        String s = &quot;\u6211\u662f\u4e50\u5fc3\u6e56\u554a&quot;;\n        byte[] bytes = s.getBytes();\n        //\u8bbe\u7f6eIP\n        InetAddress address = InetAddress.getByName(&quot;224.0.1.0&quot;);\n        int port = 10000;\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length, address, port);\n        socket.send(packet);\n        socket.close();\n    }\n\n\u6d4b\u8bd5\uff0c\u53ea\u8981\u4f60\u7684\u5c0f\u4f19\u4f34\u90fd\u8bbe\u7f6e\u4e86\u8fd9\u4e2aIP\u548c\u7aef\u53e3\uff08\u5373\u4f7f\u7528\u4e86\u793a\u4f8b\u4e2d\u7684\u63a5\u6536\u7aef\uff09\uff0c\u4f60\u8fd0\u884c\u53d1\u9001\u7aef\u5c31\u53ef\u4ee5\u53d1\u9001 \u201c\u6211\u662f\u4e50\u5fc3\u6e56\u554a\u201d \u7ed9\u4ed6\u4eec\u4e86\u3002\nUDP\u901a\u4fe1\u5e7f\u64ad\u4ee3\u7801\u5b9e\u73b0\n\u5e7f\u64ad\u5730\u5740\uff1a255.255.255.255 \uff08\u5fc5\u987b\uff09\n\u63a5\u6536\u7aef\u8ddf\u5355\u64ad\u6ca1\u6709\u4e24\u6837\u3002\npublic class Serve3 {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket(10000);\n        byte[] bytes = new byte[1024];\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length);\n        socket.receive(packet);\n        System.out.println(new String(bytes, 0, packet.getLength()));\n        socket.close();\n    }\n}\n\npublic class Client3 {\n    public static void main(String[] args) throws IOException {\n        DatagramSocket socket = new DatagramSocket();\n        String s = &quot;\u662f\u5e7f\u64ad\u54e6&quot;;\n        byte[] bytes = s.getBytes();\n        //\u8bbe\u7f6eIP\n        InetAddress address = InetAddress.getByName(&quot;255.255.255.255&quot;);\n        int port = 10000;\n        DatagramPacket packet = new DatagramPacket(bytes, bytes.length, address, port);\n        socket.send(packet);\n        socket.close();\n    }\n}\n\nTCP\u901a\u4fe1\u7a0b\u5e8f\n\u539f\u7406\uff1a\n\nTCP\u901a\u4fe1\u534f\u8bae\u662f\u4e00\u79cd\u53ef\u9760\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u5b83\u5728\u901a\u4fe1\u7684\u4e24\u7aef\u5404\u5efa\u7acb\u4e00\u4e2aSocket\u5bf9\u8c61\u3002\n\u901a\u4fe1\u4e4b\u524d\u5fc5\u987b\u8981\u5efa\u7acb\u8fde\u63a5\n\u901a\u8fc7Socket\u4ea7\u751fIO\u6d41\u6765\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\n\nTCP\u53d1\u9001\u6570\u636e\uff1a\n\u6b65\u9aa4\uff1a\n\n\u521b\u5efa\u5ba2\u6237\u7aef\u7684Socket\u5bf9\u8c61\u4e0e\u6307\u5b9a\u670d\u52a1\u7aef\u8fde\u63a5 \uff0c Socket(String host\uff0cint port)\n\u83b7\u53d6\u8f93\u51fa\u6d41\uff0c\u5199\u6570\u636e  OutputStream getOutputStream()\n\u91ca\u653e\u8d44\u6e90\uff0cvoid close()\n\n\u6b64\u65f6\u8fd0\u884c\u5ba2\u6237\u7aef\u5fc5\u7136\u62a5\u9519\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5199\u670d\u52a1\u7aef\uff0c\u800cTCP\u534f\u8bae\u901a\u4fe1\u4e4b\u524d\u5fc5\u987b\u8981\u5efa\u7acb\u8fde\u63a5\npublic class Client4 {\n    public static void main(String[] args) throws IOException {\n        Socket socket = new Socket(&quot;127.0.0.1&quot;, 996);\n        OutputStream outputStream = socket.getOutputStream();\n        outputStream.write(&quot;hello,leixnhu&quot;.getBytes());\n        outputStream.close();\n        socket.close();\n    }\n}\n\nTCP\u63a5\u6536\u6570\u636e\n\u6b65\u9aa4\uff1a\n\n\u521b\u5efa\u670d\u52a1\u7aef\u7684Socket\u5bf9\u8c61(ServerSocket)   ServerSocket(int port)\n\u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u8fd4\u56de\u4e00\u4e2aSocket\u5bf9\u8c61 Socket.accept()\n\u83b7\u53d6\u8f93\u5165\u6d41\uff0c\u8bfb\u6570\u636e\uff0c\u5e76\u628a\u6570\u636e\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e0a InputSteam getInputStream()\n\u91ca\u653e\u8d44\u6e90 void close()\n\npublic class Serve4 {\n    public static void main(String[] args) throws IOException {\n        ServerSocket socket = new ServerSocket(996);\n        Socket accept = socket.accept();\n        InputStream inputStream = accept.getInputStream();\n        int a;\n        while ((a = inputStream.read())!=-1){\n            System.out.print((char) a);\n        }\n        inputStream.close();\n        socket.close();\n    }\n}\n\n\u6ce8\u610f\uff1a\n\naccept\u65b9\u6cd5\u662f\u963b\u585e\u7684\uff0c\u4e3a\u4e86\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\n\u5ba2\u6237\u7aef\u521b\u5efa\u5bf9\u8c61\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u6b64\u65f6\u662f\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\u534f\u8bae\u4fdd\u8bc1\u8ddf\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u3002\n\u9488\u5bf9\u5ba2\u6237\u7aef\u6765\u8bb2\uff0c\u662f\u5f80\u5916\u5199\u7684\uff0c\u6240\u4ee5\u662f\u8f93\u51fa\u6d41\n\u9488\u5bf9\u670d\u52a1\u5668\u6765\u8bb2\uff0c\u662f\u5f80\u91cc\u8bfb\u7684\uff0c\u6240\u4ee5\u662f\u8f93\u5165\u6d41\nread\u65b9\u6cd5\u4e5f\u662f\u963b\u585e\u7684\n\u5728\u5173\u6d41\u7684\u65f6\u5019\uff0c\u8fd8\u591a\u4e86\u4e00\u4e2a\u5f80\u670d\u52a1\u5668\u5199\u7ed3\u675f\u6807\u8bb0\u7684\u52a8\u4f5c\n\u6700\u540e\u4e00\u6b65\u65ad\u5f00\u8fde\u63a5\uff0c\u901a\u8fc7\u56db\u6b21\u6325\u624b\u534f\u8bae\u4fdd\u8bc1\u8fde\u63a5\u7ec8\u6b62\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/category/Java\u57fa\u7840/"}], "tags": [{"name": "\u7f51\u7edc\u7f16\u7a0b", "slug": "\u7f51\u7edc\u7f16\u7a0b", "permalink": "/tag/\u7f51\u7edc\u7f16\u7a0b/"}, {"name": "TCP", "slug": "TCP", "permalink": "/tag/TCP/"}, {"name": "UDP", "slug": "UDP", "permalink": "/tag/UDP/"}]}, {"title": "JavaWeb\u5e38\u89c1\u7684\u4e71\u7801\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u603b\u7ed3", "date": "2020-03-17T22:00:00-00.00", "path": "/archives/397/", "text": "\u7b2c\u4e00\u79cd(\u63a8\u8350),\u4f7f\u7528\u7c7b+\u914d\u7f6e\u5b9e\u73b0\u5168\u5c40\n\u6dfb\u52a0\u4e00\u4e2a\u5b9e\u73b0\u7f16\u7801utf-8\u7684\u7c7b,\n\u65e0\u9700\u8bb0\u4f4f,\u770b\u61c2\u5373\u53ef,\u590d\u5236\u7c98\u8d34\u5c31\u5b8c\u4e8b.\npublic class EncodingFilter implements Filter {\n\n    private String encoding=&quot;utf-8&quot;;\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n        if (filterConfig.getInitParameter(&quot;encoding&quot;)!=null){\n            encoding=filterConfig.getInitParameter(&quot;encoding&quot;);\n        }\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest)servletRequest;\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n        request.setCharacterEncoding(encoding);\n        response.setCharacterEncoding(encoding);\n        filterChain.doFilter(request,response);\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n}\n\n\u5728web.xml\u4e2d\u52a0\u5165\u914d\u7f6e\n&lt;filter&gt;\n        &lt;filter-name&gt;encoding&lt;/filter-name&gt;\n        &lt;filter-class&gt;com.xn2001.oa.global.EncodingFilter&lt;/filter-class&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;encoding&lt;/param-name&gt;\n            &lt;param-value&gt;utf-8&lt;/param-value&gt;\n        &lt;/init-param&gt;\n    &lt;/filter&gt;\n    &lt;filter-mapping&gt;\n        &lt;filter-name&gt;encoding&lt;/filter-name&gt;\n        &lt;url-pattern&gt;/**&lt;/url-pattern&gt;\n    &lt;/filter-mapping&gt;\n\n\u7b2c\u4e8c\u79cd,\u5355\u9875\u9762\u64cd\u4f5c\nresponse.setContentType(&quot;application/json;charset=utf-8&quot;);\n        response.setCharacterEncoding(&quot;utf-8&quot;);\n        request.setCharacterEncoding(&quot;utf-8&quot;);\n\n\u7b2c\u4e09\u79cd,\u8bbe\u7f6e\u865a\u62df\u673a(\u4e0d\u63a8\u8350)\n-Dfile.encoding=GBK \u6216\u8005Dfile.encoding=UTF-8\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "\u4e2d\u6587", "slug": "\u4e2d\u6587", "permalink": "/tag/\u4e2d\u6587/"}, {"name": "\u4e71\u7801", "slug": "\u4e71\u7801", "permalink": "/tag/\u4e71\u7801/"}]}, {"title": "SpringBoot\u914d\u7f6e\u963f\u91ccDruid\u8fde\u63a5\u6c60", "date": "2020-03-16T15:34:00-00.00", "path": "/archives/druid-connect-springboot/", "text": "\u4e3a\u4ec0\u4e48\u4f7f\u7528\u963f\u91cc\u7684Druid\uff0c\u4e3b\u8981\u7684\u4e00\u70b9\u5c31\u662f\u529f\u80fd\u591a\uff0c\u800c\u4e14\u559c\u6b22\u963f\u91cc\uff01\n\u5177\u4f53\u573a\u666f\u4f7f\u7528hikari\u8fd8\u662fdruid\u6839\u636e\u9700\u6c42\uff0c\u4e24\u4e2a\u90fd\u5e94\u8be5\u6709\u6240\u4e86\u89e3\u3002\n\u5982\u4f55\u5728 SpringBoot \u914d\u7f6e druid \u8fde\u63a5\u6c60\n\u4e00.  \u9996\u5148\u786e\u4fdd\u6709\u76f8\u5173\u4f9d\u8d56\uff0c\u68c0\u67e5pom.xml\n&lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;1.1.21&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n\u4e8c. \u5728application.yml\u4e2d\u914d\u7f6e\u76f8\u5173\u5c5e\u6027\n\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u4e0b\u7684\u662f\uff0c\u5f53\u521d\u6211\u5728\u5b66\u4e60\u8fd9\u4e2a\u7684\u65f6\u5019\uff0c\u6559\u5b66\u8bf4\u5230druid\u9700\u8981\u6ce8\u5165bean\u518d\u901a\u8fc7\u914d\u7f6e\u7c7b\u6765\u5f15\u5165\u914d\u7f6e\uff0c\u4f46\u6211\u81ea\u5df1\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u5b9e\u9645\u4e0a\u65e0\u9700\u8fd9\u4e48\u9ebb\u70e6\u3002\n\n\u91cc\u9762\u7684\u914d\u7f6e\u53ef\u4ee5\u81ea\u884c\u5c31\u884c\u589e\u5220\u6539\u3002\n\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/mybatis?characterEncoding=UTF-8&amp;useSSL=true&amp;serverTimezone=UTC\n    username: root\n    password: 123456\n    platform: mysql\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      # \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927\n      initialSize: 1\n      minIdle: 3\n      maxActive: 20\n      # \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4\n      maxWait: 60000\n      # \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\n      timeBetweenEvictionRunsMillis: 60000\n      # \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\n      minEvictableIdleTimeMillis: 30000\n      validationQuery: select 'x'\n      testWhileIdle: true\n      testOnBorrow: false\n      testOnReturn: false\n      # \u662f\u5426\u7f13\u5b58preparedStatement\uff0c\u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f\u3002\u5b98\u65b9\u5efa\u8baeMySQL\u4e0b\u5efa\u8bae\u5173\u95ed\uff0c\u5982\u679c\u7528SQL\u9632\u706b\u5899 \u5efa\u8bae\u6253\u5f00\n      poolPreparedStatements: true\n      maxPoolPreparedStatementPerConnectionSize: 20\n      # \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899\n      filters: stat,wall,slf4j\n      # \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55\n      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n\n\u4e09. \u8fdb\u884c\u6d4b\u8bd5\n\u6211\u4eec\u5728test\u4e2d\u76f4\u63a5\u8fdb\u884c\u7b80\u5355\u7684debug\u5373\u53ef\u3002\n\u6211\u4eec\u5bf9\u6253\u5370\u8fd9\u91cc\u8fdb\u884c\u65ad\u70b9\uff0c\u70b9\u51fb\u4e00\u4e0b\u884c\u6570\u663e\u793a17\u7684\u90a3\u4e2a\u4f4d\u7f6e\u65c1\u8fb9\u5373\u53ef\u3002\u8bb0\u5f97\u662f\u53f3\u952e\u4f7f\u7528debug\u800c\u4e0d\u662frun\u3002\n@SpringBootTest\nclass DemoApplicationTests {\n\n    @Autowired\n    DataSource dataSource;\n\n    @Test\n    void contextLoads() {\n        System.out.println(dataSource.getClass());\n    }\n\n}\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u7684\u770b\u5230\u6211\u4eec\u7684\u914d\u7f6e\u6210\u529f\u5f15\u5165\uff0c\u5e76\u4e14\u8ddfyml\u914d\u7f6e\u6587\u4ef6\u4e00\u6a21\u4e00\u6837\u3002\n\u8fd9\u91cc\u6211\u4eec\u7684\u8fde\u63a5\u6c60\u5c31\u7b97\u914d\u7f6e\u5b8c\u6210\u4e86\u3002\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/category/SpringBoot/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}, {"name": "druid", "slug": "druid", "permalink": "/tag/druid/"}, {"name": "\u8fde\u63a5\u6c60", "slug": "\u8fde\u63a5\u6c60", "permalink": "/tag/\u8fde\u63a5\u6c60/"}]}, {"title": "SpringBoot\u65e5\u5fd7\u529f\u80fd", "date": "2020-03-14T03:34:00-00.00", "path": "/archives/log-springboot/", "text": "SpringBoot\u65e5\u5fd7\u529f\u80fd\n\u65e5\u5fd7\u5e38\u89c1\u7684\u9700\u6c42\n\u2022 \u5c06\u5173\u952e\u6570\u636e\u6253\u5370\u5728\u63a7\u5236\u53f0\n\u2022 \u5c06\u5173\u952e\u6570\u636e\u6253\u5370\u5728\u6587\u4ef6\u4e2d\n\u2022 \u65e5\u5fd7\u5206\u7c7b\uff0c\u6839\u636e\u65e5\u5fd7\u4e0d\u540c\u7c7b\u578b\u6253\u5370\u5230\u4e0d\u540c\u6587\u4ef6\n\u2022 \u4e0d\u540c\u7684\u8fd0\u884c\u73af\u5883\uff0c\u6253\u5370\u4e0d\u540c\u7684\u65e5\u5fd7\u5185\u5bb9\n\u2022 \u65e5\u5fd7\u81ea\u52a8\u6e05\u7406\nSpringBoot\u9ed8\u8ba4\u4f7f\u7528\n\u65e5\u5fd7\u62bd\u8c61\u5c42\uff1aSLF4J\n\u65e5\u5fd7\u5b9e\u73b0\uff1aLogBack\n\u5b98\u65b9\u5e2e\u52a9\u6587\u6863 http://www.slf4j.org/manual.html\n\u6d4b\u8bd5\u4f7f\u7528\n\u6839\u636e\u5b98\u65b9\u6587\u6863,\u6211\u4eec\u6d4b\u8bd5\u4e00\u4e0b.\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662fimport\u7684\u662fslf4j\nimport org.slf4j.Logger;\n\n@RestController\npublic class HelloController {\n\n    @RequestMapping(&quot;/hello&quot;)\n    public void Hello() {\n        Logger logger = LoggerFactory.getLogger(HelloController.class);\n        logger.info(&quot;Hello World&quot;);\n    }\n}\n\n\n\n\u7b80\u5316\u5f00\u53d1\n\u5728pom.xml\u4e2d\u6dfb\u52a0Lombok\u4f9d\u8d56\u3002\n\uff08 \u8fd9\u91ccidea\u4e00\u5b9a\u8981\u5b89\u88c5\u6709Lombok\u63d2\u4ef6\uff0c\u5177\u4f53\u4e5f\u53ef\u4ee5\u770b\u6211\u53e6\u4e00\u7bc7\u7b80\u77ed\u7684\u8bb0\u5f55idea\u7b80\u5316\u63d2\u4ef6 \uff09\n&lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.12&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n\u4f7f\u7528log.info\u5c31\u53ef\u4ee5\u76f4\u63a5\u53d6\u4ee3\u4e4b\u524d\u7684\u4ee3\u7801\u3002\u662f\u4e0d\u662f\u5f88\u65b9\u4fbf\u3002\uff08\u5b9e\u9645\u5f00\u53d1\u91ccLombok\u4f7f\u7528\u6548\u7387\u662f\u975e\u5e38\u975e\u5e38\u9ad8\u7684\uff09\n\nLogback\u7279\u70b9\n\u2022 \u66f4\u5feb\u7684\u5b9e\u73b0\n\u2022 \u975e\u5e38\u5145\u5206\u6d4b\u8bd5\n\u2022 \u975e\u5e38\u5145\u5206\u7684\u6587\u6863\n\u2022 \u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\n\u2022 \u81ea\u52a8\u538b\u7f29\n\u2022 \u81ea\u52a8\u53bb\u9664\u65e7\u7684\u65e5\u5fd7\u6587\u4ef6\n\u2022 \u725b\u903c\u5c31\u5bf9\u4e86\nLogback\u5f00\u53d1\n\n\u5728/resources\u76ee\u5f55\u4e0b\u4e0b\u65b0\u5efalogback-spring.xml  (\u540d\u5b57\u5fc5\u987b\u662f\u8fd9\u4e2a\uff0c\u8fd9\u6837SpringBoot\u624d\u53ef\u4ee5\u81ea\u52a8\u5b8c\u6210\u914d\u7f6e\uff0c\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e)\n\u683c\u5c40\u89c4\u5219\u914d\u7f6elogback-spring.xml\n\u5728/resources\u76ee\u5f55\u4e0b\u65b0\u5efaapplication.yml\uff08\u8fd9\u4e00\u6b65\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u521b\u5efa\u65f6\u81ea\u5e26\u7684application.properties\u4e2d\u6765\u5b8c\u6210\u540c\u6837\u7684\u64cd\u4f5c\uff09\n\u914d\u7f6e\u9879\u76ee\u73af\u5883\u548c\u65e5\u5fd7\u76ee\u5f55\n\nLogback\u65e5\u5fd7\u914d\u7f6e\n\u7ea7\u522b\uff1aTRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL\n\u4e0b\u9762\u662f\u4e00\u5957\u5e26\u8be6\u7ec6\u6ce8\u89e3\u7684\u914d\u7f6e\uff0c\u5199\u5728logback-spring.xml\uff0c\u53ea\u8981\u4f1a\u7528\u5373\u53ef\u3002\n\u5728application.yml\u4e2d\u4f7f\u7528 logging.file.path= \u6587\u4ef6\u540d  //\u76f4\u63a5\u5728\u8ddf\u76ee\u5f55\u4e0b\u521b\u5efa\u8be5\u6587\u4ef6\u4e14\u81ea\u52a8 \u5e2e\u4f60\u521b\u5efa\u597d\u6587\u4ef6\n\nlogging:\n  file:\n    path: boot.log\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!-- \u65e5\u5fd7\u7ea7\u522b\u4ece\u4f4e\u5230\u9ad8\u5206\u4e3aTRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aWARN\uff0c\u5219\u4f4e\u4e8eWARN\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8f93\u51fa --&gt;\n&lt;!-- scan:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u679c\u53d1\u751f\u6539\u53d8\uff0c\u5c06\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u9ed8\u8ba4\u503c\u4e3atrue --&gt;\n&lt;!-- scanPeriod:\u8bbe\u7f6e\u76d1\u6d4b\u914d\u7f6e\u6587\u4ef6\u662f\u5426\u6709\u4fee\u6539\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u65f6\u95f4\u5355\u4f4d\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662f\u6beb\u79d2\u3002\u5f53scan\u4e3atrue\u65f6\uff0c\u6b64\u5c5e\u6027\u751f\u6548\u3002\u9ed8\u8ba4\u7684\u65f6\u95f4\u95f4\u9694\u4e3a1\u5206\u949f\u3002 --&gt;\n&lt;!-- debug:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5c06\u6253\u5370\u51falogback\u5185\u90e8\u65e5\u5fd7\u4fe1\u606f\uff0c\u5b9e\u65f6\u67e5\u770blogback\u8fd0\u884c\u72b6\u6001\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002 --&gt;\n&lt;configuration  scan=&quot;true&quot; scanPeriod=&quot;10 seconds&quot;&gt;\n\n    &lt;!--&lt;property name=&quot;log.path&quot; value=&quot;D:/bmslog&quot; /&gt;--&gt;\n    &lt;springProperty scope=&quot;context&quot; name=&quot;log.path&quot; source=&quot;logging.file.path&quot; defaultValue=&quot;/home/logs/bms&quot;/&gt;\n    &lt;contextName&gt;logback&lt;/contextName&gt;\n\n    &lt;!-- \u5f69\u8272\u65e5\u5fd7 --&gt;\n    &lt;!-- \u5f69\u8272\u65e5\u5fd7\u4f9d\u8d56\u7684\u6e32\u67d3\u7c7b --&gt;\n    &lt;conversionRule conversionWord=&quot;clr&quot; converterClass=&quot;org.springframework.boot.logging.logback.ColorConverter&quot; /&gt;\n    &lt;conversionRule conversionWord=&quot;wex&quot; converterClass=&quot;org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter&quot; /&gt;\n    &lt;conversionRule conversionWord=&quot;wEx&quot; converterClass=&quot;org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter&quot; /&gt;\n\n    &lt;!-- \u5f69\u8272\u65e5\u5fd7\u683c\u5f0f --&gt;\n    &lt;property name=&quot;CONSOLE_LOG_PATTERN&quot; value=&quot;${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}&quot;/&gt;\n\n    &lt;!--\u8f93\u51fa\u5230\u63a7\u5236\u53f0--&gt;\n    &lt;appender name=&quot;CONSOLE&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;\n        &lt;!--\u6b64\u65e5\u5fd7appender\u662f\u4e3a\u5f00\u53d1\u4f7f\u7528\uff0c\u53ea\u914d\u7f6e\u6700\u5e95\u7ea7\u522b\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u6b64\u7ea7\u522b\u7684\u65e5\u5fd7\u4fe1\u606f--&gt;\n        &lt;filter class=&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;\n            &lt;level&gt;debug&lt;/level&gt;\n        &lt;/filter&gt;\n        &lt;encoder&gt;\n            &lt;Pattern&gt;${CONSOLE_LOG_PATTERN}&lt;/Pattern&gt;\n            &lt;!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --&gt;\n            &lt;charset&gt;UTF-8&lt;/charset&gt;\n        &lt;/encoder&gt;\n    &lt;/appender&gt;\n\n    &lt;!--\u8f93\u51fa\u5230\u6587\u4ef6--&gt;\n    &lt;!-- \u65f6\u95f4\u6eda\u52a8\u8f93\u51fa level\u4e3a DEBUG \u65e5\u5fd7 --&gt;\n    &lt;!--RollingFileAppender\u7684\u4f5c\u7528\u662f\u6eda\u52a8\u8bb0\u5f55\u6587\u4ef6\uff0c\u5148\u5c06\u65e5\u5fd7\u8bb0\u5f55\u5230\u6307\u5b9a\u6587\u4ef6\uff0c\u5f53\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u65f6\u518d\u5c06\u65e5\u5fd7\u8bb0\u5f55\u5230\u5176\u4ed6\u6587\u4ef6--&gt;\n    &lt;appender name=&quot;DEBUG_FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;\n        &lt;!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d --&gt;\n        &lt;file&gt;${log.path}/log_debug.log&lt;/file&gt;\n        &lt;!--\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u683c\u5f0f--&gt;\n        &lt;encoder&gt;\n            &lt;!--\n                   \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a\n                   %d\u8868\u793a\u65e5\u671f\u65f6\u95f4\uff0c%thread\u8868\u793a\u7ebf\u7a0b\u540d\uff0c%-5level\uff1a\u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6\n                   %logger{50} \u8868\u793alogger\u540d\u5b57\u6700\u957f50\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272\u3002\n                   %msg\uff1a\u65e5\u5fd7\u6d88\u606f\uff0c%n\u662f\u6362\u884c\u7b26\n            --&gt;\n            &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;charset&gt;UTF-8&lt;/charset&gt; &lt;!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --&gt;\n        &lt;/encoder&gt;\n        &lt;!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --&gt;\n        &lt;!-- &lt;rollingPolicy&gt;\u7684\u4f5c\u7528\u662f\u5f53\u53d1\u751f\u6eda\u52a8\u65f6\uff0c\u5b9a\u4e49RollingFileAppender\u7684\u884c\u4e3a\uff0c\u5176\u4e2dTimeBasedRollingPolicy\u662f\u6700\u5e38\u7528\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u5b83\u6839\u636e\u65f6\u95f4\u6307\u5b9a\u6eda\u52a8\u7b56\u7565\uff0c\u65e2\u8d1f\u8d23\u6eda\u52a8\u4e5f\u8d1f\u8d23\u89e6\u53d1\u6eda\u52a8--&gt;\n        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;\n            &lt;!-- \u65e5\u5fd7\u5f52\u6863 --&gt;\n            &lt;fileNamePattern&gt;${log.path}/debug/log-debug-%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;\n                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;!--\u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u5929\u6570--&gt;\n            &lt;maxHistory&gt;15&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;!-- \u6b64\u65e5\u5fd7\u6587\u4ef6\u53ea\u8bb0\u5f55debug\u7ea7\u522b\u7684 --&gt;\n        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;\n            &lt;level&gt;debug&lt;/level&gt;\n            &lt;!-- &lt;onMatch&gt;:\u7528\u4e8e\u914d\u7f6e\u7b26\u5408\u8fc7\u6ee4\u6761\u4ef6\u7684\u64cd\u4f5c --&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n    &lt;/appender&gt;\n\n    &lt;!-- \u65f6\u95f4\u6eda\u52a8\u8f93\u51fa level\u4e3a INFO \u65e5\u5fd7 --&gt;\n    &lt;appender name=&quot;INFO_FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;\n        &lt;!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d --&gt;\n        &lt;file&gt;${log.path}/log_info.log&lt;/file&gt;\n        &lt;!--\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u683c\u5f0f--&gt;\n        &lt;encoder&gt;\n            &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;charset&gt;UTF-8&lt;/charset&gt;\n        &lt;/encoder&gt;\n        &lt;!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --&gt;\n        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;\n            &lt;!-- \u6bcf\u5929\u65e5\u5fd7\u5f52\u6863\u8def\u5f84\u4ee5\u53ca\u683c\u5f0f --&gt;\n            &lt;fileNamePattern&gt;${log.path}/info/log-info-%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;\n                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;!--\u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u5929\u6570--&gt;\n            &lt;maxHistory&gt;15&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;!-- \u6b64\u65e5\u5fd7\u6587\u4ef6\u53ea\u8bb0\u5f55info\u7ea7\u522b\u7684 --&gt;\n        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;\n            &lt;level&gt;info&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n    &lt;/appender&gt;\n\n    &lt;!-- \u65f6\u95f4\u6eda\u52a8\u8f93\u51fa level\u4e3a WARN \u65e5\u5fd7 --&gt;\n    &lt;appender name=&quot;WARN_FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;\n        &lt;!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d --&gt;\n        &lt;file&gt;${log.path}/log_warn.log&lt;/file&gt;\n        &lt;!--\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u683c\u5f0f--&gt;\n        &lt;encoder&gt;\n            &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;charset&gt;UTF-8&lt;/charset&gt; &lt;!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --&gt;\n        &lt;/encoder&gt;\n        &lt;!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --&gt;\n        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;\n            &lt;fileNamePattern&gt;${log.path}/warn/log-warn-%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;\n                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;!--\u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u5929\u6570--&gt;\n            &lt;maxHistory&gt;15&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;!-- \u6b64\u65e5\u5fd7\u6587\u4ef6\u53ea\u8bb0\u5f55warn\u7ea7\u522b\u7684 --&gt;\n        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;\n            &lt;level&gt;warn&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n    &lt;/appender&gt;\n\n\n    &lt;!-- \u65f6\u95f4\u6eda\u52a8\u8f93\u51fa level\u4e3a ERROR \u65e5\u5fd7 --&gt;\n    &lt;appender name=&quot;ERROR_FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;\n        &lt;!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u53ca\u6587\u4ef6\u540d --&gt;\n        &lt;file&gt;${log.path}/log_error.log&lt;/file&gt;\n        &lt;!--\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u683c\u5f0f--&gt;\n        &lt;encoder&gt;\n            &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;charset&gt;UTF-8&lt;/charset&gt; &lt;!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --&gt;\n        &lt;/encoder&gt;\n        &lt;!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --&gt;\n        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;\n            &lt;fileNamePattern&gt;${log.path}/error/log-error-%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;\n                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;!--\u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u5929\u6570--&gt;\n            &lt;maxHistory&gt;15&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;!-- \u6b64\u65e5\u5fd7\u6587\u4ef6\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u7684 --&gt;\n        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;\n            &lt;level&gt;ERROR&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n    &lt;/appender&gt;\n\n    &lt;!--\n        &lt;logger&gt;\u7528\u6765\u8bbe\u7f6e\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u7684\u65e5\u5fd7\u6253\u5370\u7ea7\u522b\u3001\u4ee5\u53ca\u6307\u5b9a&lt;appender&gt;\u3002&lt;logger&gt;\u4ec5\u6709\u4e00\u4e2aname\u5c5e\u6027\uff0c\n        \u4e00\u4e2a\u53ef\u9009\u7684level\u548c\u4e00\u4e2a\u53ef\u9009\u7684addtivity\u5c5e\u6027\u3002\n        name:\u7528\u6765\u6307\u5b9a\u53d7\u6b64logger\u7ea6\u675f\u7684\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u3002\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n              \u8fd8\u6709\u4e00\u4e2a\u7279\u4fd7\u503cINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\uff0c\u4ee3\u8868\u5f3a\u5236\u6267\u884c\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n              \u5982\u679c\u672a\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff0c\u90a3\u4e48\u5f53\u524dlogger\u5c06\u4f1a\u7ee7\u627f\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n        addtivity:\u662f\u5426\u5411\u4e0a\u7ea7logger\u4f20\u9012\u6253\u5370\u4fe1\u606f\u3002\u9ed8\u8ba4\u662ftrue\u3002\n    --&gt;\n    &lt;!--&lt;logger name=&quot;org.springframework.web&quot; level=&quot;info&quot;/&gt;--&gt;\n    &lt;!--&lt;logger name=&quot;org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor&quot; level=&quot;INFO&quot;/&gt;--&gt;\n    &lt;!--\n        \u4f7f\u7528mybatis\u7684\u65f6\u5019\uff0csql\u8bed\u53e5\u662fdebug\u4e0b\u624d\u4f1a\u6253\u5370\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u914d\u7f6e\u4e86info\uff0c\u6240\u4ee5\u60f3\u8981\u67e5\u770bsql\u8bed\u53e5\u7684\u8bdd\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n        \u7b2c\u4e00\u79cd\u628a&lt;root level=&quot;info&quot;&gt;\u6539\u6210&lt;root level=&quot;DEBUG&quot;&gt;\u8fd9\u6837\u5c31\u4f1a\u6253\u5370sql\uff0c\u4e0d\u8fc7\u8fd9\u6837\u65e5\u5fd7\u90a3\u8fb9\u4f1a\u51fa\u73b0\u5f88\u591a\u5176\u4ed6\u6d88\u606f\n        \u7b2c\u4e8c\u79cd\u5c31\u662f\u5355\u72ec\u7ed9dao\u4e0b\u76ee\u5f55\u914d\u7f6edebug\u6a21\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u8fd9\u6837\u914d\u7f6esql\u8bed\u53e5\u4f1a\u6253\u5370\uff0c\u5176\u4ed6\u8fd8\u662f\u6b63\u5e38info\u7ea7\u522b\uff1a\n     --&gt;\n\n\n    &lt;!--\n        root\u8282\u70b9\u662f\u5fc5\u9009\u8282\u70b9\uff0c\u7528\u6765\u6307\u5b9a\u6700\u57fa\u7840\u7684\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\uff0c\u53ea\u6709\u4e00\u4e2alevel\u5c5e\u6027\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n        \u4e0d\u80fd\u8bbe\u7f6e\u4e3aINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\u3002\u9ed8\u8ba4\u662fDEBUG\n        \u53ef\u4ee5\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u6807\u8bc6\u8fd9\u4e2aappender\u5c06\u4f1a\u6dfb\u52a0\u5230\u8fd9\u4e2alogger\u3002\n    --&gt;\n\n    &lt;!-- \u591a\u73af\u5883\u914d\u7f6e\u7ba1\u7406 --&gt;\n    &lt;!--\u5f00\u53d1\u73af\u5883:\u6253\u5370\u63a7\u5236\u53f0--&gt;\n    &lt;springProfile name=&quot;dev&quot;&gt;\n        &lt;root level=&quot;info&quot;&gt;\n         &lt;!--&lt;logger name=&quot;com.nmys.view&quot; level=&quot;debug&quot;/&gt;--&gt;\n            &lt;appender-ref ref=&quot;CONSOLE&quot;  /&gt;\n            &lt;appender-ref ref=&quot;DEBUG_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;INFO_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;WARN_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;ERROR_FILE&quot; /&gt;\n        &lt;/root&gt;\n    &lt;/springProfile&gt;\n    &lt;!--\u7ebf\u4e0a\u73af\u5883:--&gt;\n    &lt;springProfile name=&quot;prod&quot;&gt;\n        &lt;root level=&quot;info&quot;&gt;\n            &lt;appender-ref ref=&quot;CONSOLE&quot;  /&gt;\n            &lt;appender-ref ref=&quot;DEBUG_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;INFO_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;WARN_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;ERROR_FILE&quot; /&gt;\n        &lt;/root&gt;\n    &lt;/springProfile&gt;\n    &lt;!--\u6d4b\u8bd5\u73af\u5883:--&gt;\n    &lt;springProfile name=&quot;test&quot;&gt;\n        &lt;root level=&quot;info&quot;&gt;\n            &lt;appender-ref ref=&quot;DEBUG_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;INFO_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;WARN_FILE&quot; /&gt;\n            &lt;appender-ref ref=&quot;ERROR_FILE&quot; /&gt;\n        &lt;/root&gt;\n    &lt;/springProfile&gt;\n\n&lt;/configuration&gt;\n\nLogback\u7684\u5e38\u89c4\u914d\u7f6e\nconfiguration\n\nappender\uff1a\u5199\u65e5\u5fd7\u7684\u7ec4\u4ef6\n\nlogger\uff1a\u8bbe\u7f6e\u67d0\u4e00\u4e2a\u7c7b\u7684\u65e5\u5fd7\u6253\u5370\u7ea7\u522b\n\nroot\uff1a\u6839logger\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/category/SpringBoot/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}, {"name": "\u65e5\u5fd7", "slug": "\u65e5\u5fd7", "permalink": "/tag/\u65e5\u5fd7/"}]}, {"title": "SpringBoot\u52a8\u6001Banner", "date": "2020-03-14T01:30:00-00.00", "path": "/archives/banner-springboot/", "text": "SpringBoot\u52a8\u6001Banner\n1. \u65b0\u5efabanner.txt\u6587\u4ef6\n\u5728src/main/resources\u8def\u5f84\u4e0b\u65b0\u5efabanner.txt\u6587\u4ef6\n\n2. \u501f\u52a9\u7b2c\u4e09\u65b9\u5de5\u5177\u8f6c\u5316\u5185\u5bb9\n\u53ef\u4ee5\u4f7f\u7528 http://www.network-science.de/ascii/ \u8f93\u5165\u6587\u672c. \u5c06\u7ed3\u679c\u590d\u5236\u51fa\u6765\n\n3. \u586b\u5165banner.txt\nbanner.txt\u6587\u4ef6\u4e2d\u586b\u5199\u597d\u9700\u8981\u6253\u5370\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/category/SpringBoot/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}, {"name": "Banner", "slug": "Banner", "permalink": "/tag/Banner/"}]}, {"title": "\u7ebf\u6027\u4ee3\u6570\u7c97\u66b4\u89e3\u9898", "date": "2020-03-13T12:10:00-00.00", "path": "/archives/math-1/", "text": "\u7ebf\u6027\u4ee3\u6570\u7c97\u66b4\u89e3\u9898\n\u4e8c\u9636\u884c\u5217\u5f0f\n\n\u4e09\u9636\u884c\u5217\u5f0f\u53ca\u591a\u9636\n\u8ba1\u7b97\uff1a\u5c06\u5bf9\u89d2\u7ebf\u7684\u4e00\u8fb9\u7684\u6570\u5168\u90e8\u53d8\u4e3a0\uff0c\u5bf9\u89d2\u7ebf\u5404\u4e2a\u76f8\u4e58\u3002\n\u7b2c\u4e00\u884c\u7684\u4f5c\u7528\u662f\u4f7f\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u6bcf\u4e00\u884c\u7684\u7b2c\u4e00\u4f4d\u6570\u53d8\u62100\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\u8ba1\u7b97\u6280\u5de7\n\u67d0\u884c\uff08\u5217\uff09\u4e58\u4ee5K\uff0c\u7b49\u4e8eK\u4e58\u6b64\u884c\u5217\u5f0f\n\n\n\u4e92\u6362\u4e24\u884c\uff08\u5217\uff09\uff0c\u884c\u5217\u5f0f\u53d8\u53f7\n\n\u9119\u4eba\u81ea\u62cd\u4e11\u7167\u4e00\u5f20\u3002\u6362\u884c\u8bb0\u5f97\u53d6\u53cd\u3002\n\n\u8ba1\u7b97\u53d6\u5de7\n1. \u5bf9\u89d2\u7ebfx\u4e00\u6837,\u5176\u4ed6\u6570\u5b57a\u4e00\u6837 \u4e14n\u884cn\u5217\n\u516c\u5f0f\uff1a\n\n2. n\u6b21\u65b9\n\u5927\u7684\u6570\u51cf\u6389\u6bcf\u4e00\u4e2a\u5c0f\u7684\uff0c\u51cf\u5230\u4e0d\u80fd\u51cf\u4e86\uff0c\u76f8\u4e58\u3002\n\n3. \u4e24\u4e2a\u7279\u6027\n\n\u4e24\u884c\uff08\u5217\uff09\u76f8\u540c\u6216\u6210\u6bd4\u4f8b\u65f6\uff0c\u884c\u5217\u5f0f\u4e3a0\n\u67d0\u884c\uff08\u5217\uff09\u4e3a\u4e24\u9879\u76f8\u52a0\u51cf\u65f6\uff0c\u884c\u5217\u5f0f\u53ef\u62c6\u6210\u4e24\u4e2a\u884c\u5217\u5f0f\u76f8\u52a0\u51cf\n\n\n4. \u4f59\u5b50\u6570\uff0c\u4ee3\u6570\u4f59\u5b50\u6570\nrc\uff0cr\u4ee3\u8868\u884c\uff0cc\u4ee3\u8868\u5217\n23\u6307\u7684\u662f\u7b2c\u4e8c\u884c\u7b2c\u4e09\u5217\u7684\u6570\n12\u503c\u7684\u662f\u7b2c\u4e00\u884c\u7b2c\u4e8c\u5217\u7684\u6570\n\u6c42\u4f59\u5b50\u6570 M \uff1a\u9664\u4e86\u90a3\u4e00\u884c\u90a3\u4e00\u5217\uff0c\u5c06\u5176\u4f59\u7684\u6570\u62ff\u51fa\u6765\u8ba1\u7b97\u503c\u3002\n\u6c42\u4ee3\u6570\u4f59\u5b50\u6570 A \uff1a\n\n\n5. \u5f53\u884c\u6216\u52170\u8f83\u591a\u65f6\n\u53ef\u4ee5\u91c7\u7528\u4e0b\u9762\u4e24\u516c\u5f0f\uff0c\u5373\u6bcf\u4e2a\u6570\u5206\u522b\u4e58\u4e0a\u5b83\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\uff0c\u6700\u540e\u6c42\u548c\n\n6. \u591a\u4e2aA\u6216M\u76f8\u52a0\u51cf\n\n7. \u7ed9\u4e00\u65b9\u7a0b\u7ec4\uff0c\u5224\u65ad\u5176\u89e3\u7684\u60c5\u51b5\n\n", "categories": [{"name": "\u6570\u5b66", "slug": "\u6570\u5b66", "permalink": "/category/\u6570\u5b66/"}, {"name": "\u7ebf\u6027\u4ee3\u6570", "slug": "\u7ebf\u6027\u4ee3\u6570", "permalink": "/category/\u7ebf\u6027\u4ee3\u6570/"}], "tags": [{"name": "\u6570\u5b66", "slug": "\u6570\u5b66", "permalink": "/tag/\u6570\u5b66/"}, {"name": "\u7ebf\u6027\u4ee3\u6570", "slug": "\u7ebf\u6027\u4ee3\u6570", "permalink": "/tag/\u7ebf\u6027\u4ee3\u6570/"}]}, {"title": "Java\u591a\u7ebf\u7a0b\u7684\u5b89\u5168\u95ee\u9898", "date": "2020-03-09T15:10:00-00.00", "path": "/archives/thread-safe-java/", "text": "\u7ebf\u7a0b\u7684\u5b89\u5168\u95ee\u9898\n\u6848\u4f8b\n\u9700\u6c42 \uff1a\u67d0\u7535\u5f71\u9662\u76ee\u524d\u6b63\u5728\u4e0a\u6620\u56fd\u4ea7\u5927\u7247\uff0c\u5171\u6709100\u5f20\u7968\uff0c\u800c\u4ed6\u67093\u4e2a\u7a97\u53e3\u5356\u7968\uff0c\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\u6a21\u62df\u8be5\u7535\u5f71\u9662\u5356\u7968\n\u601d\u8def \uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u7c7bTicket\u5b9e\u73b0Runnable\u63a5\u53e3\uff0c\u91cc\u9762\u5b9a\u4e49\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\uff1a\nprivate int ticketCount = 100;\n\n\u5728Ticket\u7c7b\u4e2d\u91cd\u5199run()\u65b9\u6cd5\u5b9e\u73b0\u5356\u7968\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n\u5224\u65ad\u7968\u6570\u5982\u679c\u5927\u4e8e0\uff0c\u5c31\u5356\u7968\uff0c\u5e76\u544a\u77e5\u54ea\u4e2a\u7a97\u53e3\u8d2d\u4e70\n\u7968\u6570\u81ea\u52a8\u51cf\u4e00\n\u5356\u5149\u4e4b\u540e\uff0c\u7ebf\u7a0b\u505c\u6b62\n\n\n\u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u7c7bTicketDemo\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n\u521b\u5efaTicket\u7c7b\u7684\u5bf9\u8c61\n\u521b\u5efa\u4e09\u4e2aThread\u7c7b\u7684\u5bf9\u8c61\uff0c\u628aTicket\u5bf9\u8c61\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u7a97\u53e3\u540d\u79f0\n\u542f\u52a8\u7ebf\u7a0b\n\n\n\n\u4ee3\u7801\u5b9e\u73b0\npublic class Ticket implements Runnable {\n\n    private int ticketCount = 100;\n\n    @Override\n    public void run() {\n        while(true){\n            if (ticketCount&lt;=0){\n                break;\n            }else{\n                this.ticketCount -= 1;\n                System.out.println(Thread.currentThread().getName()+&quot;\u6b63\u5728\u5356\u7968,\u8fd8\u5269\u6709&quot;+this.ticketCount+&quot;\u5f20&quot;);\n            }\n        }\n    }\n}\n\npublic class Demo {\n    public static void main(String[] args) {\n        Ticket ticket = new Ticket();\n        Thread t1 = new Thread(ticket,&quot;\u4e00\u53f7\u7a97\u53e3&quot;);\n        Thread t2 = new Thread(ticket,&quot;\u4e8c\u53f7\u7a97\u53e3&quot;);\n        Thread t3 = new Thread(ticket,&quot;\u4e09\u53f7\u7a97\u53e3&quot;);\n        t1.start();\n        t2.start();\n        t3.start();\n    }\n}\n\n\u5356\u7968\u6848\u4f8b\u7684\u601d\u8003\n\u770b\u4f3c\u8fd9\u4e2a\u6848\u4f8b\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898,\u4f46\u662f\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d,\u552e\u7968\u65f6\u5019\u51fa\u7968\u662f\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u7684,\u6240\u4ee5\u5728\u51fa\u552e\u4e00\u5f20\u7968\u7684\u65f6\u5019\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u7684\u5ef6\u8fdf,\u63a5\u4e0b\u6765\u5c31\u4fee\u6539\u5356\u7968\u7a0b\u5e8f\u4e2d\u7684\u52a8\u4f5c,\u6bcf\u6b21\u51fa\u7968\u65f6\u95f4\u4e3a100\u6beb\u79d2,\u7528sleep()\u65b9\u6cd5\u5b9e\u73b0\u3002\n\u6b64\u65f6\u51fa\u73b0\u4e86\u95ee\u9898\n\n\u76f8\u540c\u7684\u7968\u51fa\u73b0\u4e86\u591a\u6b21\n\u51fa\u73b0\u7684\u8d1f\u6570\u7684\u7968\n\n\u4e3a\u4ec0\u4e48\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff08\u8fd9\u4e5f\u662f\u6211\u4eec\u5224\u65ad\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u662f\u5426\u4f1a\u6709\u6570\u636e\u5b89\u5168\u95ee\u9898\u7684\u6807\u51c6\uff09\n\n\u591a\u7ebf\u7a0b\u64cd\u4f5c\u5171\u4eab\u6570\u636e\n\n\u5982\u679c\u89e3\u51b3\u591a\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff1f\n\n\u57fa\u672c\u601d\u60f3\uff1a\u8ba9\u7a0b\u5e8f\u6ca1\u6709\u5b89\u5168\u95ee\u9898\u7684\u73af\u5883\n\n\u5b9e\u73b0\u65b9\u6cd5\n\n\u628a\u591a\u6761\u8bed\u53e5\u64cd\u4f5c\u5171\u4eab\u6570\u636e\u7684\u4ee3\u7801\u9501\u8d77\u6765\uff0c\u8ba9\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u5148\u5403\u6267\u884c\u3002\n\n\u540c\u6b65\u4ee3\u7801\u5757\n\u9501\u591a\u6761\u8bed\u53e5\u64cd\u4f5c\u5171\u4eab\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u540c\u6b65\u4ee3\u7801\u5757\u5b9e\u73b0\n\n\u683c\u5f0f\uff1a\nsynchronized(\u4efb\u610f\u5bf9\u8c61){ \u591a\u6761\u8bed\u53e5\u64cd\u4f5c\u5171\u4eab\u6570\u636e\u7684\u4ee3\u7801 }\n\n\u9ed8\u8ba4\u60c5\u51b5\u662f\u6253\u5f00\u7684\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u53bb\u6267\u884c\u4ee3\u7801\u4e86\uff0c\u9501\u5c31\u4f1a\u5173\u95ed\u3002\n\n\u5f53\u7ebf\u7a0b\u6267\u884c\u5b8c\u4e86\u4e4b\u540e\uff0c\u9501\u5c31\u4f1a\u81ea\u52a8\u6253\u5f00\u3002\n\n\n\u540c\u6b65\u7684\u597d\u5904\u548c\u5f0a\u7aef\n\n\u597d\u5904\uff1a\u89e3\u51b3\u4e86\u591a\u7ebf\u7a0b\u7684\u6570\u636e\u5b89\u5168\u95ee\u9898\n\u5f0a\u7aef\uff1a\u5f53\u7ebf\u7a0b\u5f88\u591a\u65f6\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u53bb\u5224\u65ad\u540c\u6b65\u4e0a\u7684\u9501\uff0c\u8fd9\u662f\u975e\u5e38\u6d6a\u8d39\u8d44\u6e90\u7684\uff0c\u65e0\u5f62\u4e2d\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\n\n\u4e0b\u9762\u6211\u4eec\u66f4\u65b0\u4e00\u4e0bTicket\u7c7b\u3002\npublic class Ticket implements Runnable {\n\n    private int ticketCount = 100;\n    private Object o = new Object();\n\n    @Override\n    public void run() {\n        while(true){\n\n            //\u9501\u5bf9\u8c61,\u4efb\u610f\u5bf9\u8c61\u5c31\u53ef\u4ee5.\n            //\u591a\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u4f7f\u7528\u540c\u4e00\u628a\u9501\n            synchronized (o){\n                if (ticketCount==0){\n                    break;\n                }else{\n                    try {\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    this.ticketCount -= 1;\n                    System.out.println(Thread.currentThread().getName()+&quot;\u6b63\u5728\u5356\u7968,\u8fd8\u5269\u6709&quot;+this.ticketCount+&quot;\u5f20&quot;);\n                }\n            }\n        }\n    }\n}\n\n\n\u6b64\u65f6\u7684\u8fd0\u884c\u7ed3\u679c\u53d8\u5f97\u975e\u5e38\u81ea\u7136\u3002\nsynchronized\u7684\u9501\u5bf9\u8c61\u5fc5\u987b\u662f\u552f\u4e00\u7684\n\u540c\u6b65\u65b9\u6cd5\n\u540c\u6b65\u65b9\u6cd5\uff1a\u5c31\u662f\u628asynchronized\u5173\u952e\u5b57\u52a0\u5230\u65b9\u6cd5\u4e0a\u3002\n\n\u683c\u5f0f\uff1a\n\u4fee\u9970\u7b26 synchronized \u8fd4\u56de\u503c\u7c7b\u578b \u65b9\u6cd5\u540d(\u65b9\u6cd5\u53c2\u6570){ }\n\n\n\u540c\u6b65\u9759\u6001\u65b9\u6cd5\uff1a\u5c31\u662f\u628asynchronized\u5173\u952e\u8bcd\u52a0\u5230\u9759\u6001\u65b9\u6cd5\u4e0a\n\n\u683c\u5f0f\uff1a\n\u4fee\u9970\u7b26 static synchronized \u8fd4\u56de\u503c\u7c7b\u578b \u65b9\u6cd5\u540d(\u65b9\u6cd5\u53c2\u6570){ }\n\n\n\u4e3b\u8981\u8bb0\u4f4f\uff1a\n\n\u540c\u6b65\u65b9\u6cd5\u5230\u5e95\u9501\u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f this\n\n\u540c\u6b65\u9759\u6001\u65b9\u6cd5\u7684\u9501\u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f \u7c7b\u540d.class\n\n\n\u540c\u6b65\u4ee3\u7801\u5757\u548c\u540c\u6b65\u65b9\u6cd5\u7684\u533a\u522b\n\n\u540c\u6b65\u4ee3\u7801\u5757\u53ef\u4ee5\u9501\u4f4f\u6307\u5b9a\u4ee3\u7801\uff0c\u540c\u6b65\u65b9\u6cd5\u662f\u9501\u4f4f\u65b9\u6cd5\u4e2d\u6240\u6709\u4ee3\u7801\u3002\n\u540c\u6b65\u4ee3\u7801\u5757\u53ef\u4ee5\u6307\u5b9a\u9501\u5bf9\u8c61\uff0c\u540c\u6b65\u65b9\u6cd5\u4e0d\u80fd\u6307\u5b9a\u9501\u5bf9\u8c61\u3002\n\n\u2605Lock\u9501\n\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u540c\u6b65\u4ee3\u7801\u5757\u548c\u540c\u6b65\u65b9\u6cd5\u7684\u9501\u5bf9\u8c61\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u76f4\u63a5\u770b\u5230\u5728\u54ea\u91cc\u52a0\u4e0a\u4e86\u9501\uff0c\u5728\u54ea\u91cc\u91ca\u653e\u4e86\u9501\uff0c\u4e3a\u4e86\u66f4\u52a0\u6e05\u6670\u7684\u8868\u8fbe\u5982\u4f55\u52a0\u9501\u548c\u91ca\u653e\u9501\uff0cJDK5\u4ee5\u540e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u9501\u5bf9\u8c61Lock\nLock\u5b9e\u73b0\u63d0\u4f9b\u6bd4\u4f7f\u7528synchronized\u65b9\u6cd5\u548c\u8bed\u53e5\u53ef\u4ee5\u83b7\u5f97\u66f4\u5e7f\u6cdb\u7684\u9501\u5b9a\u64cd\u4f5c\nLock\u4e2d\u63d0\u4f9b\u4e86\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501\u7684\u65b9\u6cd5\n\nvoid lock()             \u83b7\u5f97\u9501\nvoid unlock()        \u91ca\u653e\u9501\n\nLock\u662f\u63a5\u53e3\u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316\uff0c\u53ef\u4ee5\u91c7\u7528\u5b83\u7684\u5b9e\u73b0\u7c7bReentrantLock\u6765\u5b9e\u4f8b\u5316\nReentrantLock\u7684\u6784\u9020\u65b9\u6cd5\n\nReentrantLock()  \u521b\u5efa\u4e00\u4e2aReentrantLock\u7684\u5b9e\u4f8b\n\n\u6ce8\u610f\uff1a\u4e00\u822c\u91ca\u653e\u9501unlock\u8981\u653e\u5165finally\u4e2d\u3002\n\u4e0b\u9762\u6211\u4eec\u4f7f\u7528Lock\u6765\u66f4\u65b0\u4e00\u4e0bTicket\u7c7b\npublic class Ticket implements Runnable {\n\n    private int ticketCount = 100;\n\n    //\u9501\u5bf9\u8c61Lock\n    private Lock lock = new ReentrantLock();\n\n    @Override\n    public void run() {\n        while (true) {\n            //\u5f00\u542fLock\u9501\n            lock.lock();\n            try {\n                if (ticketCount == 0) {\n                    break;\n                } else {\n                    Thread.sleep(100);\n                    this.ticketCount -= 1;\n                    System.out.println(Thread.currentThread().getName() + &quot;\u6b63\u5728\u5356\u7968,\u8fd8\u5269\u6709&quot; + this.ticketCount + &quot;\u5f20&quot;);\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            } finally {\n                //\u91ca\u653eLock\u9501\n                lock.unlock();\n            }\n        }\n    }\n}\n\n\u6b7b\u9501\n\u7ebf\u7a0b\u6b7b\u9501\u662f\u6307\u7531\u4e8e\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u7ebf\u7a0b\u4e92\u76f8\u6301\u6709\u5bf9\u65b9\u6240\u9700\u8981\u7684\u8d44\u6e90\uff0c\u5bfc\u81f4\u8fd9\u4e9b\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u65e0\u6cd5\u524d\u5f80\u6267\u884c\u3002\n\u5efa\u8bae\uff1a\u4e0d\u8981\u5199\u9501\u7684\u5d4c\u5957\u3002\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/category/Java\u57fa\u7840/"}], "tags": [{"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/tag/Java\u57fa\u7840/"}, {"name": "\u591a\u7ebf\u7a0b", "slug": "\u591a\u7ebf\u7a0b", "permalink": "/tag/\u591a\u7ebf\u7a0b/"}, {"name": "\u5b66\u4e60\u7b14\u8bb0", "slug": "\u5b66\u4e60\u7b14\u8bb0", "permalink": "/tag/\u5b66\u4e60\u7b14\u8bb0/"}]}, {"title": "Java\u591a\u7ebf\u7a0b\u7684\u5e38\u89c1\u65b9\u6cd5", "date": "2020-03-09T13:10:00-00.00", "path": "/archives/thread-void-java/", "text": "\u4e09\u79cd\u591a\u7ebf\u7a0b\u5b9e\u73b0\u65b9\u5f0f\u7684\u4f18\u7f3a\u70b9\n\n\n\n\u4f18\u70b9\n\u7f3a\u70b9\n\n\n\n\n\u5b9e\u73b0Runnable\u3001Callable\u63a5\u53e3\n\u6269\u5c55\u6027\u5f3a\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u540c\u65f6\u8fd8\u53ef\u4ee5\u7ee7\u627f\u5176\u4ed6\u7684\u7c7b\n\u7f16\u7a0b\u76f8\u5bf9\u590d\u6742,\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528Thread\u7c7b\u7684\u65b9\u6cd5\n\n\n\u7ee7\u627fThread\u7c7b\n\u7f16\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Thread\u7c7b\u4e2d\u7684\u65b9\u6cd5\n\u6269\u5c55\u6027\u8f83\u5dee\uff0c\u4e0d\u80fd\u7ee7\u627f\u5176\u4ed6\u7684\u7c7b\n\n\n\n\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u540d\u79f0\n\u83b7\u53d6\u7ebf\u7a0b\u7684\u540d\u79f0\n\nString getName() \uff1a\u8fd4\u56de\u6b64\u7ebf\u7a0b\u7684\u540d\u79f0\n\n\u8bbe\u7f6e\u7ebf\u7a0b\u7684\u540d\u79f0\n\n\u76f4\u63a5\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4f20\u53c2\nvoid setName(String name) \n\npublic class MyThread extends Thread {\n    public MyThread() {}\n\n    public MyThread(String name) {\n        super(name);\n    }\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(getName()+&quot;\u7ebf\u7a0b\u5f00\u542f\u4e86&quot; + i);\n        }\n    }\n}\n\npublic class MyThreadTest {\n    public static void main(String[] args) {\n        MyThread t1 = new MyThread(&quot;\u5c0f\u660e&quot;);\n        MyThread t2 = new MyThread(&quot;\u5c0f\u7ea2&quot;);\n\n//        \u4f7f\u7528setName()\n//        t1.setName(&quot;\u5c0f\u660e&quot;);\n//        t2.setName(&quot;\u5c0f\u7ea2&quot;);\n\n        t1.start();\n        t2.start();\n    }\n}\n\n\u6ce8\u610f\uff1a\u7ebf\u7a0b\u662f\u6709\u9ed8\u8ba4\u540d\u5b57\u7684\uff0c\u4e3aThread-\u7f16\u53f7\n\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684\u5bf9\u8c61\n\npublic static Thread currentThread() \uff1a\u8fd4\u56de\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f15\u7528\n\u4f5c\u7528\uff1a\u5f53\u4f7f\u7528 \u5b9e\u73b0Runnable \u521b\u5efa\u7ebf\u7a0b\u65f6\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528getName()\uff0c\u6b64\u65f6\u5e94\u8be5\u7528 Thread.currentThread().getName()\n\npublic class MyRunnable implements Runnable {\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(Thread.currentThread().getName()+&quot;\u7b2c\u4e8c\u79cd\u65b9\u5f0f&quot;+i);\n        }\n    }\n}\n\n\u7ebf\u7a0b\u4f11\u7720\n\npublic static void sleep(long time) \uff1a\u8ba9\u7ebf\u7a0b\u4f11\u7720\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\u3002 \n\n@Override\n    public void run() {\n        while (true) {\n            try {\n                //\u7ebf\u7a0b\u4f11\u7720\n                Thread.sleep(800);\n                System.out.println(&quot; ----First Thread----&quot;);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\u540e\u53f0\u7ebf\u7a0b/\u5b88\u62a4\u7ebf\u7a0b\n\n\u5f53\u7ebf\u7a0b\u505c\u6b62\u65f6\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4e5f\u968f\u4e4b\u505c\u6b62\u3002\npublic final void sedDaemon(boolean on) \uff1a\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\n\npublic class test {\n    public static void main(String[] args) {\n        Runnable1 runnable1 = new Runnable1();\n        Runnable2 runnable2 = new Runnable2();\n\n        Thread thread1 = new Thread(runnable1,&quot;\u7ebf\u7a0b\u4e00&quot;);\n        Thread thread2 = new Thread(runnable2,&quot;\u7ebf\u7a0b\u4e8c&quot;);\n\n//        \u8bbe\u7f6e\u7ebf\u7a0b\u4e8c\u4e3a\u5b88\u62a4\u7ebf\u7a0b\n        thread2.setDaemon(true);\n        thread1.start();\n        thread2.start();\n    }\n}\n\nclass Runnable1 implements Runnable{\n\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 10; i++) {\n            System.out.println(Thread.currentThread().getName()+&quot;\u6267\u884c\u4e86&quot;+i);\n        }\n    }\n}\n\nclass Runnable2 implements Runnable{\n\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(Thread.currentThread().getName()+&quot;\u6267\u884c\u4e86&quot;+i);\n        }\n    }\n}\n\n\u7ebf\u7a0b\u8c03\u5ea6\u591a\u7ebf\u7a0b\u7684\u5e76\u53d1\u8fd0\u884c\uff1a\n\u8ba1\u7b97\u673a\u4e2d\u7684CPU\uff0c\u5728\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u6267\u884c\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u53ea\u6709\u83b7\u5f97CPU\u7684\u4f7f\u7528\u6743\u624d\u80fd\u6267\u884c\u4ee3\u7801\u3002\u5404\u4e2a\u7ebf\u7a0b\u8f6e\u6d41\u83b7\u5f97CPU\u7684\u4f7f\u7528\u6821\uff0c\u5206\u522b\u6267\u884c\u5404\u81ea\u7684\u4efb\u52a1\u3002\n\u7ebf\u7a0b\u8c03\u5ea6\n\u7ebf\u7a0b\u6709\u4e24\u79cd\u8c03\u5ea6\u6a21\u578b\u00b7\u5206\u65f6\u8c03\u5ea6\u6a21\u578b\uff1a\n\n\u6240\u6709\u7ebf\u7a0b\u8f6e\u6d41\u4f7f\u7528CPU\u7684\u4f7f\u7528\u6743\uff0c\u5e73\u5747\u5206\u914d\u6bcf\u4e2a\u7ebf\u7a0b\u5360\u7528CPU\u7684\u65f6\u95f4\u7247\n\u62a2\u5360\u5f0f\u8c03\u5ea6\u6a21\u578b\uff1a\u4f18\u5148\u8ba9\u4f18\u5148\u7ea7\u9ad8\u7684\u7ebf\u7a0b\u4f7f\u7528CPU\uff0c\u5982\u679c\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u90a3\u4e48\u4f1a\u96d5\u673a\u9009\u62e9\u4e00\u4e2a\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u7ebf\u7a0b\u83b7\u53d6\u7684CPU\u65f6\u95f4\u7247\u76f8\u5bf9\u591a\u4e00\u4e9b\nJava\u4f7f\u7528\u7684\u662f\u62a2\u5360\u5f0f\u8c03\u5ea6\u6a21\u578b\n\n\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\n\npublic final void setPriority(int newPriority)    \u8bbe\u7f6e\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\npublic  final int getPriority()   \u83b7\u53d6\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\n\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea71-10\uff0c\u9ed8\u8ba4\u4e3a5\n\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u62a2\u593a\u5230cpu\u6267\u884c\u6743\u7684\u673a\u7387\u66f4\u9ad8\uff0c\u4f46\u4ec5\u4ec5\u53ea\u662f\u673a\u7387\u3002\n\npublic class RunnableTest {\n    public static void main(String[] args) {\n        MyRunnable1 runnable1 = new MyRunnable1();\n        MyRunnable2 runnable2 = new MyRunnable2();\n        Thread thread1 = new Thread(runnable1);\n        Thread thread2 = new Thread(runnable2);\n\n        //\u8bbe\u7f6e\u7ebf\u7a0b\u4f18\u5148\u7ea7\n        thread1.setPriority(8);\n        thread2.setPriority(1);\n\n        //\u6253\u5370\u51fa\u7ebf\u7a0b\u4e00\u7684\u4f18\u5148\u7ea7,\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4e3a5\n        System.out.println(thread1.getPriority());\n\n        thread1.start();\n        thread2.start();\n    }\n}\n\nclass MyRunnable1 implements Runnable {\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                //\u7ebf\u7a0b\u4f11\u7720\n                Thread.sleep(800);\n                System.out.println(&quot; ----First Thread----&quot;);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\nclass MyRunnable2 implements Runnable {\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                //\u7ebf\u7a0b\u4f11\u7720\n                Thread.sleep(1500);\n                System.out.println(&quot; ----Second Thread----&quot;);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n\u7ebf\u7a0b\u751f\u547d\u5468\u671f\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/category/Java\u57fa\u7840/"}], "tags": [{"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/tag/Java\u57fa\u7840/"}, {"name": "\u591a\u7ebf\u7a0b", "slug": "\u591a\u7ebf\u7a0b", "permalink": "/tag/\u591a\u7ebf\u7a0b/"}, {"name": "\u5b66\u4e60\u7b14\u8bb0", "slug": "\u5b66\u4e60\u7b14\u8bb0", "permalink": "/tag/\u5b66\u4e60\u7b14\u8bb0/"}]}, {"title": "Java\u591a\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f", "date": "2020-03-09T12:10:00-00.00", "path": "/archives/thread-know-java/", "text": "\u5e76\u53d1\u548c\u5e76\u884c\n\u5e76\u53d1:\u5728\u540c\u4e00\u65f6\u523b,\u6709\u591a\u4e2a\u6307\u4ee4\u5728\u5355\u4e2aCPU\u4e0a\u4ea4\u66ff\u6267\u884c.\n\u5e76\u884c:\u5728\u540c\u4e00\u65f6\u523b,\u6709\u591a\u4e2a\u6307\u4ee4\u5728\u591a\u4e2aCPU\u4e0a\u540c\u65f6\u6267\u884c.\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\u8fdb\u7a0b:\u6b63\u5728\u8fd0\u884c\u7684\u8f6f\u4ef6.\n\n\u72ec\u7acb\u6027:\u8fdb\u7a0b\u662f\u4e00\u4e2a\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d,\u540c\u65f6\u4e5f\u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u548c\u8c03\u5ea6\u7684\u72ec\u7acb\u5355\u4f4d.\n\u52a8\u6001\u6027:\u8fdb\u7a0b\u7684\u5b9e\u8d28\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b,\u8fdb\u7a0b\u662f\u52a8\u6001\u4ea7\u751f,\u52a8\u6001\u6d88\u4ea1\u7684.\n\u5e76\u53d1\u6027:\u4efb\u4f55\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u540c\u5176\u4ed6\u8fdb\u7a0b\u4e00\u8d77\u5e76\u53d1\u6267\u884c.\n\n\u7ebf\u7a0b:\u8fdb\u7a0b\u4e2d\u7684\u5355\u4e2a\u987a\u5e8f\u63a7\u5236\u6d41,\u662f\u4e00\u6761\u6267\u884c\u8def\u5f84.\n\u591a\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\n\n\u7ee7\u627fThread\u7c7b\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\n\u5b9e\u73b0Runnable\u63a5\u53e3\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\n\u5229\u7528Callable\u548cFuture\u63a5\u53e3\u65b9\u5f0f\u5b9e\u73b0\n\n\u591a\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u6848\n\u65b9\u5f0f1\uff1a\u7ee7\u627fThread\u7c7b\n\n\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u5982MyThread\u7ee7\u627fThread\u7c7b\n\u5728MyThread\u7c7b\u4e2d\u91cd\u5199run()\u65b9\u6cd5\n\u521b\u5efaMyThread\u7c7b\u7684\u5bf9\u8c61\n\u542f\u52a8\u7ebf\u7a0b\n\npublic class MyThread extends Thread {\n    @Override\n    public void run() {\n//        run\u65b9\u6cd5\u662f\u6267\u884c\u7684\u5185\u5bb9\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(&quot;\u7ebf\u7a0b\u5f00\u542f\u4e86&quot;+i);\n        }\n    }\n}\n\npublic class MyThreadTest {\n    public static void main(String[] args) {\n        MyThread t1 = new MyThread();\n        MyThread t2 = new MyThread();\n        t1.start();\n        t2.start();\n//        \u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u7ebf\u7a0b\u662f\u4ea4\u66ff\u6267\u884c\u7684\n    }\n}\n\n\u4e24\u4e2a\u5c0f\u95ee\u9898\n\u4e3a\u4ec0\u4e48\u8981\u91cd\u5199run\u65b9\u6cd5\uff1f\n\n\u56e0\u4e3arun\u662f\u7528\u6765\u5c01\u88c5\u88ab\u7ebf\u7a0b\u6267\u884c\u7684\u4ee3\u7801\nrun()\u65b9\u6cd5\u548cstart()\u65b9\u6cd5\u7684\u533a\u522b\uff1f\nrun()\uff1a\u5c01\u88c5\u7ebf\u7a0b\u6267\u884c\u7684\u4ee3\u7801\uff0c\u76f4\u63a5\u8c03\u7528\uff0c\u76f8\u5f53\u4e8e\u666e\u901a\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u5e76\u6ca1\u6709\u5f00\u542f\u7ebf\u7a0b.\nstart()\uff1a\u542f\u52a8\u7ebf\u7a0b\uff1b\u7136\u540e\u7531VM\u8c03\u7528\u6b64\u7ebf\u7a0b\u7684run()\u65b9\u6cd5.\n\n\u65b9\u5f0f2\uff1a\u5b9e\u73b0Runnable\n\n\u5b9a\u4e49\u4e00\u4e2a\u7c7bMyRunnable\u5b9e\u73b0Runnable\u63a5\u53e3\n\n\u5728MyRunnable\u7c7b\u4e2d\u91cd\u5199run()\u65b9\u6cd5\n\n\u521b\u5efaMyRunnable\u7c7b\u7684\u5bf9\u8c61\n\n\u521b\u5efaThread\u7c7b\u7684\u5bf9\u8c61\uff0c\u628aMyRunnable\u5bf9\u8c61\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\n\n\u542f\u52a8\u7ebf\u7a0b\n\n\npublic class MyRunnable implements Runnable {\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(&quot;\u7b2c\u4e8c\u79cd\u65b9\u5f0f&quot;+i);\n        }\n    }\n}\n\npublic class MyRunnableTest {\n    public static void main(String[] args) {\n//        \u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u5bf9\u8c61\n        MyRunnable m1 = new MyRunnable();\n        MyRunnable m2 = new MyRunnable();\n//        \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61,\u5e76\u628a\u53c2\u6570\u4f20\u7ed9\u8fd9\u4e2a\u7ebf\u7a0b\n        Thread t1 = new Thread(m1);\n        Thread t2 = new Thread(m2);\n//        \u5f00\u542f\u7ebf\u7a0b\n        t1.start();\n        t2.start();\n    }\n}\n\n\u65b9\u5f0f3\uff1aCallable\u548cFuture\n\n\u5b9a\u4e49\u4e00\u4e2a\u7c7bMyCallable\u5b9e\u73b0Callable\u63a5\u53e3\n\u5728MyCallable\u7c7b\u4e2d\u91cd\u5199call()\u65b9\u6cd5\u00b7\u521b\u5efaMyCallable\u7c7b\u7684\u5bf9\u8c61\n\u521b\u5efaFuture\u7684\u5b9e\u73b0\u7c7bFutureTask\u5bf9\u8c61\uff0c\u628aMyCallable\u5bf9\u8c61\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\n\u521b\u5efaThread\u7c7b\u7684\u5bf9\u8c61\uff0c\u628aFutureTask\u5bf9\u8c61\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\n\u542f\u52a8\u7ebf\u7a0b\n\u518d\u8c03\u7528get\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u7ebf\u770b\u7a0b\u7ed3\u675f\u4e4b\u540e\u7684\u7ed3\u679c\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f:get\u65b9\u6cd5\u8981\u5728start\u5f00\u542f\u4e4b\u540e\u8c03\u7528.\n\npublic class MyCallable implements Callable&lt;String&gt;{\n    @Override\n    public String call() throws Exception {\n        for (int i = 0; i &lt; 100; i++) {\n            System.out.println(&quot;\u7ebf\u7a0b\u6267\u884c\u4e2d&quot;+i);\n        }\n        return &quot;\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210&quot;;\n    }\n}\n\npublic class MyCallableTest {\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        MyCallable m1 = new MyCallable();\n//        \u53ef\u4ee5\u83b7\u53d6\u7ebf\u7a0b\u6267\u884c\u540e\u7684\u7ed3\u679c,\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8bf6Thread\n        FutureTask&lt;String&gt; f1 = new FutureTask(m1);\n        Thread t1 = new Thread(f1);\n//        \u5f00\u542f\u7ebf\u7a0b\n        t1.start();\n//        \u8fd4\u56de\u503c\n        String o = f1.get();\n        System.out.println(o);\n    }\n}\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/category/Java\u57fa\u7840/"}], "tags": [{"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/tag/Java\u57fa\u7840/"}, {"name": "\u591a\u7ebf\u7a0b", "slug": "\u591a\u7ebf\u7a0b", "permalink": "/tag/\u591a\u7ebf\u7a0b/"}, {"name": "\u5b66\u4e60\u7b14\u8bb0", "slug": "\u5b66\u4e60\u7b14\u8bb0", "permalink": "/tag/\u5b66\u4e60\u7b14\u8bb0/"}]}, {"title": "\u5982\u4f55\u5236\u4f5c\u5706\u5f62\u5934\u50cf\u6216\u56fe\u7247", "date": "2020-03-08T12:10:00-00.00", "path": "/archives/head-circular/", "text": "\u6709\u65f6\u5019\u6211\u4eec\u4e3a\u4e86\u6548\u679c\u5c55\u793a\uff0c\u9700\u8981\u628a\u5934\u50cf\u6216\u8005\u56fe\u7247\u8f6c\u5316\u4e3a\u5706\u5f62\u3002\n\n\u539f\u7406\uff1a\u6211\u4eec\u5229\u7528Photoshop\u7684\u692d\u5706\u9009\u533a\u5de5\u5177\uff0c\u5c06\u672a\u9009\u62e9\u7684\u533a\u57df\u5220\u9664\uff0c\u5c31\u5f97\u5230\u4e86\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u5566\u3002\n\u5b9e\u73b0\uff1a\n1. \u6253\u5f00Photoshop\n\u6253\u5f00\u4f60\u9700\u8981\u64cd\u4f5c\u7684\u56fe\u7247\uff0c\u5982\u679c\u592a\u5c0f\u5c31\u6309\u4e0bCtrl+0\uff0c\u518d\u6309\u4e0bshift+Ctrl+n\uff0c\u65b0\u5efa\u4e00\u4e2a\u56fe\u5c42\uff08Ctrl+j\uff09\uff0c\u5c06\u5e95\u56fe\u53d6\u6d88\u663e\u793a\u3002\n\n\n2. \u9009\u62e9\u692d\u5706\u5de5\u5177\n\n3. \u9009\u62e9\u533a\u57df\n\u6309\u4f4fshift\u4e0d\u653e\uff0c\u62d6\u52a8\u9f20\u6807\uff0c\u52fe\u753b\u51fa\u5706\u5f62\u533a\u57df\uff0c\u786e\u5b9a\u9009\u533a\uff08Ctrl+\u56de\u8f66\uff09\uff0c\u5207\u6362\u5230\u539f\u56fe\uff0c\u53cd\u9009\u533a\u57df\uff08shift+Ctrl+j\uff09\uff0c\u6309\u4e0bdel\u5220\u9664\u952e\u3002\n\n\n\n\u5982\u679c\u9700\u8981\u88c1\u526a\u7684\u8bdd\uff0c\u8fd9\u91cc\u6709\u4e2a\u88c1\u526a\u5de5\u5177\u3002\n\n4. \u5bfc\u51fa\u56fe\u50cf\n\n\n\u9009\u62e9PNG\u53ef\u4ee5\u5bfc\u51fa\u80cc\u666f\u662f\u900f\u660e\u7684\u5706\u5f62\u5934\u50cf\uff0c\u5927\u529f\u544a\u6210\u3002\n", "categories": [{"name": "\u4e1a\u4f59", "slug": "\u4e1a\u4f59", "permalink": "/category/\u4e1a\u4f59/"}, {"name": "Photoshop", "slug": "Photoshop", "permalink": "/category/Photoshop/"}], "tags": [{"name": "Photoshop", "slug": "Photoshop", "permalink": "/tag/Photoshop/"}, {"name": "\u88c1\u526a", "slug": "\u88c1\u526a", "permalink": "/tag/\u88c1\u526a/"}]}, {"title": "\u601d-\u5173\u4e8emaven\u7684dependencyManagement", "date": "2020-03-06T12:10:00-00.00", "path": "/archives/dependencyManagement-maven/", "text": "Dependency Management\n\u6211\u4eec\u4e0d\u59a8\u5148\u53bb\u770b\u770b\u5b98\u65b9\u7684\u6587\u6863\u3002\nBesides inheriting certain top-level elements, parents have elements to configure values for child POMs and transitive dependencies. One of those elements is dependencyManagement.\ndependencyManagement: is used by a POM to help manage dependency information across all of its children. If the my-parent project uses dependencyManagement to define a dependency on junit:junit:4.12, then POMs inheriting from this one can set their dependency giving the groupId=junit and artifactId=junit only and Maven will fill in the version set by the parent. The benefits of this method are obvious. Dependency details can be set in one central location, which propagates to all inheriting POMs.\nNote that the version and scope of artifacts which are incorporated from transitive dependencies are also controlled by version specifications in a dependency management section. This can lead to unexpected consequences. Consider a case in which your project uses two dependences, dep1 and dep2. dep2 in turn also uses dep1, and requires a particular minimum version to function. If you then use dependencyManagement to specify an older version, dep2 will be forced to use the older version, and fail. So, you must be careful to check the entire dependency tree to avoid this problem; mvn dependency:tree is helpful.\n\n\u6211\u7b80\u5355\u7528\u5927\u767d\u8bdd\u8bf4\u4e00\u4e0b\u4ed6\u5728\u8bb2\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f\u7528\u6765\u7ba1\u7406\u4f9d\u8d56\u7edf\u4e00\u7684\uff0c\u5f53\u4f60\u5728\u7236\u7ea7\u4f9d\u8d56\u4e2d\u62e5\u6709\u4e00\u4e2a\u4f9d\u8d56\uff0c\u4ed6\u5c31\u53ef\u4ee5\u66ff\u4f60\u5728\u5b50\u6a21\u5757\u4e2d\u641e\u5b9a\u4ed6\u7684\u7248\u672c\uff0c\u53ea\u8981\u4f60\u7684\u5b50\u6a21\u5757groupId\u548cartifactId\u8ddf\u7236\u7ea7\u6a21\u5757\u540d\u5b57\u4e00\u6837\u5373\u53ef\u3002\u5f88\u660e\u663e\u7684\u597d\u5904\u5c31\u662f\u7248\u672c\u89c4\u8303\u7edf\u4e00\u63a7\u5236\u3002\u4e4b\u540e\u4ed6\u8bf4\u4e86\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\uff0c\u53eb\u4f60\u5c0f\u5fc3\u7ba1\u7406\u597d\u4f9d\u8d56\u6811\uff0c\u8fd9\u65b9\u9762\u6211\u4eec\u4e5f\u4e0d\u7528\u62c5\u5fc3\u592a\u591a\uff0c\u56e0\u4e3a\u6211\u4eec\u6709idea\u3002\u5927\u5bb6\u770b\u770b\u5b98\u65b9\u539f\u8bdd\uff0c\u770b\u82f1\u8bed\u6587\u6863\u786e\u5b9e\u5f88\u96be\uff0c\u597d\u5728\u7a0b\u5e8f\u5458\u5199\u6280\u672f\u6587\u6863\u90fd\u4f1a\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bcd\u6c47\uff08\u8fd9\u91cc\u6211\u8bf4\u7684\u4e5f\u5305\u62ec\u4e2d\u6587\u6587\u6863\uff09\u3002\n\u6211\u4eec\u4e86\u89e3\u4e86\u8fd9\u4e2a\u4e1c\u897f\u4e4b\u540e\uff0c\u6211\u5bfb\u601d\u7740\u4e3a\u4f55\u6ca1\u6709\u4f8b\u5b50\uff0c\u6211\u628a\u6574\u4e2a\u5b98\u65b9\u6587\u6863\u770b\u4e86\u4e00\u904d\u4e5f\u6ca1\u627e\u5230\uff0c\u663e\u7136\u8fd9\u4e0d\u662fMaven\u5fc5\u9700\u7684\uff0c\u8fd9\u6837\u7684\u7248\u672c\u89c4\u8303\u63a7\u5236\uff0c\u5982\u679c\u4e0d\u662f\u8d85\u5927\u578b\u9879\u76ee\u53c8\u600e\u4f1a\u7528\u5f97\u5230\uff0c\u5927\u90e8\u5206\u9879\u76ee\u4e0d\u8fc7\u5355\u6a21\u5757\u4e1a\u52a1\u5904\u7406\uff0c\u54ea\u6015\u4f60\u662f\u4e2a\u591a\u6a21\u5757\u9879\u76ee\uff0c\u4e5f\u4e0d\u5916\u4e4e\u662f\u4e09\u5c42\u63d0\u53d6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u7236\u6a21\u5757\u4f9d\u8d56\u4e2d\u5f15\u5165\u5171\u6709\u7684\uff0c\u5728\u5b50\u6a21\u5757\u4e2d\u5f15\u5165\u81ea\u9700\u7684\uff0c\u6211\u505a\u9879\u76ee\u4fbf\u4f1a\u5982\u6b64\u3002\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u4e2a\u4e1c\u897f\u5462\uff0c\u56e0\u4e3a\u6211\u60f3\u5c06\u6240\u6709\u7684\u5b66\u4e60\u6e90\u7801\u90fd\u6258\u7ba1\u4e8eGithub\uff0c\u800c\u4e0d\u4ec5\u9650\u4e8e\u9879\u76ee\u3002\u8fd9\u5c31\u5bfc\u81f4\u6211\u9700\u8981\u5927\u91cf\u6a21\u5757\u6765\u8fdb\u884c\u5206\u5e03\uff0cMaven\u5c31\u89e3\u51b3\u4e86\u6211\u8fd9\u4e00\u96be\u9898\u3002\n\u56de\u5230\u4e0a\u9762\uff0c\u5b98\u65b9\u6ca1\u6709\u7ed9\u4f8b\u5b50\uff0c\u6211\u4eec\u5c31\u81ea\u5df1\u6765\uff0c\u6bd5\u7adf\u7f16\u7a0b\u5bb9\u9519\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002\n\u9996\u5148\u6211\u4eec\u65b0\u5efa\u4e00\u4e2aMaven\u7684\u7a7a\u9879\u76ee\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u7528\u5230\u591a\u6a21\u5757\uff0c\u6211\u4eec\u5c06\u81ea\u5e26\u7684src\u5220\u9664\u3002\n\n\u6211\u4eec\u6765\u5230\u9879\u76ee\u4e0b)\u7684pom.xml\uff0c\u65e2\u7136\u7528\u5230dependencyManagement\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528mysql\u548cLombok\u8fd9\u4e24\u4e2a\u4f9d\u8d56\u4f5c\u4e3a\u6f14\u793a\u3002\uff08\u8003\u8651\u5230\u4f7f\u7528\u4e00\u4e2a\u4f9d\u8d56\u53ef\u80fd\u4e0d\u5177\u5907\u8bf4\u670d\u529b\uff0c\u4e09\u4e2a\u53c8\u641e\u5f97\u50cf\u5728\u79d1\u7814\uff0c\u56e0\u6b64\u4e8c\u4e2a\u4e3a\u6700\u4f73\uff09\n&lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;mysql&lt;/groupId&gt;\n                &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n                &lt;version&gt;8.0.18&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                &lt;version&gt;1.18.10&lt;/version&gt;\n                &lt;scope&gt;provided&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n\u4e0a\u9762\u7684\u5199\u6cd5\u4f7f\u5f97\u7248\u672c\u53f7\u4e5f\u5728\u5176\u4e2d\uff0c\u4f9d\u8d56\u8f83\u591a\u65f6\u4e0d\u65b9\u4fbf\u7ba1\u7406\uff0c\u6211\u4eec\u517b\u6210\u4e60\u60ef\u63d0\u53d6\u51fa\u6765\u3002\n&lt;properties&gt;\n        &lt;mysql.connector.version&gt;8.0.18&lt;/mysql.connector.version&gt;\n        &lt;lombok.version&gt;1.18.10&lt;/lombok.version&gt;\n    &lt;/properties&gt;\n\n\u5c06\u539f\u672c\u7684\n&lt;version&gt;8.0.18&lt;/version&gt;\u4fee\u6539\u4e3a&lt;version&gt;${mysql.connector.version}&lt;/version&gt;\n&lt;version&gt;1.18.10&lt;/version&gt;\u4fee\u6539\u4e3a &lt;version&gt;${lombok.version}&lt;/version&gt;\n\u6211\u4eec\u66f4\u65b0\u4e00\u4e0bMaven\uff0c\u4f1a\u53d1\u73b0\u9879\u76ee\u4e2d\u5e76\u6ca1\u6709\u5f15\u5165\u4f9d\u8d56\uff0c\u8fd9\u5c31\u5f88\u597d\u7684\u8bf4\u660e\u4e86dependencyManagement\u548cdependencies\u7684\u533a\u522b\uff0c\u4e5f\u5c55\u793a\u51fa\u5b83\u7684\u4f18\u8d8a\u4e4b\u5904\uff0c\u5b50\u6a21\u5757\u53ea\u9700\u8981\u653e\u5fc3\u4f7f\u7528\u4f9d\u8d56\u800c\u65e0\u9700\u8003\u8651\u7248\u672c\u51b2\u7a81\u95ee\u9898\u3002\u540c\u65f6\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u65b0\u624b\u6253\u5305\u9879\u76ee\u65f6\u4f18\u5316\u4e0d\u4f73\u5bfc\u81f4\u4f53\u79ef\u8fc7\u5927\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53bb\u65b0\u5efa\u4e00\u4e2aModule(\u6a21\u5757)\uff0c\u8fdb\u5165\u6a21\u5757\u4e0b\u7684pom.xml\n\n\u6211\u4eec\u52a0\u5165\u5728\u7236\u6a21\u5757\u4e2d\u7684\u4e24\u4e2a\u4f9d\u8d56\uff0c\u770b\u770b\u662f\u5426\u80fd\u5728\u5b50\u6a21\u5757\u4e2d\u5f15\u5165\u3002\u6309\u7167\u5b98\u65b9\u6587\u6863\uff0c\u4f60\u53ea\u8981groupId\u548cartifactId\u8ddf\u7236\u6a21\u5757\u4e00\u4e00\u5bf9\u5e94\uff0c\u4e5f\u5c31\u662f\u540d\u5b57\u76f8\u540c\u5373\u53ef\u3002\n&lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n\n\u7ed3\u679c\u8ddf\u9884\u671f\u7684\u4e00\u6837\uff0c\u6211\u4eec\u518d\u53bb\u65b0\u5efa\u4e00\u4e2a\u6a21\u5757\uff0c\u8bd5\u7740\u53ea\u5f15\u5165mysql\u3002\n&lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u7684\u6d4b\u8bd5\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u7248\u672c\u7ba1\u7406\u8fd9\u601d\u60f3\u4e0eSpringBoot\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u4f46\u5374\u6bd4SpringBoot\u8981\u7075\u6d3b\u5f97\u591a\u3002\n\u60f3\u6765\u81ea\u5df1\u4e5f\u662f\u5f88\u7528\u5fc3\u5199\u4e0b\u8fd9\u7bc7\u535a\u5ba2\uff0c\u4e0e\u5176\u8bf4\u5b83\u662f\u6559\u7a0b\uff0c\u4e0d\u5982\u8bf4\u662f\u5bf9\u4e00\u4e2a\u4e1c\u897f\u7684\u601d\u8003\u4e0e\u5b9e\u8df5\u3002\u6240\u4ee5\u6211\u8ba4\u4e3a\u8fd9\u7bc7\u535a\u5ba2\u4e0d\u5b58\u5728\u957f\u7bc7\u5927\u8bba\uff0c\u8fd9\u4e5f\u662f\u6211\u66f4\u613f\u610f\u770b\u5230\u7684\u6280\u672f\u535a\u5ba2\u3002\u5b83\u9762\u5bf9\u7684\u662f\u65b0\u5b66\u4e60\u7684\u4eba\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u4e86\u89e3\u8fc7\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5355\u5355\u662f\u56e0\u4e3a\u5fd8\u8bb0\u4e86\u4e00\u4e2a\u77e5\u8bc6\u70b9\u60f3\u901a\u8fc7\u767e\u5ea6\u6765\u83b7\u53d6\u4f7f\u7528\u65b9\u6cd5\uff0c\u90a3\u6211\u66f4\u63d0\u5021\u4f60\u5b66\u4e60\u65f6\u4e3a\u81ea\u5df1\u8bb0\u5f55\u7b14\u8bb0\uff0c\u4e00\u65b9\u9762\u63d0\u5347\u4f60\u7684\u77e5\u8bc6\u7d22\u5f15\u901f\u5ea6\uff0c\u4e5f\u589e\u5f3a\u4f60\u7684\u77e5\u8bc6\u638c\u63e1\u3002\u6240\u4ee5\u6211\u4f1a\u5c06\u8fd9\u7bc7\u535a\u5ba2\u518d\u5206\u79bb\u51fa\u4e00\u7bc7\u8f83\u7b80\u77ed\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u6765\u65b9\u4fbf\u81ea\u5df1\u65e5\u540e\u67e5\u9605\u3002\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/tag/JavaWeb/"}, {"name": "maven", "slug": "maven", "permalink": "/tag/maven/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}]}, {"title": "\u6559\u80b2\u90ae\u7bb1\u514d\u8d39\u7533\u8bf7\u6b63\u7248idea(\u5305\u62ec\u5168\u5bb6\u6876)", "date": "2020-03-05T01:09:00-00.00", "path": "/archives/jetbrains-edu/", "text": "\u8fdb\u5165\u7533\u8bf7\u754c\u9762\uff1a\nhttps://www.jetbrains.com/shop/eform/students  \u586b\u5199\u76f8\u5173\u4fe1\u606f\u3002\n\n\n\n\u770b\u5230\u4e0a\u9762\u7684\u754c\u9762\u65f6\u6211\u4eec\u5df2\u7ecfOK\u4e86\uff0c\u8fd9\u65f6\u5019\u53bb\u4f60\u7684\u6559\u80b2\u90ae\u7bb1\u4e2d\u67e5\u770b\u662f\u5426\u6709\u4e00\u4efd\u65b0\u90ae\u4ef6\uff0c\u53ef\u80fd\u9700\u89811-2\u5206\u949f\u65f6\u95f4\n\n\u8fd9\u91cc\u9700\u8981\u4f60\u9605\u8bfb2\u5206\u949f\u5de6\u53f3\u7684\u65f6\u957f\u624d\u4f1a\u8ba9\u4f60\u70b9\u51fbAccept\n\n\u8f93\u5165\u4f60\u7684\u6559\u80b2\u90ae\u7bb1\u5f00\u59cb\u8fdb\u884c\u6ce8\u518c\uff0c\u6ce8\u610f\u662f\u586b\u5199\u5728\u4e0b\u9762\u7684\u6846\u3002\n\n\n\n\n\u5f00\u59cb\u5954\u653e\u5427\uff0c\u8fd9\u91cc\u8f93\u5165\u4f60\u6ce8\u518c\u7684\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u5c31\u53ef\u4ee5\u5566\u3002\u5176\u4ed6\u5168\u5bb6\u6876\u4e5f\u662f\u5982\u6b64\u6fc0\u6d3b\u3002\uff08\u8fd9\u91cc\u767b\u5f55\u6709\u65f6\u5019\u4f1a\u5931\u8d25\uff0c\u767b\u5f55\u51e0\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\uff09\n\n", "categories": [{"name": "\u8f6f\u4ef6", "slug": "\u8f6f\u4ef6", "permalink": "/category/\u8f6f\u4ef6/"}], "tags": [{"name": "\u8f6f\u4ef6\u63a8\u8350", "slug": "\u8f6f\u4ef6\u63a8\u8350", "permalink": "/tag/\u8f6f\u4ef6\u63a8\u8350/"}, {"name": "\u514d\u8d39\u7533\u8bf7", "slug": "\u514d\u8d39\u7533\u8bf7", "permalink": "/tag/\u514d\u8d39\u7533\u8bf7/"}]}, {"title": "\u7eafJava\u642d\u5efaSpringMVC\u9879\u76ee", "date": "2020-03-04T15:00:11-00.00", "path": "/archives/mvc-Java/", "text": "\u7eafJava\u642d\u5efaSpringMVC\u9879\u76ee\n1. \u521b\u5efa\u5de5\u7a0b\n\u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u666e\u901aMaven\u5de5\u7a0b\uff0c\u5e76\u6dfb\u52a0 SpringMVC \u7684\u4f9d\u8d56\uff0c\u8fd9\u91cc\u73af\u5883\u7684\u642d\u5efa\u9700\u8981\u7528\u5230 Servlet \uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5f15\u5165 Servlet \u7684\u4f9d\u8d56\uff0c\u6700\u7ec8pom.xml \u6dfb\u52a0\u7684\u5185\u5bb9\u5982\u4e0b\uff1a\n&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n        &lt;version&gt;5.2.2.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n        &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n        &lt;version&gt;4.0.1&lt;/version&gt;\n        &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n\n2. \u6dfb\u52a0SpringMVC\u914d\u7f6e\u7c7b\n@Configuration\n@ComponentScan(&quot;com.xn2001&quot;)\npublic class SpringMVCConfig {\n\n}\n\n@Configuration\u6807\u6ce8\u8fd9\u4e2a\u7c7b\u4e3a\u914d\u7f6e\u7c7b\n@ComponentScan(\"com.xn2001\")\uff0c\u626b\u63cf\u8fd9\u4e2a\u5305\u4e0b\u91cc\u9762\u7684Bean\u3002\n\u8fd9\u91cc\u5982\u679c\u4e0d\u9700\u8981\u5728 SpringMVC \u4e2d\u6dfb\u52a0\u5176\u4ed6\u7684\u989d\u5916\u914d\u7f6e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002\n3. \u6dfb\u52a0web.xml\u914d\u7f6e\u7c7b\npublic class WebInit implements WebApplicationInitializer {\n\n    public void onStartup(ServletContext servletContext) throws ServletException {\n        AnnotationConfigWebApplicationContext applicationContext = new AnnotationConfigWebApplicationContext();\n        applicationContext.register(SpringMVCConfig.class);\n        ServletRegistration.Dynamic springmvc= servletContext.addServlet(&quot;springmvc&quot;,new DispatcherServlet(applicationContext));\n        springmvc.addMapping(&quot;/&quot;);\n        springmvc.setLoadOnStartup(1);\n    }\n}\n\n\u5bf9\u6bd4\u4f7f\u7528web.xml\n&lt;servlet&gt;\n        &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n            &lt;param-value&gt;classpath:springmvc.xml&lt;/param-value&gt;\n        &lt;/init-param&gt;\n        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\n    &lt;/servlet&gt;\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;/&lt;/url-pattern&gt;\n    &lt;/servlet-mapping&gt;\n\n\u5bf9\u6bd4\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0c\u4f7f\u7528xml\u6216\u8005\u7c7b\u7684\u65b9\u5f0f\uff0c\u5176\u672c\u8d28\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6dfb\u52a0\u5165\u4e00\u4e2aSpringMVC\u4e2d\u592e\u5904\u7406\u5668\uff0c\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\u548c\u521d\u59cb\u5316\u542f\u52a8\u4f18\u5148\u7ea7\uff0c\u6700\u540e\u8fdb\u884cmapping\u3002\u5173\u4e8e\u91cc\u9762\u66f4\u6df1\u5c42\u7684\u4e1c\u897f\uff0c\u6211\u5e76\u4e0d\u89c9\u5f97\u81ea\u5df1\u591a\u61c2\uff0c\u4e5f\u4e0d\u60f3\u5728\u8fd9\u91cc\u957f\u7bc7\u5927\u8bba\u3002\n\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5199Spring\u914d\u7f6e\u7c7b\uff0c\u5982\u679c\u4f60\u7b80\u5355\u5f00\u53d1\u8fc7SSM\u6574\u5408\u7684\u9879\u76ee\uff0c\u4f60\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u76f4\u63a5\u5c06\u6240\u6709\u914d\u7f6e\u653e\u5230 SpringMVC \u7684\u914d\u7f6e\u4e2d\u6765\u5b8c\u6210\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n4. \u6dfb\u52a0HelloController\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;/hello&quot;)\n    public String hello() {\n        return &quot;Hello,World&quot;;\n    }\n}\n\n@RestController\u662f@ResponseBody+@Controller\u7684\u7ec4\u5408\uff0c\n\u58f0\u660e\u4e3a\u63a7\u5236\u7c7b\n\u4e14\u7c7b\u4e0b\u7684\u6240\u6709\u65b9\u6cd5\u7684\u8fd4\u56de\u503c(return)\u7531Java\u5bf9\u8c61\u8f6c\u4e3ajson\u683c\u5f0f\u8f93\u51fa\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u76f4\u63a5\u770b\u5230\u4e86\u5185\u5bb9\u4e86\u3002\n5. \u542f\u52a8\u9879\u76ee\n\u6211\u4eec\u9700\u8981\u524d\u5f80pom.xml\u4e2d\u52a0\u5165\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\uff0c\u8bbe\u7f6e\u6253\u5305\u65b9\u5f0f\u3002\u4e4b\u540e\u653e\u5165Tomcat\u5bb9\u5668\u542f\u52a8\u9879\u76ee\u5373\u53ef\uff0c\u5173\u4e8e\u5982\u4f55\u5728idea\u4e2d\u52a0\u5165Tomcat\u9879\u76ee\uff0c\u8fd9\u91cc\u63a8\u8350\u81ea\u5df1\u4e4b\u524d\u5199\u8fc7\u7684\u4e00\u7bc7\u975e\u5e38\u8be6\u7ec6\u7684\u6f14\u793a\u3002\n\n&lt;packaging&gt;war&lt;/packaging&gt;\n\u5982\u679c\u4f60\u542f\u52a8\u65f6\u9996\u9875\u662f404\u8bf4\u660e\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u8fd9\u65f6\u5019\u5728\u7f51\u5740\u540e\u52a0\u5165hello\u5c31\u770b\u5230\u6211\u4eec\u8f93\u51fa\u7684 Hello\uff0cWorld \u4e86\u3002\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SSM", "slug": "SSM", "permalink": "/category/SSM/"}], "tags": [{"name": "SpringMVC", "slug": "SpringMVC", "permalink": "/tag/SpringMVC/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}]}, {"title": "javaweb\u9879\u76ee\u4f7f\u7528Tomcat\uff08idea\uff09", "date": "2020-03-03T18:09:00-00.00", "path": "/archives/tomcat-javaweb/", "text": "javaweb\u9879\u76ee\u4f7f\u7528Tomcat\uff08idea\uff09\n1. \u70b9\u51fbAdd Configuration\n\n2. \u70b9\u51fb+\u53f7\n\n3. \u9009\u62e9Tomcat\u7684\u672c\u5730\u4f4d\u7f6e\n\n4. \u6dfb\u52a0\u5165war\u5305\n\n5. \u4fee\u6539\u8def\u5f84\n\n6. \u70b9\u51fbOK\uff0c\u8fd0\u884c\u9879\u76ee\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/tag/JavaWeb/"}, {"name": "\u8e29\u5751", "slug": "\u8e29\u5751", "permalink": "/tag/\u8e29\u5751/"}, {"name": "\u6574\u5408", "slug": "\u6574\u5408", "permalink": "/tag/\u6574\u5408/"}]}, {"title": "JavaWeb\u4f7f\u7528response\u7684\u4e2d\u6587\u4e71\u7801\u95ee\u9898", "date": "2020-03-03T15:34:00-00.00", "path": "/archives/encoding-javaweb/", "text": "\u539f\u751fJavaWeb\u4f7f\u7528response\u7684\u4e2d\u6587\u4e71\u7801\u95ee\u9898\n\u7ee7\u627fHttpServlet\u540e\u91cd\u5199\u65b9\u6cd5\u65f6(\u5982doGet)\u52a0\u5165\u4e24\u884c\u4ee3\u7801\u8bbe\u7f6eutf-8\u7f16\u7801\nresp.setContentType(&quot;application/json;charset=utf-8&quot;);\nresp.setCharacterEncoding(&quot;utf-8&quot;);\n//\u9700\u8981\u52a0\u4e0a\u65b9\u6cd5\u7684\u6700\u4e0a\u9762,\u4e5f\u5c31\u662f\u5728\u65b9\u6cd5\u5185\u5bb9\u7684\u9996\u884c.\n\n\u5b8c\u6574\u793a\u4f8b\uff1a\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.setContentType(&quot;application/json;charset=utf-8&quot;);\n        resp.setCharacterEncoding(&quot;utf-8&quot;);\n        response.setContentType(&quot;text/html&quot;);\n        PrintWriter out = response.getWriter();\n        out.println(&quot;&lt;HTML&gt;&quot;);\n        out.println(&quot;&lt;HEAD&gt;&lt;TITLE&gt;Hello World&lt;/TITLE&gt;&lt;/HEAD&gt;&quot;);\n        out.println(&quot;&lt;BODY&gt;&quot;);\n        out.println(&quot;\u6211\u7ec8\u4e8e\u53ef\u4ee5\u663e\u793a\u4e2d\u6587\u4e86&quot;);\n        out.println(&quot;&lt;/BODY&gt;&lt;/HTML&gt;&quot;);\n    }\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/category/JavaWeb/"}], "tags": [{"name": "JavaWeb", "slug": "JavaWeb", "permalink": "/tag/JavaWeb/"}, {"name": "\u8e29\u5751", "slug": "\u8e29\u5751", "permalink": "/tag/\u8e29\u5751/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}]}, {"title": "\u8bb0-\u7ef4\u57fa\u7ad9\u7684\u642d\u5efa", "date": "2020-03-02T21:20:00-00.00", "path": "/archives/wike-building/", "text": "\u8bb0-\u7ef4\u57fa\u7ad9\u7684\u642d\u5efa\n\u6211\u81ea\u8ba4\u4e3a\u4e2a\u4ebaWiki\u4e24\u5927\u6838\u5fc3\uff1a\u5206\u7c7b\u6574\u7406\uff0c\u641c\u7d22\u67e5\u6f0f\n\u8fd9\u4e0e\u4e2a\u4eba\u535a\u5ba2\u76f8\u8f85\u76f8\u6210\uff0c\u4e5f\u662f\u5728\u5b9a\u4f4d\u4e0a\u7684\u4e0d\u540c\u5e26\u6765\u4e86\u672c\u8d28\u7684\u5dee\u5f02\u3002\n\u672c\u8bb0\u5185\u5bb9\u4e3b\u8981\u56f4\u7ed5\u7ef4\u57fa\u7ad9\u642d\u5efa\u800c\u8c08\uff0c\u4e0d\u518d\u5c55\u5f00\u7ec6\u8bf4\u5176\u4ed6\u4e86\u3002\n\u539f\u672c\u6211\u662f\u6253\u7b97\u4f7f\u7528hexo\u8fd9\u79cd\u751f\u6210\u5668\u642d\u5efa\u4e00\u4e2a\u77e5\u8bc6\u5e93\u5e76\u6258\u7ba1\u4e8eGitee\uff0c\u672c\u5730\u8fd0\u4f5c\u534a\u4e2a\u6708\u7684hexo\u6700\u7ec8\u5728\u6211\u5fc3\u76ee\u4e2d\u5931\u53bb\u4e86\u5730\u4f4d\u3002\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\uff0c\u6211\u4e5f\u653e\u5f03\u4e86\u4f7f\u7528Gitee\u6258\u7ba1\u9759\u6001\u535a\u5ba2\u7684\u60f3\u6cd5\u3002\u540e\u6765\u6211\u770b\u5230\u4e86\u4e00\u4f4d\u8001\u670b\u53cb\u7684\u6587\u7ae0 \u5b8c\u5168\u4f7f\u7528 GitHub \u5199\u535a\u5ba2  \u7ed9\u4e86\u6211\u5f88\u5927\u7684\u79d1\u666e\u3002\n\u4e8e\u662f\u6211\u4eec\u770b\u5230\u7684\u5fc3\u6e56\u7ef4\u57fa\u5c31\u8bde\u751f\u4e86\uff0c\u4f7f\u7528Github\u6258\u7ba1\u6e90\u7801\u548c\u9759\u6001\u9875\u9762\uff0c\u8fd9\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5206\u652f\u6765\u5b9e\u73b0\u3002\u57fa\u4e8e GitHub Actions \u7684\u81ea\u52a8\u6784\u5efa\uff0c\u80fd\u591f\u5168\u81ea\u52a8\u7684\u66f4\u65b0\u535a\u5ba2\u3002\u4f7f\u7528\u9ad8\u6548\u5feb\u901f\u7684js\u00adDe\u00adlivr\u6765\u52a0\u901f\u8d44\u6e90\u8bbf\u95ee\u3002\u81ea\u7531\u91c7\u7528\u672c\u5730Typora\u548cVsCode\u4e66\u5199\u535a\u5ba2\uff0c\u4e00\u5957\u5b8c\u6574\u7684Git\u81ea\u52a8\u5904\u7406\uff0c\u4f7f\u7528PigGo\u622a\u56fe\u81ea\u52a8\u4e0a\u4f20\u53c8\u62cd\u4e91\u5e76\u590d\u5236\u4e3aMarkdown\u683c\u5f0f\uff0c\u51e0\u4e4e\u4e0d\u9700\u8981\u4eba\u5de5\u7684\u64cd\u4f5c\u4e0e\u7ef4\u62a4\u3002\n\u5982\u679c\u4f60\u60f3\u62e5\u6709\u672c\u5730\u7684\u535a\u5ba2\u751f\u6210\u5668\uff0c\u6211\u662f\u975e\u5e38\u63a8\u8350hexo\u7684\u3002\n\u53e6\u5916 Maverick \u8fd9\u4e2a\u4f7f\u7528\u4e86Python\u5f00\u53d1\u7684\u9759\u6001\u9875\u9762\u751f\u6210\u5668\u4e5f\u7edd\u4e0d\u4f1a\u8ba9\u4f60\u5931\u671b\u3002\n\u5f53\u7136\u6211\u8bf4\u4e86\u4e00\u5927\u5806\uff0c\u4f60\u53ef\u80fd\u8fd8\u662f\u6ca1\u660e\u767d\uff0c\u7b80\u5355\u8bf4\u642d\u5efa\u8fd9\u6837\u7684\u4e00\u4e2a\u7ef4\u57fa\u7ad9\u9664\u4e86\u57df\u540d\u5916\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u6210\u672c\uff0c\u5f53\u7136\u8fd9\u6837\u7684\u57df\u540dGithub\u4e5f\u4f1a\u63d0\u4f9b\u7ed9\u4f60\uff0c\u6240\u4ee5\u4f60\u4e0d\u51e1\u5927\u80c6\u4e00\u8bd5\u3002\n\n\u76f8\u5173\u6559\u7a0b \u793a\u4f8b\u4ed3\u5e93 \uff08\u52a1\u5fc5\u524d\u5f80\u793a\u4f8b\u4ed3\u5e93\uff0c\u51e0\u4e4e\u505a\u5230\u4e86\u5f00\u7bb1\u5373\u7528\uff09\n\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4ed3\u5e93 fork \u5230\u81ea\u5df1\u7684\u8d26\u6237\u4e0b\uff08\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Fork \u6309\u94ae\uff09\uff0c\u7136\u540e\u6309\u7167\u672c\u6587\u6863\u4f59\u4e0b\u7684\u5185\u5bb9\u64cd\u4f5c\u4e00\u904d\uff0c\u5c31\u77e5\u9053\u8be5\u5982\u4f55\u4f7f\u7528\u4e86\u3002\nFork \u4e4b\u540e\u6682\u65f6\u4e0d\u8981\u4fee\u6539\u4ed3\u5e93\u540d\u79f0\uff0c\u4fdd\u6301 Blog-With-GitHub-Boilerplate\n\n\u7b2c\u4e00\u6b65\uff1a\u4e3a\u4ed3\u5e93\u5f00\u542f Pages \u670d\u52a1\n\u8fdb\u5165 Fork \u7684\u4ed3\u5e93\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fd9\u4e2a Settings \u6309\u94ae\uff0c\u627e\u5230 GitHub Pages \u76f8\u5173\u8bbe\u7f6e\uff1a\n\n\n\u8bbe\u7f6e\u53d1\u5e03\u6765\u6e90\u4e3a gh-pages branch\uff0c\u7a0d\u7b49\u7247\u523b\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c https://&lt;\u7528\u6237\u540d&gt;.github.io/Blog-With-GitHub-Boilerplate \u8fd9\u6837\u7684\u94fe\u63a5\u8bbf\u95ee\u4f60\u7684\u7f51\u7ad9\u4e86\u3002\n\u7b2c\u4e8c\u6b65\uff1a\u4e3a\u4ed3\u5e93\u6dfb\u52a0\u4e00\u4e2a token\n\u4e3a\u4e86\u8ba9 GitHub Actions \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u4f60\u7684\u7f51\u7ad9\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a Token\u3002\u70b9\u51fb\u8fd9\u4e2a\u7f51\u5740\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Generate new token\uff0c\u8d77\u4e2a\u540d\u5b57\u5e76\u52fe\u9009 repo \u590d\u9009\u6846\uff1a\n\n\u70b9\u51fb\u9875\u811a\u7684 Generate Token\uff0c\u65b0\u7684 token \u4f1a\u663e\u793a\u51fa\u6765\uff0c\u628a\u5b83\u590d\u5236\u4e0b\u6765\uff0c\u4fdd\u5b58\u597d\u3002\u5173\u4e86\u8fd9\u4e2a\u9875\u9762\u4f60\u5c31\u6c38\u8fdc\u4e5f\u770b\u4e0d\u5230\u5b83\u4e86\u3002\n\n\u56de\u5230\u4ed3\u5e93\u4e2d\uff0c\u8fdb\u5165 Setting\uff0c\u5750\u6807\u627e\u5230 Secrets \u9009\u9879\u5361\uff0c\u65b0\u5efa\u4e00\u4e2a\u540d\u53eb PERSONAL_TOKEN \u7684 secret\uff1a\n\n\ud83d\udca1 \u4ece\u8fd9\u91cc\u5f00\u59cb\u6211\u4eec\u4f1a\u5bf9\u4ed3\u5e93\u7684\u6587\u4ef6\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u5982\u679c\u4f60\u7535\u8111\u4e0a\u6709\u5b89\u88c5 Git\uff0c\u53ef\u4ee5\u628a\u4ed3\u5e93 clone \u5230\u672c\u5730\uff0c\u5b8c\u6210\u4fee\u6539\u540e\u63d0\u4ea4\u5e76 push \u56de\u53bb\uff1b\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u7f16\u8f91\u6587\u4ef6\u3002\n\u7b2c\u4e09\u6b65\uff1a\u5c1d\u8bd5\u4fee\u6539\u4e00\u4e0b\u7f51\u7ad9\u8bbe\u7f6e\n\u65b0 fork \u7684\u4ed3\u5e93\u53ef\u80fd\u9700\u8981\u624b\u52a8\u6253\u5f00 Actions\u3002\u70b9\u51fb\u4ed3\u5e93\u9876\u90e8\u7684 Actions \u6309\u94ae\uff1a\n\n\u5982\u679c\u51fa\u73b0\u4e86\u4ee5\u4e0b\u63d0\u793a\uff0c\u70b9\u51fb \"I understand my workflows, go ahead and run them\".\n\n\n\u56de\u5230\u4ed3\u5e93\u9996\u9875\uff0c\u70b9\u51fb conf.py \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb\u7f16\u8f91\u6309\u94ae\uff1a\n\n\n\u4e3a\u4f60\u7684\u7f51\u7ad9\u8d77\u4e2a\u540d\u5b57\uff0c\u586b\u5199\u5230 site_name \u8fd9\u91cc\n\u4fee\u6539 author\uff0cemail\uff0cdescription \u7b49\u9009\u9879\u4e3a\u4f60\u7684\u5185\u5bb9\n\u5176\u5b83\u9009\u9879\u4e5f\u53ef\u4ee5\u968f\u610f\u4fee\u6539\uff08\u6682\u65f6\u4e0d\u8981\u4fee\u6539 site_prefix \u9009\u9879\uff09\n\n\u70b9\u51fb\u9875\u811a\u7684 Commit changes\uff0c\u7a0d\u7b49\u7247\u523b\u518d\u8bbf\u95ee https://&lt;\u7528\u6237\u540d&gt;.github.io/Blog-With-GitHub-Boilerplate \u770b\u662f\u4e0d\u662f\u5df2\u7ecf\u66f4\u65b0\u4e86\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u70b9\u51fb\u4ed3\u5e93\u6807\u9898\u4e0b\u65b9\u7684 Actions \u6309\u94ae\uff0c\u5728\u91cc\u9762\u67e5\u770b\u81ea\u52a8\u6784\u5efa\u72b6\u6001\u3002\n\u7b2c\u56db\u6b65\uff1a\u5c1d\u8bd5\u53d1\u5e03\u65b0\u7684\u5185\u5bb9\n\u70b9\u51fb\u8fdb\u5165\u4ed3\u5e93\u7684 src \u6587\u4ef6\u5939\uff0c\u5e76\u70b9\u51fb Create new file\n\n\u586b\u5199\u6587\u4ef6\u540d\u4ee5\u53ca\u5185\u5bb9\u3002\u6587\u4ef6\u540d\u53ef\u4ee5\u8d77 \u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0.md\uff0c\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\u8fd9\u6837\u7684\uff1a\n\n---\nlayout: post\ntitle: \u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\nslug: my-first-awesome-post\ndate: 2019-12-17 20:34\nstatus: publish\nauthor: &lt;\u586b\u5199\u4f60\u7684\u540d\u5b57&gt;\ncategories: \n  - \u9ed8\u8ba4\u5206\u7c7b\ntags: \n  - \u535a\u5ba2\n  - GitHub\nexcerpt: Hello World!\n---\n\n\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n\u70b9\u51fb\u9875\u811a\u7684 Commit new file\uff0c\u7a0d\u7b49\u7247\u523b\u518d\u8bbf\u95ee https://&lt;\u7528\u6237\u540d&gt;.github.io/Blog-With-GitHub-Boilerplate\uff0c\u53ef\u89c1\u65b0\u6587\u7ae0\u5df2\u7ecf\u53d1\u5e03\u4e86\uff01\n\u7b2c\u4e94\u6b65\uff1a\u4f7f\u7528 jsDelivr \u4f5c\u4e3a\u535a\u5ba2\u7684 CDN \u670d\u52a1\n\u56de\u5230\u4ed3\u5e93\u9996\u9875\uff0c\u70b9\u51fb conf.py \u6587\u4ef6\uff0c\u7136\u540e\u70b9\u51fb\u7f16\u8f91\u6309\u94ae\u3002\u4fee\u6539 enable_jsdelivr \u5982\u4e0b\uff1a\n\nenable_jsdelivr = {\n    \"enabled\": True,\n    \"repo\": \"&lt;\u4f60\u7684\u7528\u6237\u540d&gt;/Blog-With-GitHub-Boilerplate@gh-pages\"\n}\n\u70b9\u51fb Commit changes\u3002\u7136\u540e\u4fee\u6539\u4f60\u521a\u624d\u6dfb\u52a0\u7684\u6587\u7ae0\uff0c\u5728\u91cc\u9762\u63d2\u5165\u4e00\u5f20\u4ed3\u5e93\u4e2d\u7684\u56fe\u7247\uff1a\n\n\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n\n![\u5e7d\u7075\u516c\u4e3b\u5267\u7167](./images/Mononoke_Hime.jpg)\n\u53d1\u5e03\u540e\u7a0d\u7b49\u7247\u523b\u518d\u8bbf\u95ee\u4f60\u7684\u7f51\u7ad9\uff0c\u6b64\u65f6\u7f51\u7ad9\u7684\u56fe\u7247\u90fd\u901a\u8fc7 jsDelivr \u4f20\u8f93\u7684\u3002\u4e0d\u4fe1\u7684\u8bdd\u5728\u56fe\u7247\u4e0a\u53f3\u952e\u9009\u62e9\u300c\u5728\u65b0\u6807\u7b7e\u9875\u4e2d\u6253\u5f00\u56fe\u7247\u300d\uff0c\u770b\u94fe\u63a5\u662f\u5426\u4ee5 cdn.jsdelivr.net \u5f00\u5934\u3002\n\u8981\u63d2\u5165\u4f60\u81ea\u5df1\u7684\u56fe\u7247\uff0c\u8bf7\u628a\u56fe\u7247\u4e0a\u4f20\u5230 src/images \u6587\u4ef6\u5939\u91cc\uff0c\u7136\u540e\u5728\u6587\u7ae0\u4e2d\u4f7f\u7528 Markdown \u8bed\u6cd5\u5f15\u7528\u5373\u53ef\u3002\n\u7b2c\u516d\u6b65\uff1a\u8fdb\u884c\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u4e0e\u521b\u4f5c\n\u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u81ea\u5b9a\u4e49\u7f51\u7ad9\u3001\u6dfb\u52a0\u6587\u7ae0\u4e0e\u4fee\u6539\u6587\u7ae0\u3002\u63a5\u4e0b\u6765\u5c31\u8be5\u4f60\u81ea\u7531\u53d1\u6325\u4e86\u3002\u4ed3\u5e93\u4e2d conf.py \u91cc\u9762\u7684\u5185\u5bb9\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4fee\u6539\uff0c\u7279\u522b\u8981\u6ce8\u610f\u683c\u5f0f\uff0c\u6bd4\u5982\u5f15\u53f7\u8981\u4f7f\u7528\u82f1\u6587\u5f15\u53f7\u4e4b\u7c7b\u7684\u3002\u9488\u5bf9\u7f51\u7ad9\u7684\u8bbe\u7f6e\u9879\u8bf7\u53c2\u8003 Maverick/README.md\u3002\n\u4ed3\u5e93\u81ea\u5e26\u7684 about.md \u4e0e Typography \u90fd\u53ef\u6539\u53ef\u5220\uff0c\u5168\u770b\u4f60\u3002\n\u4ed3\u5e93src/static \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a logo.png\uff0c\u8fd9\u662f\u793a\u4f8b logo\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u4e0a\u4f20\u65b0\u7684 logo \u56fe\u7247\uff0c\u6700\u597d\u662f\u65b9\u5f62\u7684\u56fe\u7247\uff0c\u7136\u540e\u5728 conf.py \u4e2d\u4fee\u6539 site_logo \u4e3a \"${static_prefix}\u65b0\u7684logo.png\" \u5373\u53ef\u3002\n\u73b0\u5728\u53ef\u4ee5\u628a\u4ed3\u5e93\u540d\u79f0\u6539\u6210\u4f60\u60f3\u8981\u7684\u540d\u5b57\u4e86\u3002\u6539\u4e86\u4e4b\u540e\uff0c\u8bb0\u5f97\u5c06 conf.py \u4e2d\u7684 site_prefix \u8bbe\u7f6e\u4e3a \"/&lt;\u65b0\u7684\u4ed3\u5e93\u540d&gt;/\"\uff0c\u5e76\u4e14\u5bf9\u5e94\u4fee\u6539 enable_jsdelivr\u9009\u9879\u7684\u5185\u5bb9\u3002\n\u5982\u679c\u8981\u5c06\u4ed3\u5e93\u540d\u4fee\u6539\u4e3a &lt;\u7528\u6237\u540d&gt;.github.io \u7684\u5f62\u5f0f\uff0c\u8bf7\u770b About-User-Pages\u3002\n\u7b2c\u4e03\u6b65\uff1a\u5728\u672c\u5730\u8fdb\u884c\u521b\u4f5c\n\u4f60\u53ef\u4ee5\u628a\u4ed3\u5e93 clone \u5230\u7535\u8111\u4e0a\uff0c\u4fee\u6539\u540e\u518d\u5c06\u4fee\u6539 push \u56de\u53bb\u3002\u5982\u679c\u4f60\u7684\u7535\u8111\u4e0a\u6709\u5b89\u88c5 make\uff0c\u5219\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u65b9\u4fbf\u4e00\u4e9b\uff1a\n\u5347\u7ea7 Maverick\uff1a\n\nmake mvrk\n\u5347\u7ea7\u4e3b\u9898\uff1a\n\nmake theme\n\u4fee\u6539\u7ad9\u70b9\uff1a\n\nmake msg=\"Add some change\" site\n\u5173\u4e8e\u5982\u4f55\u5728\u7535\u8111\u4e0a\u4f7f\u7528 Git\n\u5982\u679c\u4f60\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u8fc7 GitHub\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7684\u8bbe\u7f6e\u3002\u5982\u679c\u4f60\u7684\u7535\u8111\u662f macOS \u6216\u8005 Linux\uff0cgit \u53ef\u80fd\u662f\u9ed8\u8ba4\u5b89\u88c5\u5728\u7535\u8111\u4e0a\u7684\uff1b\u5982\u679c\u662f Windows\uff0c\u5219\u9700\u8981\u5230\u8fd9\u91cc\u4e0b\u8f7d\u5408\u9002\u7684 Git \u5b89\u88c5\u5230\u7535\u8111\u4e0a\u3002\u8bb0\u5f97\u5b89\u88c5\u65f6\u9009\u4e2d\u5c06 git \u6dfb\u52a0\u5230 PATH\u3002\n\u6587\u4ef6\u7ba1\u7406\u5668\u4e2d\u53f3\u952e\uff0c\u70b9\u51fb Git Bash Here\uff0c\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\u8f93\u5165\uff1a\n\ngit config --global user.name \"\u4f60\u7684GitHub\u7528\u6237\u540d\"\ngit config --global user.email \"\u4f60\u7684GitHub\u90ae\u7bb1\"\ngit config --global credential.helper store\n\u4e4b\u540e\u5230\u4ed3\u5e93\u53f3\u4e0a\u89d2\u7684 Clone or download \u90a3\u91cc\uff0c\u590d\u5236\u4ed3\u5e93\u94fe\u63a5\uff08\u5efa\u8bae\u4f7f\u7528 HTTPS\uff09\uff1a\n\n\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\uff1a\n\ngit clone &lt;\u4ed3\u5e93\u94fe\u63a5&gt;\n\u82e5\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\u5219\u8f93\u5165\u5c31\u884c\u3002\u8fd9\u6837\u4ed3\u5e93\u5c31\u514b\u9686\u5230\u4e86\u672c\u5730\u3002\u5728\u4ed3\u5e93\u4e2d\u8fdb\u884c\u4fee\u6539\u540e\uff0c\u8fd9\u6837\u63d0\u4ea4\u6587\u4ef6\uff1a\n\n# cd \u5230\u4ed3\u5e93\u6587\u4ef6\u5939\u540e\n\ngit add .\ngit commit -m \"\u6dfb\u52a0\u4fee\u6539\"\ngit push\n\u8fd9\u6837\u672c\u5730\u7684\u4fee\u6539\u5c31\u63a8\u9001\u5230\u4e86 GitHub\u3002\n\n\u7b2c\u516b\u6b65\uff1a\u7ed1\u5b9a\u81ea\u5b9a\u4e49\u57df\u540d\n\u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u57df\u540d\uff0c\u8bf7\u5728\u57df\u540d\u89e3\u6790\u5546\u90a3\u91cc\u5c06\u57df\u540d CNAME \u8bbe\u7f6e\u4e3a &lt;\u7528\u6237\u540d&gt;.github.io\uff0c\u7136\u540e\u56de\u5230\u4ed3\u5e93\uff0c\u5728 src/static \u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540d\u53eb CNAME \u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u586b\u5199\u4f60\u81ea\u5df1\u7684\u57df\u540d\u3002\u7136\u540e\u5728 conf.py \u4e2d\u4fee\u6539 site_prefix \u4e3a \"/\"\u3002\u7a0d\u7b49\u7247\u523b\uff0c\u4f60\u7684\u7f51\u7ad9\u5c31\u80fd\u901a\u8fc7\u4f60\u7684\u57df\u540d\u8bbf\u95ee\u4e86\u3002\n", "categories": [{"name": "\u5efa\u7ad9", "slug": "\u5efa\u7ad9", "permalink": "/category/\u5efa\u7ad9/"}], "tags": [{"name": "Wiki", "slug": "Wiki", "permalink": "/tag/Wiki/"}, {"name": "\u5efa\u7ad9\u7b14\u8bb0", "slug": "\u5efa\u7ad9\u7b14\u8bb0", "permalink": "/tag/\u5efa\u7ad9\u7b14\u8bb0/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2020-03-02T15:34:00-00.00", "path": "/archives/my-first-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u7ef4\u57fa\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n\u5e7d\u7075\u516c\u4e3b\u5267\u7167\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/tag/GitHub/"}]}, {"title": "SpringBoot\u5f00\u53d1\u4e2d\u70ed\u90e8\u7f72\u914d\u7f6e", "date": "2020-03-01T15:34:00-00.00", "path": "/archives/devtools-springboot/", "text": "\u7b2c\u4e00\u6b65\uff1a\u6dfb\u52a0 devtools \u4f9d\u8d56\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n\u8981\u786e\u4fdd\u4f9d\u8d56\u6210\u529f\u5bfc\u5165\n\n\u7b2c\u4e8c\u6b65\uff0c\u6253\u5f00\u8bbe\u7f6e\uff08ctrl+alt+s\uff09\n\u641c\u7d22 Compiler \u52fe\u9009\u4e0a Build project automatically\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/category/SpringBoot/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}, {"name": "\u70ed\u90e8\u7f72", "slug": "\u70ed\u90e8\u7f72", "permalink": "/tag/\u70ed\u90e8\u7f72/"}]}, {"title": "SpringMvc\u4e2d\u9759\u6001\u8d44\u6e90\u88ab\u62e6\u622a", "date": "2020-02-13T21:02:00-00.00", "path": "/archives/mvc-Default/", "text": "\u7b2c\u4e00\u79cd\uff1a\u5728web.xml\u4e2d\u914d\u7f6e\u4e2d\u6dfb\u52a0\n&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;default&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;default&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;*.gif&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;default&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;*.png&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;default&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n\n\u7b2c\u4e8c\u79cd\uff1a\u5728SpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\n&lt;mvc:resources mapping=&quot;/js/**&quot; location=&quot;/js/&quot;/&gt;\n&lt;mvc:resources mapping=&quot;/css/**&quot; location=&quot;/css/&quot;/&gt;\n&lt;mvc:resources mapping=&quot;/img/**&quot; location=&quot;/img/&quot;/&gt;\n\n\u7b2c\u4e09\u79cd(\u63a8\u8350)\uff1a\u5728SpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\n&lt;mvc:default-servlet-handler/&gt;\n\n\u7b2c\u56db\u79cd\uff1a\u4fee\u6539SpringMVC\u7684\u62e6\u622a\u8def\u5f84\n\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f/\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u7684\u94fe\u63a5\u7684\u62e6\u622a\uff0c\n\u53ef\u4ee5\u4fee\u6539\u6210.do\u6216\u8005.action\u6216\u8005\u5176\u4ed6\uff0c\u8fd9\u6837\u9759\u6001\u8d44\u6e90\u5c31\u4e0d\u4f1a\u62e6\u622a\u4e86\n&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;spring-mvc&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "SSM", "slug": "SSM", "permalink": "/category/SSM/"}], "tags": [{"name": "SpringMVC", "slug": "SpringMVC", "permalink": "/tag/SpringMVC/"}, {"name": "\u6280\u672f\u7b14\u8bb0", "slug": "\u6280\u672f\u7b14\u8bb0", "permalink": "/tag/\u6280\u672f\u7b14\u8bb0/"}]}, {"title": "idea\u80cc\u666f\u56fe\u7247\u53ca\u7b80\u5316\u63d2\u4ef6", "date": "2020-02-10T18:08:00-00.00", "path": "/archives/360/", "text": "\u80cc\u666f\u56fe\u7247\n\n\u6309\u4f4fCtrl+Alt+s \u6253\u5f00\u63d2\u4ef6\u9762\u677f,\u641c\u7d22 background-image-plus\n\n\n\n\u5b89\u88c5\u5b8c\u6210\u540e,\u53ef\u4ee5\u5728\u5de5\u5177\u680f\u4e2dView\u4e2d\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247\n\n\n\nLombok\n\u5728\u4e4b\u524dMybatis\u7b14\u8bb0\u4e2d\u4e5f\u6709\u7b80\u5355\u63d0\u8fc7\n\n\u5b89\u88c5\u5b8c\u540e\u5728pom\u4e2d\u6dfb\u52a0\u4f9d\u8d56\n\n```\n &lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.10&lt;/version&gt;\n        &lt;/dependency&gt;\n```\n\n\n\u6d4b\u8bd5\u4f7f\u7528(\u5e38\u7528\u6ce8\u89e3)\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}, {"name": "Java\u57fa\u7840", "slug": "Java\u57fa\u7840", "permalink": "/category/Java\u57fa\u7840/"}], "tags": [{"name": "\u63d2\u4ef6", "slug": "\u63d2\u4ef6", "permalink": "/tag/\u63d2\u4ef6/"}, {"name": "idea", "slug": "idea", "permalink": "/tag/idea/"}]}, {"title": "Hello World!", "date": "2019-12-18T16:50:00-00.00", "path": "/archives/typography/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n![][1]\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2020-03-02T16:48:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: jialna@qq.com\n", "categories": [], "tags": []}]}